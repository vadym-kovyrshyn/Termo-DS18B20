Version 3.2 HI-TECH Software Intermediate Code
"45 prog.c
[s S57 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 `ui 1 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . Init Send_Address CountAddressBytes SendConvertTemp PauseValue SendGetTemp ReadData CountDataBytes Error ActiveProcess ]
"301 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f628a.h
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"307
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"317
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . TMR0IF . TMR0IE ]
"306
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"324
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"1181
[v _EEADR `Vuc ~T0 @X0 0 e@155 ]
"1175
[v _EEDATA `Vuc ~T0 @X0 0 e@154 ]
"1193
[s S53 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . RD WR WREN WRERR ]
"1192
[u S52 `S53 1 ]
[n S52 . . ]
"1200
[v _EECON1bits `VS52 ~T0 @X0 0 e@156 ]
"1224
[v _EECON2 `Vuc ~T0 @X0 0 e@157 ]
"1486
[v _TRISA3 `Vb ~T0 @X0 0 e@1067 ]
[v F782 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic.h
[v __delay `JF782 ~T0 @X0 0 e ]
[p i __delay ]
"1386 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f628a.h
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"1440
[v _T0IF `Vb ~T0 @X0 0 e@90 ]
"55
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"221
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"160
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"1488
[v _TRISA4 `Vb ~T0 @X0 0 e@1068 ]
"1384
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"1382
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
[p mainexit ]
"812
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"881
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"942
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"516
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"743
[v _CMCON `Vuc ~T0 @X0 0 e@31 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16f628a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f628a.h
[; ;pic16f628a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f628a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f628a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f628a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 72: typedef union {
[; ;pic16f628a.h: 73: struct {
[; ;pic16f628a.h: 74: unsigned C :1;
[; ;pic16f628a.h: 75: unsigned DC :1;
[; ;pic16f628a.h: 76: unsigned Z :1;
[; ;pic16f628a.h: 77: unsigned nPD :1;
[; ;pic16f628a.h: 78: unsigned nTO :1;
[; ;pic16f628a.h: 79: unsigned RP :2;
[; ;pic16f628a.h: 80: unsigned IRP :1;
[; ;pic16f628a.h: 81: };
[; ;pic16f628a.h: 82: struct {
[; ;pic16f628a.h: 83: unsigned :5;
[; ;pic16f628a.h: 84: unsigned RP0 :1;
[; ;pic16f628a.h: 85: unsigned RP1 :1;
[; ;pic16f628a.h: 86: };
[; ;pic16f628a.h: 87: struct {
[; ;pic16f628a.h: 88: unsigned CARRY :1;
[; ;pic16f628a.h: 89: };
[; ;pic16f628a.h: 90: struct {
[; ;pic16f628a.h: 91: unsigned :2;
[; ;pic16f628a.h: 92: unsigned ZERO :1;
[; ;pic16f628a.h: 93: };
[; ;pic16f628a.h: 94: } STATUSbits_t;
[; ;pic16f628a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f628a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f628a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 165: typedef union {
[; ;pic16f628a.h: 166: struct {
[; ;pic16f628a.h: 167: unsigned RA0 :1;
[; ;pic16f628a.h: 168: unsigned RA1 :1;
[; ;pic16f628a.h: 169: unsigned RA2 :1;
[; ;pic16f628a.h: 170: unsigned RA3 :1;
[; ;pic16f628a.h: 171: unsigned RA4 :1;
[; ;pic16f628a.h: 172: unsigned RA5 :1;
[; ;pic16f628a.h: 173: unsigned RA6 :1;
[; ;pic16f628a.h: 174: unsigned RA7 :1;
[; ;pic16f628a.h: 175: };
[; ;pic16f628a.h: 176: } PORTAbits_t;
[; ;pic16f628a.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f628a.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 226: typedef union {
[; ;pic16f628a.h: 227: struct {
[; ;pic16f628a.h: 228: unsigned RB0 :1;
[; ;pic16f628a.h: 229: unsigned RB1 :1;
[; ;pic16f628a.h: 230: unsigned RB2 :1;
[; ;pic16f628a.h: 231: unsigned RB3 :1;
[; ;pic16f628a.h: 232: unsigned RB4 :1;
[; ;pic16f628a.h: 233: unsigned RB5 :1;
[; ;pic16f628a.h: 234: unsigned RB6 :1;
[; ;pic16f628a.h: 235: unsigned RB7 :1;
[; ;pic16f628a.h: 236: };
[; ;pic16f628a.h: 237: } PORTBbits_t;
[; ;pic16f628a.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 282: extern volatile unsigned char PCLATH @ 0x00A;
"284
[; ;pic16f628a.h: 284: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 287: typedef union {
[; ;pic16f628a.h: 288: struct {
[; ;pic16f628a.h: 289: unsigned PCLATH :5;
[; ;pic16f628a.h: 290: };
[; ;pic16f628a.h: 291: } PCLATHbits_t;
[; ;pic16f628a.h: 292: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 301: extern volatile unsigned char INTCON @ 0x00B;
"303
[; ;pic16f628a.h: 303: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 306: typedef union {
[; ;pic16f628a.h: 307: struct {
[; ;pic16f628a.h: 308: unsigned RBIF :1;
[; ;pic16f628a.h: 309: unsigned INTF :1;
[; ;pic16f628a.h: 310: unsigned T0IF :1;
[; ;pic16f628a.h: 311: unsigned RBIE :1;
[; ;pic16f628a.h: 312: unsigned INTE :1;
[; ;pic16f628a.h: 313: unsigned T0IE :1;
[; ;pic16f628a.h: 314: unsigned PEIE :1;
[; ;pic16f628a.h: 315: unsigned GIE :1;
[; ;pic16f628a.h: 316: };
[; ;pic16f628a.h: 317: struct {
[; ;pic16f628a.h: 318: unsigned :2;
[; ;pic16f628a.h: 319: unsigned TMR0IF :1;
[; ;pic16f628a.h: 320: unsigned :2;
[; ;pic16f628a.h: 321: unsigned TMR0IE :1;
[; ;pic16f628a.h: 322: };
[; ;pic16f628a.h: 323: } INTCONbits_t;
[; ;pic16f628a.h: 324: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 378: extern volatile unsigned char PIR1 @ 0x00C;
"380
[; ;pic16f628a.h: 380: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 383: typedef union {
[; ;pic16f628a.h: 384: struct {
[; ;pic16f628a.h: 385: unsigned TMR1IF :1;
[; ;pic16f628a.h: 386: unsigned TMR2IF :1;
[; ;pic16f628a.h: 387: unsigned CCP1IF :1;
[; ;pic16f628a.h: 388: unsigned :1;
[; ;pic16f628a.h: 389: unsigned TXIF :1;
[; ;pic16f628a.h: 390: unsigned RCIF :1;
[; ;pic16f628a.h: 391: unsigned CMIF :1;
[; ;pic16f628a.h: 392: unsigned EEIF :1;
[; ;pic16f628a.h: 393: };
[; ;pic16f628a.h: 394: } PIR1bits_t;
[; ;pic16f628a.h: 395: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 434: extern volatile unsigned short TMR1 @ 0x00E;
"436
[; ;pic16f628a.h: 436: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 440: extern volatile unsigned char TMR1L @ 0x00E;
"442
[; ;pic16f628a.h: 442: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 446: extern volatile unsigned char TMR1H @ 0x00F;
"448
[; ;pic16f628a.h: 448: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 452: extern volatile unsigned char T1CON @ 0x010;
"454
[; ;pic16f628a.h: 454: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 457: typedef union {
[; ;pic16f628a.h: 458: struct {
[; ;pic16f628a.h: 459: unsigned TMR1ON :1;
[; ;pic16f628a.h: 460: unsigned TMR1CS :1;
[; ;pic16f628a.h: 461: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 462: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 463: unsigned T1CKPS :2;
[; ;pic16f628a.h: 464: };
[; ;pic16f628a.h: 465: struct {
[; ;pic16f628a.h: 466: unsigned :4;
[; ;pic16f628a.h: 467: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 468: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 469: };
[; ;pic16f628a.h: 470: } T1CONbits_t;
[; ;pic16f628a.h: 471: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 510: extern volatile unsigned char TMR2 @ 0x011;
"512
[; ;pic16f628a.h: 512: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 516: extern volatile unsigned char T2CON @ 0x012;
"518
[; ;pic16f628a.h: 518: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 521: typedef union {
[; ;pic16f628a.h: 522: struct {
[; ;pic16f628a.h: 523: unsigned T2CKPS :2;
[; ;pic16f628a.h: 524: unsigned TMR2ON :1;
[; ;pic16f628a.h: 525: unsigned TOUTPS :4;
[; ;pic16f628a.h: 526: };
[; ;pic16f628a.h: 527: struct {
[; ;pic16f628a.h: 528: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 529: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 530: unsigned :1;
[; ;pic16f628a.h: 531: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 532: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 533: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 534: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 535: };
[; ;pic16f628a.h: 536: } T2CONbits_t;
[; ;pic16f628a.h: 537: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 586: extern volatile unsigned short CCPR1 @ 0x015;
"588
[; ;pic16f628a.h: 588: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 592: extern volatile unsigned char CCPR1L @ 0x015;
"594
[; ;pic16f628a.h: 594: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 598: extern volatile unsigned char CCPR1H @ 0x016;
"600
[; ;pic16f628a.h: 600: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 604: extern volatile unsigned char CCP1CON @ 0x017;
"606
[; ;pic16f628a.h: 606: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 609: typedef union {
[; ;pic16f628a.h: 610: struct {
[; ;pic16f628a.h: 611: unsigned CCP1M :4;
[; ;pic16f628a.h: 612: unsigned CCP1Y :1;
[; ;pic16f628a.h: 613: unsigned CCP1X :1;
[; ;pic16f628a.h: 614: };
[; ;pic16f628a.h: 615: struct {
[; ;pic16f628a.h: 616: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 617: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 618: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 619: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 620: };
[; ;pic16f628a.h: 621: } CCP1CONbits_t;
[; ;pic16f628a.h: 622: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 661: extern volatile unsigned char RCSTA @ 0x018;
"663
[; ;pic16f628a.h: 663: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 666: typedef union {
[; ;pic16f628a.h: 667: struct {
[; ;pic16f628a.h: 668: unsigned RX9D :1;
[; ;pic16f628a.h: 669: unsigned OERR :1;
[; ;pic16f628a.h: 670: unsigned FERR :1;
[; ;pic16f628a.h: 671: unsigned ADEN :1;
[; ;pic16f628a.h: 672: unsigned CREN :1;
[; ;pic16f628a.h: 673: unsigned SREN :1;
[; ;pic16f628a.h: 674: unsigned RX9 :1;
[; ;pic16f628a.h: 675: unsigned SPEN :1;
[; ;pic16f628a.h: 676: };
[; ;pic16f628a.h: 677: struct {
[; ;pic16f628a.h: 678: unsigned :3;
[; ;pic16f628a.h: 679: unsigned ADDEN :1;
[; ;pic16f628a.h: 680: };
[; ;pic16f628a.h: 681: } RCSTAbits_t;
[; ;pic16f628a.h: 682: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 731: extern volatile unsigned char TXREG @ 0x019;
"733
[; ;pic16f628a.h: 733: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 737: extern volatile unsigned char RCREG @ 0x01A;
"739
[; ;pic16f628a.h: 739: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 743: extern volatile unsigned char CMCON @ 0x01F;
"745
[; ;pic16f628a.h: 745: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 748: typedef union {
[; ;pic16f628a.h: 749: struct {
[; ;pic16f628a.h: 750: unsigned CM :3;
[; ;pic16f628a.h: 751: unsigned CIS :1;
[; ;pic16f628a.h: 752: unsigned C1INV :1;
[; ;pic16f628a.h: 753: unsigned C2INV :1;
[; ;pic16f628a.h: 754: unsigned C1OUT :1;
[; ;pic16f628a.h: 755: unsigned C2OUT :1;
[; ;pic16f628a.h: 756: };
[; ;pic16f628a.h: 757: struct {
[; ;pic16f628a.h: 758: unsigned CM0 :1;
[; ;pic16f628a.h: 759: unsigned CM1 :1;
[; ;pic16f628a.h: 760: unsigned CM2 :1;
[; ;pic16f628a.h: 761: };
[; ;pic16f628a.h: 762: } CMCONbits_t;
[; ;pic16f628a.h: 763: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 812: extern volatile unsigned char OPTION_REG @ 0x081;
"814
[; ;pic16f628a.h: 814: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 817: typedef union {
[; ;pic16f628a.h: 818: struct {
[; ;pic16f628a.h: 819: unsigned PS :3;
[; ;pic16f628a.h: 820: unsigned PSA :1;
[; ;pic16f628a.h: 821: unsigned T0SE :1;
[; ;pic16f628a.h: 822: unsigned T0CS :1;
[; ;pic16f628a.h: 823: unsigned INTEDG :1;
[; ;pic16f628a.h: 824: unsigned nRBPU :1;
[; ;pic16f628a.h: 825: };
[; ;pic16f628a.h: 826: struct {
[; ;pic16f628a.h: 827: unsigned PS0 :1;
[; ;pic16f628a.h: 828: unsigned PS1 :1;
[; ;pic16f628a.h: 829: unsigned PS2 :1;
[; ;pic16f628a.h: 830: };
[; ;pic16f628a.h: 831: } OPTION_REGbits_t;
[; ;pic16f628a.h: 832: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 881: extern volatile unsigned char TRISA @ 0x085;
"883
[; ;pic16f628a.h: 883: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 886: typedef union {
[; ;pic16f628a.h: 887: struct {
[; ;pic16f628a.h: 888: unsigned TRISA0 :1;
[; ;pic16f628a.h: 889: unsigned TRISA1 :1;
[; ;pic16f628a.h: 890: unsigned TRISA2 :1;
[; ;pic16f628a.h: 891: unsigned TRISA3 :1;
[; ;pic16f628a.h: 892: unsigned TRISA4 :1;
[; ;pic16f628a.h: 893: unsigned TRISA5 :1;
[; ;pic16f628a.h: 894: unsigned TRISA6 :1;
[; ;pic16f628a.h: 895: unsigned TRISA7 :1;
[; ;pic16f628a.h: 896: };
[; ;pic16f628a.h: 897: } TRISAbits_t;
[; ;pic16f628a.h: 898: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 942: extern volatile unsigned char TRISB @ 0x086;
"944
[; ;pic16f628a.h: 944: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 947: typedef union {
[; ;pic16f628a.h: 948: struct {
[; ;pic16f628a.h: 949: unsigned TRISB0 :1;
[; ;pic16f628a.h: 950: unsigned TRISB1 :1;
[; ;pic16f628a.h: 951: unsigned TRISB2 :1;
[; ;pic16f628a.h: 952: unsigned TRISB3 :1;
[; ;pic16f628a.h: 953: unsigned TRISB4 :1;
[; ;pic16f628a.h: 954: unsigned TRISB5 :1;
[; ;pic16f628a.h: 955: unsigned TRISB6 :1;
[; ;pic16f628a.h: 956: unsigned TRISB7 :1;
[; ;pic16f628a.h: 957: };
[; ;pic16f628a.h: 958: } TRISBbits_t;
[; ;pic16f628a.h: 959: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1003: extern volatile unsigned char PIE1 @ 0x08C;
"1005
[; ;pic16f628a.h: 1005: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1008: typedef union {
[; ;pic16f628a.h: 1009: struct {
[; ;pic16f628a.h: 1010: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1011: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1012: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1013: unsigned :1;
[; ;pic16f628a.h: 1014: unsigned TXIE :1;
[; ;pic16f628a.h: 1015: unsigned RCIE :1;
[; ;pic16f628a.h: 1016: unsigned CMIE :1;
[; ;pic16f628a.h: 1017: unsigned EEIE :1;
[; ;pic16f628a.h: 1018: };
[; ;pic16f628a.h: 1019: } PIE1bits_t;
[; ;pic16f628a.h: 1020: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1059: extern volatile unsigned char PCON @ 0x08E;
"1061
[; ;pic16f628a.h: 1061: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1064: typedef union {
[; ;pic16f628a.h: 1065: struct {
[; ;pic16f628a.h: 1066: unsigned nBOR :1;
[; ;pic16f628a.h: 1067: unsigned nPOR :1;
[; ;pic16f628a.h: 1068: unsigned :1;
[; ;pic16f628a.h: 1069: unsigned OSCF :1;
[; ;pic16f628a.h: 1070: };
[; ;pic16f628a.h: 1071: struct {
[; ;pic16f628a.h: 1072: unsigned nBO :1;
[; ;pic16f628a.h: 1073: };
[; ;pic16f628a.h: 1074: struct {
[; ;pic16f628a.h: 1075: unsigned nBOD :1;
[; ;pic16f628a.h: 1076: };
[; ;pic16f628a.h: 1077: } PCONbits_t;
[; ;pic16f628a.h: 1078: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1107: extern volatile unsigned char PR2 @ 0x092;
"1109
[; ;pic16f628a.h: 1109: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1113: extern volatile unsigned char TXSTA @ 0x098;
"1115
[; ;pic16f628a.h: 1115: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1118: typedef union {
[; ;pic16f628a.h: 1119: struct {
[; ;pic16f628a.h: 1120: unsigned TX9D :1;
[; ;pic16f628a.h: 1121: unsigned TRMT :1;
[; ;pic16f628a.h: 1122: unsigned BRGH :1;
[; ;pic16f628a.h: 1123: unsigned :1;
[; ;pic16f628a.h: 1124: unsigned SYNC :1;
[; ;pic16f628a.h: 1125: unsigned TXEN :1;
[; ;pic16f628a.h: 1126: unsigned TX9 :1;
[; ;pic16f628a.h: 1127: unsigned CSRC :1;
[; ;pic16f628a.h: 1128: };
[; ;pic16f628a.h: 1129: } TXSTAbits_t;
[; ;pic16f628a.h: 1130: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1169: extern volatile unsigned char SPBRG @ 0x099;
"1171
[; ;pic16f628a.h: 1171: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1175: extern volatile unsigned char EEDATA @ 0x09A;
"1177
[; ;pic16f628a.h: 1177: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1181: extern volatile unsigned char EEADR @ 0x09B;
"1183
[; ;pic16f628a.h: 1183: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1187: extern volatile unsigned char EECON1 @ 0x09C;
"1189
[; ;pic16f628a.h: 1189: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1192: typedef union {
[; ;pic16f628a.h: 1193: struct {
[; ;pic16f628a.h: 1194: unsigned RD :1;
[; ;pic16f628a.h: 1195: unsigned WR :1;
[; ;pic16f628a.h: 1196: unsigned WREN :1;
[; ;pic16f628a.h: 1197: unsigned WRERR :1;
[; ;pic16f628a.h: 1198: };
[; ;pic16f628a.h: 1199: } EECON1bits_t;
[; ;pic16f628a.h: 1200: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1224: extern volatile unsigned char EECON2 @ 0x09D;
"1226
[; ;pic16f628a.h: 1226: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1230: extern volatile unsigned char VRCON @ 0x09F;
"1232
[; ;pic16f628a.h: 1232: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1235: typedef union {
[; ;pic16f628a.h: 1236: struct {
[; ;pic16f628a.h: 1237: unsigned VR :4;
[; ;pic16f628a.h: 1238: unsigned :1;
[; ;pic16f628a.h: 1239: unsigned VRR :1;
[; ;pic16f628a.h: 1240: unsigned VROE :1;
[; ;pic16f628a.h: 1241: unsigned VREN :1;
[; ;pic16f628a.h: 1242: };
[; ;pic16f628a.h: 1243: struct {
[; ;pic16f628a.h: 1244: unsigned VR0 :1;
[; ;pic16f628a.h: 1245: unsigned VR1 :1;
[; ;pic16f628a.h: 1246: unsigned VR2 :1;
[; ;pic16f628a.h: 1247: unsigned VR3 :1;
[; ;pic16f628a.h: 1248: };
[; ;pic16f628a.h: 1249: } VRCONbits_t;
[; ;pic16f628a.h: 1250: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1300: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1302: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1304: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1306: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1308: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1310: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1312: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1314: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1316: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1318: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1320: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1322: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1324: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1326: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1328: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1330: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1332: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1334: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1336: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1338: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1340: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1342: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1344: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1346: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1348: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1350: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1352: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1354: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1356: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1358: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1360: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1362: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1364: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1366: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1368: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1370: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1372: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1374: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1376: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1378: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1380: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1382: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1384: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1386: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1388: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1390: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1392: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1394: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1396: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1398: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1400: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1402: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1404: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1406: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1408: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1410: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1412: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1414: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1416: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1418: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1420: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1422: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1424: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1426: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1428: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1430: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1432: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1434: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1436: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1438: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1440: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1442: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1444: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1446: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1448: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1450: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1452: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1454: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1456: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1458: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1460: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1462: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1464: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1466: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1468: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1470: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1472: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1474: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1476: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1478: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1480: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1482: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1484: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1486: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1488: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1490: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1492: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1494: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1496: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1498: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1500: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1502: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1504: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1506: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1508: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1510: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1512: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1514: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1516: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1518: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1520: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1522: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1524: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1526: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1528: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1530: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1532: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1534: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1536: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1538: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1540: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1542: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1544: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1546: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1548: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1550: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1552: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1554: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1556: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1558: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1560: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 141: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
"14 prog.c
[p x FOSC=INTOSCIO ]
"15
[p x WDTE=OFF ]
"16
[p x PWRTE=ON ]
"17
[p x MCLRE=ON ]
"18
[p x BOREN=OFF ]
"19
[p x LVP=OFF ]
"20
[p x CPD=OFF ]
"21
[p x CP=OFF ]
"27
[v _digits `Vuc ~T0 @X0 -> 3 `i e ]
[; ;prog.c: 27: volatile unsigned char digits [3];
"28
[v _digits_0 `Vuc ~T0 @X0 -> 3 `i e ]
[; ;prog.c: 28: volatile unsigned char digits_0 [3];
"29
[v _KeyCode `Vuc ~T0 @X0 1 e ]
[; ;prog.c: 29: volatile unsigned char KeyCode;
"30
[v _TMR0_VALUE `Cuc ~T0 @X0 1 e ]
[i _TMR0_VALUE
-> -> 235 `i `uc
]
[; ;prog.c: 30: const unsigned char TMR0_VALUE = 235;
"31
[v _digitnum `uc ~T0 @X0 1 e ]
[; ;prog.c: 31: unsigned char digitnum;
"32
[v _digitemp `uc ~T0 @X0 1 e ]
[; ;prog.c: 32: unsigned char digitemp;
"33
[v _powerOnInterval `i ~T0 @X0 1 e ]
[; ;prog.c: 33: int powerOnInterval;
"34
[v _DigitNumber `uc ~T0 @X0 1 e ]
[i _DigitNumber
-> -> 0 `i `uc
]
[; ;prog.c: 34: unsigned char DigitNumber = 0;
"35
[v _PortAData `Cuc ~T0 @X0 -> 3 `i e ]
[i _PortAData
:U ..
"36
-> -> 128 `i `uc
"37
-> -> 64 `i `uc
"38
-> -> 1 `i `uc
..
]
[; ;prog.c: 35: const unsigned char PortAData[3] = {
[; ;prog.c: 36: 0b10000000,
[; ;prog.c: 37: 0b01000000,
[; ;prog.c: 38: 0b00000001,
[; ;prog.c: 39: };
"40
[v _endInterrupt `b ~T0 @X0 1 e ]
[; ;prog.c: 40: bit endInterrupt;
"41
[v _powerOff `b ~T0 @X0 1 e ]
[i _powerOff
-> 0 `i
]
[; ;prog.c: 41: bit powerOff = 0;
"42
[v _Broadcasting `b ~T0 @X0 1 e ]
[; ;prog.c: 42: bit Broadcasting;
"43
[v _PowerBlocked `uc ~T0 @X0 1 e ]
[; ;prog.c: 43: unsigned char PowerBlocked;
"56
[v _getTemp_flags `S57 ~T0 @X0 1 e ]
[; ;prog.c: 45: struct {
[; ;prog.c: 46: unsigned Init : 1;
[; ;prog.c: 47: unsigned Send_Address : 1;
[; ;prog.c: 48: unsigned CountAddressBytes : 4;
[; ;prog.c: 49: unsigned SendConvertTemp : 1;
[; ;prog.c: 50: unsigned int PauseValue;
[; ;prog.c: 51: unsigned SendGetTemp : 1;
[; ;prog.c: 52: unsigned ReadData : 1;
[; ;prog.c: 53: unsigned CountDataBytes : 4;
[; ;prog.c: 54: unsigned Error : 1;
[; ;prog.c: 55: unsigned ActiveProcess : 1;
[; ;prog.c: 56: } getTemp_flags;
"58
[v _DS_Address `uc ~T0 @X0 -> 0 `x e ]
[i _DS_Address
:U ..
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
]
[; ;prog.c: 58: unsigned char DS_Address [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
"59
[v _DS_ReadData `uc ~T0 @X0 -> 0 `x e ]
[i _DS_ReadData
:U ..
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
]
[; ;prog.c: 59: unsigned char DS_ReadData [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
"61
[v _temperature `uc ~T0 @X0 1 e ]
[i _temperature
-> -> 0 `i `uc
]
[; ;prog.c: 61: char temperature = 0;
"62
[v _temp_drob `uc ~T0 @X0 1 e ]
[i _temp_drob
-> -> 0 `i `uc
]
[; ;prog.c: 62: unsigned char temp_drob = 0;
"63
[v _sign `uc ~T0 @X0 1 e ]
[; ;prog.c: 63: unsigned char sign;
"78
[v _waitInterrupt `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 78: void waitInterrupt() {
[e :U _waitInterrupt ]
[f ]
[; ;prog.c: 79: endInterrupt = 0;
"79
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 80: while (!endInterrupt);
"80
[e $U 59  ]
[e :U 60 ]
[e :U 59 ]
[e $ ! _endInterrupt 60  ]
[e :U 61 ]
[; ;prog.c: 81: }
"81
[e :UE 58 ]
}
"83
[v _Reset_powerOnInterval `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 83: void Reset_powerOnInterval() {
[e :U _Reset_powerOnInterval ]
[f ]
[; ;prog.c: 84: powerOnInterval = 700;
"84
[e = _powerOnInterval -> 700 `i ]
[; ;prog.c: 85: }
"85
[e :UE 62 ]
}
"87
[v _getDigit `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 87: unsigned char getDigit(char a) {
[e :U _getDigit ]
[v _a `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 88: return (digits_0[a - 1] & 0b00111111);
"88
[e ) -> & -> *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux `i -> 63 `i `uc ]
[e $UE 63  ]
[; ;prog.c: 89: }
"89
[e :UE 63 ]
}
"91
[v _setDigit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 91: void setDigit(char a, unsigned char data) {
[e :U _setDigit ]
[v _a `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 92: digits_0[a - 1] = (digits_0[a - 1] & 0b11000000) | (data & 0b00111111);
"92
[e = *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> | & -> *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux `i -> 192 `i & -> _data `i -> 63 `i `uc ]
[; ;prog.c: 93: }
"93
[e :UE 64 ]
}
"95
[v _setPoint `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 95: void setPoint(char dignum, char value) {
[e :U _setPoint ]
[v _dignum `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 96: value == 1 ? digits_0[dignum - 1] |= 0b01000000 : digits_0[dignum - 1] &= 0b10111111;
"96
[e ? == -> _value `i -> 1 `i : -> =| *U + &U _digits_0 * -> -> - -> _dignum `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> -> 64 `i `uc `i -> =& *U + &U _digits_0 * -> -> - -> _dignum `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> -> 191 `i `uc `i ]
[; ;prog.c: 97: }
"97
[e :UE 65 ]
}
"99
[v _refreshInd `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 99: void refreshInd() {
[e :U _refreshInd ]
[f ]
[; ;prog.c: 100: for (char a = 0; a < 3; a++) {
"100
{
[v _a `uc ~T0 @X0 1 a ]
[e = _a -> -> 0 `i `uc ]
[e $ < -> _a `i -> 3 `i 67  ]
[e $U 68  ]
[e :U 67 ]
{
[; ;prog.c: 101: digits[a] = digits_0[a];
"101
[e = *U + &U _digits * -> _a `ux -> -> # *U &U _digits `ui `ux *U + &U _digits_0 * -> _a `ux -> -> # *U &U _digits_0 `ui `ux ]
"102
}
"100
[e ++ _a -> -> 1 `i `uc ]
[e $ < -> _a `i -> 3 `i 67  ]
[e :U 68 ]
"102
}
[; ;prog.c: 102: }
[; ;prog.c: 103: }
"103
[e :UE 66 ]
}
"105
[v _clrInd `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 105: void clrInd() {
[e :U _clrInd ]
[f ]
[; ;prog.c: 106: for (char a = 0; a < 3; a++) {
"106
{
[v _a `uc ~T0 @X0 1 a ]
[e = _a -> -> 0 `i `uc ]
[e $ < -> _a `i -> 3 `i 71  ]
[e $U 72  ]
[e :U 71 ]
{
[; ;prog.c: 107: digits_0[a] = 34;
"107
[e = *U + &U _digits_0 * -> _a `ux -> -> # *U &U _digits_0 `ui `ux -> -> 34 `i `uc ]
"108
}
"106
[e ++ _a -> -> 1 `i `uc ]
[e $ < -> _a `i -> 3 `i 71  ]
[e :U 72 ]
"108
}
[; ;prog.c: 108: }
[; ;prog.c: 109: }
"109
[e :UE 70 ]
}
"111
[v _ShowError `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 111: void ShowError() {
[e :U _ShowError ]
[f ]
[; ;prog.c: 112: clrInd();
"112
[e ( _clrInd ..  ]
[; ;prog.c: 113: setDigit(3, 14);
"113
[e ( _setDigit (2 , -> -> 3 `i `uc -> -> 14 `i `uc ]
[; ;prog.c: 114: setDigit(2, 24);
"114
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 24 `i `uc ]
[; ;prog.c: 115: setDigit(1, 24);
"115
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 24 `i `uc ]
[; ;prog.c: 116: refreshInd();
"116
[e ( _refreshInd ..  ]
[; ;prog.c: 117: }
"117
[e :UE 74 ]
}
"119
[v _convDig `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 119: unsigned char convDig(unsigned char dig) {
[e :U _convDig ]
[v _dig `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 120: switch (dig) {
"120
[e $U 77  ]
{
[; ;prog.c: 121: case 0: return 0b11011011;
"121
[e :U 78 ]
[e ) -> -> 219 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 122: case 1: return 0b00011000;
"122
[e :U 79 ]
[e ) -> -> 24 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 123: case 2: return 0b10110011;
"123
[e :U 80 ]
[e ) -> -> 179 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 124: case 3: return 0b10111010;
"124
[e :U 81 ]
[e ) -> -> 186 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 125: case 4: return 0b01111000;
"125
[e :U 82 ]
[e ) -> -> 120 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 126: case 5: return 0b11101010;
"126
[e :U 83 ]
[e ) -> -> 234 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 127: case 6: return 0b11101011;
"127
[e :U 84 ]
[e ) -> -> 235 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 128: case 7: return 0b10011000;
"128
[e :U 85 ]
[e ) -> -> 152 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 129: case 8: return 0b11111011;
"129
[e :U 86 ]
[e ) -> -> 251 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 130: case 9: return 0b11111010;
"130
[e :U 87 ]
[e ) -> -> 250 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 131: case 10: return 0b11111001;
"131
[e :U 88 ]
[e ) -> -> 249 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 132: case 11: return 0b01101011;
"132
[e :U 89 ]
[e ) -> -> 107 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 133: case 12: return 0b11000011;
"133
[e :U 90 ]
[e ) -> -> 195 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 134: case 13: return 0b00111011;
"134
[e :U 91 ]
[e ) -> -> 59 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 135: case 14: return 0b11100011;
"135
[e :U 92 ]
[e ) -> -> 227 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 136: case 15: return 0b11100001;
"136
[e :U 93 ]
[e ) -> -> 225 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 137: case 16: return 0b11111000;
"137
[e :U 94 ]
[e ) -> -> 248 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 138: case 17: return 0b01101001;
"138
[e :U 95 ]
[e ) -> -> 105 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 139: case 18: return 0b01000001;
"139
[e :U 96 ]
[e ) -> -> 65 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 140: case 19: return 0b00011010;
"140
[e :U 97 ]
[e ) -> -> 26 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 141: case 20: return 0b01000011;
"141
[e :U 98 ]
[e ) -> -> 67 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 142: case 21: return 0b00101001;
"142
[e :U 99 ]
[e ) -> -> 41 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 143: case 22: return 0b00101011;
"143
[e :U 100 ]
[e ) -> -> 43 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 144: case 23: return 0b11110001;
"144
[e :U 101 ]
[e ) -> -> 241 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 145: case 24: return 0b00100001;
"145
[e :U 102 ]
[e ) -> -> 33 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 146: case 25: return 0b01101010;
"146
[e :U 103 ]
[e ) -> -> 106 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 147: case 26: return 0b01100011;
"147
[e :U 104 ]
[e ) -> -> 99 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 148: case 27: return 0b01011011;
"148
[e :U 105 ]
[e ) -> -> 91 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 149: case 28: return 0b00001011;
"149
[e :U 106 ]
[e ) -> -> 11 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 150: case 29: return 0b01110001;
"150
[e :U 107 ]
[e ) -> -> 113 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 151: case 30: return 0b10110001;
"151
[e :U 108 ]
[e ) -> -> 177 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 152: case 31: return 0b11110000;
"152
[e :U 109 ]
[e ) -> -> 240 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 153: case 32: return 0b00100000;
"153
[e :U 110 ]
[e ) -> -> 32 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 154: case 33: return 0b00000010;
"154
[e :U 111 ]
[e ) -> -> 2 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 155: case 34: return 0b00000000;
"155
[e :U 112 ]
[e ) -> -> 0 `i `uc ]
[e $UE 75  ]
[; ;prog.c: 156: default: return 0b00000000;
"156
[e :U 113 ]
[e ) -> -> 0 `i `uc ]
[e $UE 75  ]
"157
}
[; ;prog.c: 157: }
[e $U 76  ]
"120
[e :U 77 ]
[e [\ _dig , $ -> -> 0 `i `uc 78
 , $ -> -> 1 `i `uc 79
 , $ -> -> 2 `i `uc 80
 , $ -> -> 3 `i `uc 81
 , $ -> -> 4 `i `uc 82
 , $ -> -> 5 `i `uc 83
 , $ -> -> 6 `i `uc 84
 , $ -> -> 7 `i `uc 85
 , $ -> -> 8 `i `uc 86
 , $ -> -> 9 `i `uc 87
 , $ -> -> 10 `i `uc 88
 , $ -> -> 11 `i `uc 89
 , $ -> -> 12 `i `uc 90
 , $ -> -> 13 `i `uc 91
 , $ -> -> 14 `i `uc 92
 , $ -> -> 15 `i `uc 93
 , $ -> -> 16 `i `uc 94
 , $ -> -> 17 `i `uc 95
 , $ -> -> 18 `i `uc 96
 , $ -> -> 19 `i `uc 97
 , $ -> -> 20 `i `uc 98
 , $ -> -> 21 `i `uc 99
 , $ -> -> 22 `i `uc 100
 , $ -> -> 23 `i `uc 101
 , $ -> -> 24 `i `uc 102
 , $ -> -> 25 `i `uc 103
 , $ -> -> 26 `i `uc 104
 , $ -> -> 27 `i `uc 105
 , $ -> -> 28 `i `uc 106
 , $ -> -> 29 `i `uc 107
 , $ -> -> 30 `i `uc 108
 , $ -> -> 31 `i `uc 109
 , $ -> -> 32 `i `uc 110
 , $ -> -> 33 `i `uc 111
 , $ -> -> 34 `i `uc 112
 113 ]
"157
[e :U 76 ]
[; ;prog.c: 158: }
"158
[e :UE 75 ]
}
"160
[v _EEWR `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 160: void EEWR(unsigned char address, unsigned char data) {
[e :U _EEWR ]
[v _address `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"161
[v _INTCON_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 161: volatile unsigned char INTCON_BUP = INTCON;
[e = _INTCON_BUP _INTCON ]
[; ;prog.c: 162: INTCONbits.GIE = 0;
"162
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;prog.c: 163: EEADR = address;
"163
[e = _EEADR _address ]
[; ;prog.c: 164: EEDATA = data;
"164
[e = _EEDATA _data ]
[; ;prog.c: 165: EECON1bits.WREN = 1;
"165
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
[; ;prog.c: 166: EECON2 = 0x55;
"166
[e = _EECON2 -> -> 85 `i `uc ]
[; ;prog.c: 167: EECON2 = 0xAA;
"167
[e = _EECON2 -> -> 170 `i `uc ]
[; ;prog.c: 168: EECON1bits.WR = 1;
"168
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
[; ;prog.c: 169: EECON1bits.WREN = 0;
"169
[e = . . _EECON1bits 0 2 -> -> 0 `i `uc ]
[; ;prog.c: 170: while (EECON1bits.WR == 1) {
"170
[e $U 115  ]
[e :U 116 ]
{
"171
}
[e :U 115 ]
"170
[e $ == -> . . _EECON1bits 0 1 `i -> 1 `i 116  ]
[e :U 117 ]
[; ;prog.c: 171: }
[; ;prog.c: 172: INTCON = INTCON_BUP;
"172
[e = _INTCON _INTCON_BUP ]
[; ;prog.c: 173: }
"173
[e :UE 114 ]
}
"175
[v _EERD `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 175: unsigned char EERD(unsigned char address) {
[e :U _EERD ]
[v _address `uc ~T0 @X0 1 r1 ]
[f ]
"176
[v _INTCON_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 176: volatile unsigned char INTCON_BUP = INTCON;
[e = _INTCON_BUP _INTCON ]
"177
[v _EEDATA_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 177: volatile unsigned char EEDATA_BUP;
[; ;prog.c: 178: INTCONbits.GIE = 0;
"178
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;prog.c: 179: EEADR = address;
"179
[e = _EEADR _address ]
[; ;prog.c: 180: EECON1bits.RD = 1;
"180
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
[; ;prog.c: 181: EEDATA_BUP = EEDATA;
"181
[e = _EEDATA_BUP _EEDATA ]
[; ;prog.c: 182: INTCON = INTCON_BUP;
"182
[e = _INTCON _INTCON_BUP ]
[; ;prog.c: 183: return EEDATA_BUP;
"183
[e ) _EEDATA_BUP ]
[e $UE 118  ]
[; ;prog.c: 184: }
"184
[e :UE 118 ]
}
"186
[v _FillArrayFromEEPROM `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
{
[; ;prog.c: 186: void FillArrayFromEEPROM(unsigned char *container, unsigned char address_start, unsigned char quantity) {
[e :U _FillArrayFromEEPROM ]
[v _container `*uc ~T0 @X0 1 r1 ]
[v _address_start `uc ~T0 @X0 1 r2 ]
[v _quantity `uc ~T0 @X0 1 r3 ]
[f ]
[; ;prog.c: 187: for (unsigned char i = 0; i < quantity; i++) {
"187
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 123  ]
[e :U 120 ]
{
[; ;prog.c: 189: container[i] = EERD(address_start + i);
"189
[e = *U + _container * -> _i `ux -> -> # *U _container `ui `ux ( _EERD (1 -> + -> _address_start `i -> _i `i `uc ]
"190
}
"187
[e ++ _i -> -> 1 `i `uc ]
[e :U 123 ]
[e $ < -> _i `i -> _quantity `i 120  ]
[e :U 121 ]
"190
}
[; ;prog.c: 190: }
[; ;prog.c: 191: }
"191
[e :UE 119 ]
}
"193
[v _WriteArrayToEEPROM `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
{
[; ;prog.c: 193: void WriteArrayToEEPROM(unsigned char * container, unsigned char address_start, unsigned char quantity) {
[e :U _WriteArrayToEEPROM ]
[v _container `*uc ~T0 @X0 1 r1 ]
[v _address_start `uc ~T0 @X0 1 r2 ]
[v _quantity `uc ~T0 @X0 1 r3 ]
[f ]
[; ;prog.c: 194: for (unsigned char i = 0; i < quantity; i++) {
"194
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 128  ]
[e :U 125 ]
{
[; ;prog.c: 195: waitInterrupt();
"195
[e ( _waitInterrupt ..  ]
[; ;prog.c: 196: EEWR(address_start + i, container[i]);
"196
[e ( _EEWR (2 , -> + -> _address_start `i -> _i `i `uc *U + _container * -> _i `ux -> -> # *U _container `ui `ux ]
"197
}
"194
[e ++ _i -> -> 1 `i `uc ]
[e :U 128 ]
[e $ < -> _i `i -> _quantity `i 125  ]
[e :U 126 ]
"197
}
[; ;prog.c: 197: }
[; ;prog.c: 198: }
"198
[e :UE 124 ]
}
"201
[v _INIT `(b ~T0 @X0 1 sf ]
{
[; ;prog.c: 201: static bit INIT() {
[e :U _INIT ]
[f ]
"202
[v F852 `b ~T0 @X0 1 s b ]
[; ;prog.c: 202: static bit b;
[; ;prog.c: 203: b = 0;
"203
[e = F852 -> -> 0 `i `b ]
[; ;prog.c: 204: TRISA3 = 1;
"204
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 205: _delay((unsigned long)((20)*(4000000/4000000.0)));
"205
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 206: TRISA3 = 0;
"206
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 207: _delay((unsigned long)((500)*(4000000/4000000.0)));
"207
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 208: TRISA3 = 1;
"208
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 209: _delay((unsigned long)((65)*(4000000/4000000.0)));
"209
[e ( __delay (1 -> * -> -> 65 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 210: b = RA3;
"210
[e = F852 _RA3 ]
[; ;prog.c: 211: _delay((unsigned long)((450)*(4000000/4000000.0)));
"211
[e ( __delay (1 -> * -> -> 450 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 213: return !b;
"213
[e ) -> -> ! F852 `i `b ]
[e $UE 129  ]
[; ;prog.c: 214: }
"214
[e :UE 129 ]
}
"216
[v _TX `(v ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 216: void TX(unsigned char cmd) {
[e :U _TX ]
[v _cmd `uc ~T0 @X0 1 r1 ]
[f ]
"217
[v _temp `uc ~T0 @X0 1 a ]
[; ;prog.c: 217: unsigned char temp = 0;
[e = _temp -> -> 0 `i `uc ]
"218
[v _i `uc ~T0 @X0 1 a ]
[; ;prog.c: 218: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;prog.c: 219: temp = cmd;
"219
[e = _temp _cmd ]
[; ;prog.c: 220: for (i = 0; i < 8; i++) {
"220
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 131  ]
[e $U 132  ]
[e :U 131 ]
{
[; ;prog.c: 221: if (temp & 0x01) {
"221
[e $ ! != & -> _temp `i -> 1 `i -> 0 `i 134  ]
{
[; ;prog.c: 222: TRISA3 = 0;
"222
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 223: _delay((unsigned long)((5)*(4000000/4000000.0)));
"223
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 224: TRISA3 = 1;
"224
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 225: _delay((unsigned long)((70)*(4000000/4000000.0)));
"225
[e ( __delay (1 -> * -> -> 70 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"226
}
[; ;prog.c: 226: } else {
[e $U 135  ]
[e :U 134 ]
{
[; ;prog.c: 227: TRISA3 = 0;
"227
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 228: _delay((unsigned long)((70)*(4000000/4000000.0)));
"228
[e ( __delay (1 -> * -> -> 70 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 229: TRISA3 = 1;
"229
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 230: _delay((unsigned long)((5)*(4000000/4000000.0)));
"230
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"231
}
[e :U 135 ]
[; ;prog.c: 231: }
[; ;prog.c: 232: temp >>= 1;
"232
[e =>> _temp -> 1 `i ]
"233
}
"220
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 131  ]
[e :U 132 ]
"233
}
[; ;prog.c: 233: }
[; ;prog.c: 234: }
"234
[e :UE 130 ]
}
"236
[v _RX `(uc ~T0 @X0 1 ef ]
{
[; ;prog.c: 236: unsigned char RX() {
[e :U _RX ]
[f ]
"237
[v _d `uc ~T0 @X0 1 a ]
[; ;prog.c: 237: unsigned char d = 0;
[e = _d -> -> 0 `i `uc ]
[; ;prog.c: 238: for (unsigned char i = 0; i < 8; i++) {
"238
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 137  ]
[e $U 138  ]
[e :U 137 ]
{
[; ;prog.c: 239: TRISA3 = 0;
"239
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 240: _delay((unsigned long)((6)*(4000000/4000000.0)));
"240
[e ( __delay (1 -> * -> -> 6 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 241: TRISA3 = 1;
"241
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 242: _delay((unsigned long)((4)*(4000000/4000000.0)));
"242
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 243: d >>= 1;
"243
[e =>> _d -> 1 `i ]
[; ;prog.c: 244: if (RA3 == 1) d |= 0x80;
"244
[e $ ! == -> _RA3 `i -> 1 `i 140  ]
[e =| _d -> -> 128 `i `uc ]
[e :U 140 ]
[; ;prog.c: 245: _delay((unsigned long)((60)*(4000000/4000000.0)));
"245
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"246
}
"238
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 137  ]
[e :U 138 ]
"246
}
[; ;prog.c: 246: }
[; ;prog.c: 247: return d;
"247
[e ) _d ]
[e $UE 136  ]
[; ;prog.c: 248: }
"248
[e :UE 136 ]
}
"250
[v _calc_crc `(uc ~T0 @X0 1 ef2`*uc`uc ]
{
[; ;prog.c: 250: unsigned char calc_crc(unsigned char *mas, unsigned char len) {
[e :U _calc_crc ]
[v _mas `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
[f ]
"251
[v _crc `uc ~T0 @X0 1 a ]
[; ;prog.c: 251: unsigned char crc = 0;
[e = _crc -> -> 0 `i `uc ]
[; ;prog.c: 252: while (len--) {
"252
[e $U 142  ]
[e :U 143 ]
{
"253
[v _dat `uc ~T0 @X0 1 a ]
[; ;prog.c: 253: unsigned char dat = *mas++;
[e = _dat *U ++ _mas * -> -> 1 `i `x -> -> # *U _mas `i `x ]
[; ;prog.c: 254: for (unsigned char i = 0; i < 8; i++) {
"254
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 145  ]
[e $U 146  ]
[e :U 145 ]
{
"255
[v _fb `uc ~T0 @X0 1 a ]
[; ;prog.c: 255: unsigned char fb = (crc ^ dat) & 1;
[e = _fb -> & ^ -> _crc `i -> _dat `i -> 1 `i `uc ]
[; ;prog.c: 256: crc >>= 1;
"256
[e =>> _crc -> 1 `i ]
[; ;prog.c: 257: dat >>= 1;
"257
[e =>> _dat -> 1 `i ]
[; ;prog.c: 258: if (fb) crc ^= 0x8c;
"258
[e $ ! != -> _fb `i -> -> -> 0 `i `uc `i 148  ]
[e =^ _crc -> -> 140 `i `uc ]
[e :U 148 ]
"259
}
"254
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 145  ]
[e :U 146 ]
"259
}
"260
}
[e :U 142 ]
"252
[e $ != -> -- _len -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 143  ]
[e :U 144 ]
[; ;prog.c: 259: }
[; ;prog.c: 260: }
[; ;prog.c: 261: return crc;
"261
[e ) _crc ]
[e $UE 141  ]
[; ;prog.c: 262: }
"262
[e :UE 141 ]
}
"264
[v _Send_DS_Address `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 264: void Send_DS_Address() {
[e :U _Send_DS_Address ]
[f ]
[; ;prog.c: 265: waitInterrupt();
"265
[e ( _waitInterrupt ..  ]
[; ;prog.c: 266: if (Broadcasting) {
"266
[e $ ! _Broadcasting 150  ]
{
[; ;prog.c: 267: TX(0xCC);
"267
[e ( _TX (1 -> -> 204 `i `uc ]
"268
}
[; ;prog.c: 268: } else {
[e $U 151  ]
[e :U 150 ]
{
[; ;prog.c: 269: TX(0x55);
"269
[e ( _TX (1 -> -> 85 `i `uc ]
[; ;prog.c: 270: for (unsigned char i = 0; i < sizeof (DS_Address); i++) {
"270
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 152  ]
[e $U 153  ]
[e :U 152 ]
{
[; ;prog.c: 271: waitInterrupt();
"271
[e ( _waitInterrupt ..  ]
[; ;prog.c: 272: TX(DS_Address[i]);
"272
[e ( _TX (1 *U + &U _DS_Address * -> _i `ux -> -> # *U &U _DS_Address `ui `ux ]
"273
}
"270
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 152  ]
[e :U 153 ]
"273
}
"274
}
[e :U 151 ]
[; ;prog.c: 273: }
[; ;prog.c: 274: }
[; ;prog.c: 275: }
"275
[e :UE 149 ]
}
"278
[v _get_temp `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 278: void get_temp() {
[e :U _get_temp ]
[f ]
[; ;prog.c: 280: temperature = 72;
"280
[e = _temperature -> -> 72 `i `uc ]
[; ;prog.c: 281: temp_drob = 0;
"281
[e = _temp_drob -> -> 0 `i `uc ]
[; ;prog.c: 283: return;
"283
[e $UE 155  ]
"285
[v F881 `b ~T0 @X0 1 s init ]
"286
[v _temp1 `uc ~T0 @X0 1 a ]
[; ;prog.c: 285: static bit init;
[; ;prog.c: 286: unsigned char temp1 = 0;
[e = _temp1 -> -> 0 `i `uc ]
"287
[v _temp2 `uc ~T0 @X0 1 a ]
[; ;prog.c: 287: unsigned char temp2 = 0;
[e = _temp2 -> -> 0 `i `uc ]
[; ;prog.c: 288: init = INIT();
"288
[e = F881 ( _INIT ..  ]
[; ;prog.c: 290: endInterrupt = 0;
"290
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 291: while (!endInterrupt);
"291
[e $U 156  ]
[e :U 157 ]
[e :U 156 ]
[e $ ! _endInterrupt 157  ]
[e :U 158 ]
[; ;prog.c: 293: if (init) {
"293
[e $ ! F881 159  ]
{
[; ;prog.c: 294: TX(0xCC);
"294
[e ( _TX (1 -> -> 204 `i `uc ]
[; ;prog.c: 296: TX(0x44);
"296
[e ( _TX (1 -> -> 68 `i `uc ]
[; ;prog.c: 297: _delay((unsigned long)((250)*(4000000/4000.0)));
"297
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 298: _delay((unsigned long)((250)*(4000000/4000.0)));
"298
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 299: _delay((unsigned long)((250)*(4000000/4000.0)));
"299
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 300: _delay((unsigned long)((250)*(4000000/4000.0)));
"300
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"301
}
[e :U 159 ]
[; ;prog.c: 301: }
[; ;prog.c: 303: endInterrupt = 0;
"303
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 304: while (!endInterrupt);
"304
[e $U 160  ]
[e :U 161 ]
[e :U 160 ]
[e $ ! _endInterrupt 161  ]
[e :U 162 ]
[; ;prog.c: 306: init = INIT();
"306
[e = F881 ( _INIT ..  ]
[; ;prog.c: 308: endInterrupt = 0;
"308
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 309: while (!endInterrupt);
"309
[e $U 163  ]
[e :U 164 ]
[e :U 163 ]
[e $ ! _endInterrupt 164  ]
[e :U 165 ]
[; ;prog.c: 311: if (init) {
"311
[e $ ! F881 166  ]
{
[; ;prog.c: 312: Send_DS_Address();
"312
[e ( _Send_DS_Address ..  ]
[; ;prog.c: 313: TX(0xBE);
"313
[e ( _TX (1 -> -> 190 `i `uc ]
[; ;prog.c: 315: endInterrupt = 0;
"315
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 316: while (!endInterrupt);
"316
[e $U 167  ]
[e :U 168 ]
[e :U 167 ]
[e $ ! _endInterrupt 168  ]
[e :U 169 ]
[; ;prog.c: 318: temp1 = RX();
"318
[e = _temp1 ( _RX ..  ]
[; ;prog.c: 319: temp2 = RX();
"319
[e = _temp2 ( _RX ..  ]
"320
}
[e :U 166 ]
[; ;prog.c: 320: }
[; ;prog.c: 321: temp_drob = temp1 & 0b00001111;
"321
[e = _temp_drob -> & -> _temp1 `i -> 15 `i `uc ]
[; ;prog.c: 322: temp_drob = ((temp_drob * 6) + 2) / 10;
"322
[e = _temp_drob -> / + * -> _temp_drob `i -> 6 `i -> 2 `i -> 10 `i `uc ]
[; ;prog.c: 323: temp1 >>= 4;
"323
[e =>> _temp1 -> 4 `i ]
[; ;prog.c: 324: sign = temp2 & 0x80;
"324
[e = _sign -> & -> _temp2 `i -> 128 `i `uc ]
[; ;prog.c: 325: temp2 <<= 4;
"325
[e =<< _temp2 -> 4 `i ]
[; ;prog.c: 326: temp2 &= 0b01110000;
"326
[e =& _temp2 -> -> 112 `i `uc ]
[; ;prog.c: 327: temp2 |= temp1;
"327
[e =| _temp2 _temp1 ]
[; ;prog.c: 329: if (sign) {
"329
[e $ ! != -> _sign `i -> -> -> 0 `i `uc `i 170  ]
{
[; ;prog.c: 330: temperature = 127 - temp2;
"330
[e = _temperature -> - -> 127 `i -> _temp2 `i `uc ]
[; ;prog.c: 331: temp_drob = 10 - temp_drob;
"331
[e = _temp_drob -> - -> 10 `i -> _temp_drob `i `uc ]
[; ;prog.c: 332: if (temp_drob == 10) {
"332
[e $ ! == -> _temp_drob `i -> 10 `i 171  ]
{
[; ;prog.c: 333: temp_drob = 0;
"333
[e = _temp_drob -> -> 0 `i `uc ]
[; ;prog.c: 334: temperature++;
"334
[e ++ _temperature -> -> 1 `i `uc ]
"335
}
[e :U 171 ]
"336
}
[; ;prog.c: 335: }
[; ;prog.c: 336: } else {
[e $U 172  ]
[e :U 170 ]
{
[; ;prog.c: 337: temperature = temp2;
"337
[e = _temperature _temp2 ]
"338
}
[e :U 172 ]
[; ;prog.c: 338: }
[; ;prog.c: 339: }
"339
[e :UE 155 ]
}
"341
[v _get_temp_Async `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 341: void get_temp_Async() {
[e :U _get_temp_Async ]
[f ]
[; ;prog.c: 343: if (!getTemp_flags.ActiveProcess) {
"343
[e $ ! ! != -> . _getTemp_flags 9 `i -> -> -> 0 `i `uc `i 174  ]
{
[; ;prog.c: 344: return;
"344
[e $UE 173  ]
"345
}
[e :U 174 ]
[; ;prog.c: 345: }
[; ;prog.c: 348: if (getTemp_flags.Init) {
"348
[e $ ! != -> . _getTemp_flags 0 `i -> -> -> 0 `i `uc `i 175  ]
{
[; ;prog.c: 349: if (INIT()) {
"349
[e $ ! ( _INIT ..  176  ]
{
[; ;prog.c: 350: getTemp_flags.Init = 0;
"350
[e = . _getTemp_flags 0 -> -> 0 `i `uc ]
[; ;prog.c: 352: getTemp_flags.Send_Address = 1;
"352
[e = . _getTemp_flags 1 -> -> 1 `i `uc ]
[; ;prog.c: 353: getTemp_flags.CountAddressBytes = 0;
"353
[e = . _getTemp_flags 2 -> -> 0 `i `uc ]
"354
}
[; ;prog.c: 354: } else {
[e $U 177  ]
[e :U 176 ]
{
[; ;prog.c: 355: getTemp_flags.ActiveProcess = 0;
"355
[e = . _getTemp_flags 9 -> -> 0 `i `uc ]
[; ;prog.c: 356: getTemp_flags.Error = 1;
"356
[e = . _getTemp_flags 8 -> -> 1 `i `uc ]
"357
}
[e :U 177 ]
"358
}
[; ;prog.c: 357: }
[; ;prog.c: 358: } else
[e $U 178  ]
[e :U 175 ]
[; ;prog.c: 360: if (getTemp_flags.Send_Address) {
"360
[e $ ! != -> . _getTemp_flags 1 `i -> -> -> 0 `i `uc `i 179  ]
{
[; ;prog.c: 361: if (Broadcasting || getTemp_flags.SendConvertTemp) {
"361
[e $ ! || _Broadcasting != -> . _getTemp_flags 3 `i -> -> -> 0 `i `uc `i 180  ]
{
[; ;prog.c: 362: TX(0xCC);
"362
[e ( _TX (1 -> -> 204 `i `uc ]
[; ;prog.c: 363: getTemp_flags.CountAddressBytes = 1;
"363
[e = . _getTemp_flags 2 -> -> 1 `i `uc ]
[; ;prog.c: 364: getTemp_flags.Send_Address = 0;
"364
[e = . _getTemp_flags 1 -> -> 0 `i `uc ]
"365
}
[; ;prog.c: 365: } else if (getTemp_flags.CountAddressBytes < sizeof (DS_Address)) {
[e $U 181  ]
[e :U 180 ]
[e $ ! < -> . _getTemp_flags 2 `ui -> # _DS_Address `ui 182  ]
{
[; ;prog.c: 366: if (getTemp_flags.CountAddressBytes == 0) {
"366
[e $ ! == -> . _getTemp_flags 2 `i -> 0 `i 183  ]
{
[; ;prog.c: 367: TX(0x55);
"367
[e ( _TX (1 -> -> 85 `i `uc ]
"368
}
[e :U 183 ]
[; ;prog.c: 368: }
[; ;prog.c: 369: TX(DS_Address[getTemp_flags.CountAddressBytes]);
"369
[e ( _TX (1 *U + &U _DS_Address * -> . _getTemp_flags 2 `ux -> -> # *U &U _DS_Address `ui `ux ]
[; ;prog.c: 370: getTemp_flags.CountAddressBytes++;
"370
[e ++ . _getTemp_flags 2 -> -> 1 `i `uc ]
[; ;prog.c: 372: if (getTemp_flags.CountAddressBytes == sizeof (DS_Address)) {
"372
[e $ ! == -> . _getTemp_flags 2 `ui -> # _DS_Address `ui 184  ]
{
[; ;prog.c: 373: getTemp_flags.Send_Address = 0;
"373
[e = . _getTemp_flags 1 -> -> 0 `i `uc ]
"374
}
[e :U 184 ]
"375
}
[e :U 182 ]
"376
[e :U 181 ]
}
[; ;prog.c: 374: }
[; ;prog.c: 375: }
[; ;prog.c: 376: } else
[e $U 185  ]
[e :U 179 ]
[; ;prog.c: 378: if (getTemp_flags.SendConvertTemp) {
"378
[e $ ! != -> . _getTemp_flags 3 `i -> -> -> 0 `i `uc `i 186  ]
{
[; ;prog.c: 379: TX(0x44);
"379
[e ( _TX (1 -> -> 68 `i `uc ]
[; ;prog.c: 380: getTemp_flags.SendConvertTemp = 0;
"380
[e = . _getTemp_flags 3 -> -> 0 `i `uc ]
"382
}
[; ;prog.c: 382: } else
[e $U 187  ]
[e :U 186 ]
[; ;prog.c: 384: if (getTemp_flags.PauseValue > 0) {
"384
[e $ ! > . _getTemp_flags 4 -> -> 0 `i `ui 188  ]
{
[; ;prog.c: 385: getTemp_flags.PauseValue--;
"385
[e -- . _getTemp_flags 4 -> -> 1 `i `ui ]
[; ;prog.c: 386: if (getTemp_flags.PauseValue == 0) {
"386
[e $ ! == . _getTemp_flags 4 -> -> 0 `i `ui 189  ]
{
[; ;prog.c: 387: getTemp_flags.Init = 1;
"387
[e = . _getTemp_flags 0 -> -> 1 `i `uc ]
"388
}
[e :U 189 ]
"389
}
[; ;prog.c: 388: }
[; ;prog.c: 389: } else
[e $U 190  ]
[e :U 188 ]
[; ;prog.c: 391: if (getTemp_flags.SendGetTemp) {
"391
[e $ ! != -> . _getTemp_flags 5 `i -> -> -> 0 `i `uc `i 191  ]
{
[; ;prog.c: 392: TX(0xBE);
"392
[e ( _TX (1 -> -> 190 `i `uc ]
[; ;prog.c: 393: getTemp_flags.SendGetTemp = 0;
"393
[e = . _getTemp_flags 5 -> -> 0 `i `uc ]
"394
}
[; ;prog.c: 394: } else
[e $U 192  ]
[e :U 191 ]
[; ;prog.c: 396: if (getTemp_flags.ReadData) {
"396
[e $ ! != -> . _getTemp_flags 6 `i -> -> -> 0 `i `uc `i 193  ]
{
[; ;prog.c: 397: if (getTemp_flags.CountDataBytes < sizeof (DS_ReadData)) {
"397
[e $ ! < -> . _getTemp_flags 7 `ui -> # _DS_ReadData `ui 194  ]
{
[; ;prog.c: 398: for (unsigned char i = 0; i < 3 && getTemp_flags.CountDataBytes < sizeof (DS_ReadData); i++) {
"398
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 198  ]
[e :U 195 ]
{
[; ;prog.c: 399: DS_ReadData[getTemp_flags.CountDataBytes] = RX();
"399
[e = *U + &U _DS_ReadData * -> . _getTemp_flags 7 `ux -> -> # *U &U _DS_ReadData `ui `ux ( _RX ..  ]
[; ;prog.c: 400: getTemp_flags.CountDataBytes++;
"400
[e ++ . _getTemp_flags 7 -> -> 1 `i `uc ]
"401
}
"398
[e ++ _i -> -> 1 `i `uc ]
[e :U 198 ]
[e $ && < -> _i `i -> 3 `i < -> . _getTemp_flags 7 `ui -> # _DS_ReadData `ui 195  ]
[e :U 196 ]
"401
}
[; ;prog.c: 401: }
[; ;prog.c: 402: if (getTemp_flags.CountDataBytes == sizeof (DS_ReadData)) {
"402
[e $ ! == -> . _getTemp_flags 7 `ui -> # _DS_ReadData `ui 199  ]
{
[; ;prog.c: 403: if (DS_ReadData[sizeof (DS_ReadData) - 1] != calc_crc(DS_ReadData, sizeof (DS_ReadData) - 1)) {
"403
[e $ ! != -> *U + &U _DS_ReadData * -> - -> # _DS_ReadData `ui -> -> 1 `i `ui `ux -> -> # *U &U _DS_ReadData `ui `ux `i -> ( _calc_crc (2 , &U _DS_ReadData -> - -> # _DS_ReadData `ui -> -> 1 `i `ui `uc `i 200  ]
{
[; ;prog.c: 404: getTemp_flags.Error = 1;
"404
[e = . _getTemp_flags 8 -> -> 1 `i `uc ]
"405
}
[; ;prog.c: 405: } else {
[e $U 201  ]
[e :U 200 ]
{
"407
[v _temp1 `uc ~T0 @X0 1 a ]
[; ;prog.c: 407: unsigned char temp1 = DS_ReadData[0];
[e = _temp1 *U + &U _DS_ReadData * -> -> -> 0 `i `ui `ux -> -> # *U &U _DS_ReadData `ui `ux ]
"408
[v _temp2 `uc ~T0 @X0 1 a ]
[; ;prog.c: 408: unsigned char temp2 = DS_ReadData[1];
[e = _temp2 *U + &U _DS_ReadData * -> -> -> 1 `i `ui `ux -> -> # *U &U _DS_ReadData `ui `ux ]
[; ;prog.c: 410: temp_drob = temp1 & 0b00001111;
"410
[e = _temp_drob -> & -> _temp1 `i -> 15 `i `uc ]
[; ;prog.c: 411: temp_drob = ((temp_drob * 6) + 2) / 10;
"411
[e = _temp_drob -> / + * -> _temp_drob `i -> 6 `i -> 2 `i -> 10 `i `uc ]
[; ;prog.c: 412: temp1 >>= 4;
"412
[e =>> _temp1 -> 4 `i ]
[; ;prog.c: 413: sign = temp2 & 0x80;
"413
[e = _sign -> & -> _temp2 `i -> 128 `i `uc ]
[; ;prog.c: 414: temp2 <<= 4;
"414
[e =<< _temp2 -> 4 `i ]
[; ;prog.c: 415: temp2 &= 0b01110000;
"415
[e =& _temp2 -> -> 112 `i `uc ]
[; ;prog.c: 416: temp2 |= temp1;
"416
[e =| _temp2 _temp1 ]
[; ;prog.c: 418: if (sign) {
"418
[e $ ! != -> _sign `i -> -> -> 0 `i `uc `i 202  ]
{
[; ;prog.c: 419: temperature = 127 - temp2;
"419
[e = _temperature -> - -> 127 `i -> _temp2 `i `uc ]
[; ;prog.c: 420: temp_drob = 10 - temp_drob;
"420
[e = _temp_drob -> - -> 10 `i -> _temp_drob `i `uc ]
[; ;prog.c: 421: if (temp_drob == 10) {
"421
[e $ ! == -> _temp_drob `i -> 10 `i 203  ]
{
[; ;prog.c: 422: temp_drob = 0;
"422
[e = _temp_drob -> -> 0 `i `uc ]
[; ;prog.c: 423: temperature++;
"423
[e ++ _temperature -> -> 1 `i `uc ]
"424
}
[e :U 203 ]
"425
}
[; ;prog.c: 424: }
[; ;prog.c: 425: } else {
[e $U 204  ]
[e :U 202 ]
{
[; ;prog.c: 426: temperature = temp2;
"426
[e = _temperature _temp2 ]
"427
}
[e :U 204 ]
"429
}
[e :U 201 ]
[; ;prog.c: 427: }
[; ;prog.c: 429: }
[; ;prog.c: 430: getTemp_flags.ReadData = 0;
"430
[e = . _getTemp_flags 6 -> -> 0 `i `uc ]
[; ;prog.c: 431: getTemp_flags.ActiveProcess = 0;
"431
[e = . _getTemp_flags 9 -> -> 0 `i `uc ]
"432
}
[e :U 199 ]
"433
}
[e :U 194 ]
"434
}
[e :U 193 ]
"435
[e :U 192 ]
[e :U 190 ]
[e :U 187 ]
[e :U 185 ]
[e :U 178 ]
[; ;prog.c: 432: }
[; ;prog.c: 433: }
[; ;prog.c: 434: }
[; ;prog.c: 435: }
[e :UE 173 ]
}
"437
[v _FindCell `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 437: unsigned char FindCell(unsigned char addressStart, unsigned char previous) {
[e :U _FindCell ]
[v _addressStart `uc ~T0 @X0 1 r1 ]
[v _previous `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 438: if (addressStart == ((sizeof(DS_Address)) * 16)) {
"438
[e $ ! == -> _addressStart `ui * -> # _DS_Address `ui -> -> 16 `i `ui 206  ]
{
[; ;prog.c: 439: previous ? addressStart = 0 : addressStart = (((sizeof(DS_Address)) * 16) - (sizeof(DS_Address)));
"439
[e ? != -> _previous `i -> -> -> 0 `i `uc `i : -> = _addressStart -> -> 0 `i `uc `i -> = _addressStart -> - * -> # _DS_Address `ui -> -> 16 `i `ui -> # _DS_Address `ui `uc `i ]
"440
}
[e :U 206 ]
"441
[v _address `uc ~T0 @X0 1 a ]
[; ;prog.c: 440: }
[; ;prog.c: 441: unsigned char address = addressStart;
[e = _address _addressStart ]
"442
[v _addressNew `uc ~T0 @X0 1 a ]
[; ;prog.c: 442: unsigned char addressNew = ((sizeof(DS_Address)) * 16);
[e = _addressNew -> * -> # _DS_Address `ui -> -> 16 `i `ui `uc ]
[; ;prog.c: 443: do {
"443
[e :U 209 ]
{
[; ;prog.c: 445: if (!previous) {
"445
[e $ ! ! != -> _previous `i -> -> -> 0 `i `uc `i 210  ]
{
[; ;prog.c: 446: address == (((sizeof(DS_Address)) * 16) - (sizeof(DS_Address))) ? address = 0 : address += (sizeof(DS_Address));
"446
[e ? == -> _address `ui - * -> # _DS_Address `ui -> -> 16 `i `ui -> # _DS_Address `ui : -> = _address -> -> 0 `i `uc `i -> =+ _address -> -> # _DS_Address `ui `uc `i ]
"447
}
[; ;prog.c: 447: } else {
[e $U 211  ]
[e :U 210 ]
{
[; ;prog.c: 448: address == 0 ? address = (((sizeof(DS_Address)) * 16) - (sizeof(DS_Address))) : address -= (sizeof(DS_Address));
"448
[e ? == -> _address `i -> 0 `i : -> = _address -> - * -> # _DS_Address `ui -> -> 16 `i `ui -> # _DS_Address `ui `uc `i -> =- _address -> -> # _DS_Address `ui `uc `i ]
"449
}
[e :U 211 ]
"451
[v _CellsData `uc ~T0 @X0 -> # _DS_Address `ui a ]
[; ;prog.c: 449: }
[; ;prog.c: 451: unsigned char CellsData [(sizeof(DS_Address))];
[; ;prog.c: 452: waitInterrupt();
"452
[e ( _waitInterrupt ..  ]
[; ;prog.c: 453: FillArrayFromEEPROM(CellsData, address, (sizeof(DS_Address)));
"453
[e ( _FillArrayFromEEPROM (3 , , &U _CellsData _address -> -> # _DS_Address `ui `uc ]
"454
[v _CellIsEmpty `uc ~T0 @X0 1 a ]
[; ;prog.c: 454: unsigned char CellIsEmpty = 1;
[e = _CellIsEmpty -> -> 1 `i `uc ]
[; ;prog.c: 455: for (unsigned char i = 0; i < (sizeof(DS_Address)); i++) {
"455
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 212  ]
[e $U 213  ]
[e :U 212 ]
{
[; ;prog.c: 456: if (CellsData[i] != 0xFF) {
"456
[e $ ! != -> *U + &U _CellsData * -> _i `ux -> -> # *U &U _CellsData `ui `ux `i -> 255 `i 215  ]
{
[; ;prog.c: 457: CellIsEmpty = 0;
"457
[e = _CellIsEmpty -> -> 0 `i `uc ]
"458
}
[e :U 215 ]
"459
}
"455
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 212  ]
[e :U 213 ]
"459
}
[; ;prog.c: 458: }
[; ;prog.c: 459: }
[; ;prog.c: 461: if (CellIsEmpty == 0) {
"461
[e $ ! == -> _CellIsEmpty `i -> 0 `i 216  ]
{
[; ;prog.c: 462: addressNew = address;
"462
[e = _addressNew _address ]
[; ;prog.c: 463: break;
"463
[e $U 208  ]
"464
}
[e :U 216 ]
"465
}
[; ;prog.c: 464: }
[; ;prog.c: 465: } while (address != addressStart);
[e $ != -> _address `i -> _addressStart `i 209  ]
[e :U 208 ]
[; ;prog.c: 466: return addressNew;
"466
[e ) _addressNew ]
[e $UE 205  ]
[; ;prog.c: 467: }
"467
[e :UE 205 ]
}
[v F901 `(v ~T0 @X0 1 tf ]
"471
[v _F `IF901 ~T0 @X0 1 e ]
{
[; ;prog.c: 471: void interrupt F() {
[e :U _F ]
[f ]
[; ;prog.c: 472: if (T0IF) {
"472
[e $ ! _T0IF 218  ]
{
[; ;prog.c: 474: T0IF = 0;
"474
[e = _T0IF -> -> 0 `i `b ]
[; ;prog.c: 475: TMR0 += TMR0_VALUE;
"475
[e =+ _TMR0 _TMR0_VALUE ]
[; ;prog.c: 477: if (DigitNumber > 2)DigitNumber = 0;
"477
[e $ ! > -> _DigitNumber `i -> 2 `i 219  ]
[e = _DigitNumber -> -> 0 `i `uc ]
[e :U 219 ]
[; ;prog.c: 478: digitnum = PortAData[DigitNumber];
"478
[e = _digitnum *U + &U _PortAData * -> _DigitNumber `ux -> -> # *U &U _PortAData `ui `ux ]
"479
[v _dig `uc ~T0 @X0 1 a ]
[; ;prog.c: 479: unsigned char dig = digits[DigitNumber];
[e = _dig *U + &U _digits * -> _DigitNumber `ux -> -> # *U &U _digits `ui `ux ]
[; ;prog.c: 480: digitemp = convDig(0b00111111 & dig);
"480
[e = _digitemp ( _convDig (1 -> & -> 63 `i -> _dig `i `uc ]
[; ;prog.c: 484: (0b01000000 == (0b01000000 & dig)) ? digitemp |= 0b00000100 : digitemp &= 0b11111011;
"484
[e ? == -> 64 `i & -> 64 `i -> _dig `i : -> =| _digitemp -> -> 4 `i `uc `i -> =& _digitemp -> -> 251 `i `uc `i ]
[; ;prog.c: 485: DigitNumber++;
"485
[e ++ _DigitNumber -> -> 1 `i `uc ]
[; ;prog.c: 487: PORTB = digitemp;
"487
[e = _PORTB _digitemp ]
[; ;prog.c: 488: PORTA = (PORTA & 0b00110110) | digitnum;
"488
[e = _PORTA -> | & -> _PORTA `i -> 54 `i -> _digitnum `i `uc ]
[; ;prog.c: 489: endInterrupt = 1;
"489
[e = _endInterrupt -> -> 1 `i `b ]
[; ;prog.c: 490: powerOnInterval--;
"490
[e -- _powerOnInterval -> 1 `i ]
[; ;prog.c: 491: if (powerOnInterval == 0 && PowerBlocked == 0) {
"491
[e $ ! && == _powerOnInterval -> 0 `i == -> _PowerBlocked `i -> 0 `i 220  ]
{
[; ;prog.c: 492: powerOff = 1;
"492
[e = _powerOff -> -> 1 `i `b ]
[; ;prog.c: 493: TRISA4 = 1;
"493
[e = _TRISA4 -> -> 1 `i `b ]
"494
}
[e :U 220 ]
"496
[v F903 `ui ~T0 @X0 1 s KeyTimeCounter ]
[i F903
-> -> 0 `i `ui
]
"497
[v F904 `uc ~T0 @X0 1 s LastKeysState ]
[i F904
-> -> 0 `i `uc
]
"498
[v F905 `uc ~T0 @X0 1 s long_press ]
[i F905
-> -> 0 `i `uc
]
"499
[v F906 `uc ~T0 @X0 1 s ButtonPressTimeIn1 ]
[i F906
-> -> 0 `i `uc
]
"500
[v F907 `uc ~T0 @X0 1 s ButtonPressTimeIn2 ]
[i F907
-> -> 0 `i `uc
]
"501
[v F908 `uc ~T0 @X0 1 s ButtonPressTimeOut ]
[i F908
-> -> 0 `i `uc
]
"502
[v _CurrentKeysState `uc ~T0 @X0 1 a ]
[; ;prog.c: 494: }
[; ;prog.c: 496: static unsigned int KeyTimeCounter = 0;
[; ;prog.c: 497: static unsigned char LastKeysState = 0;
[; ;prog.c: 498: static unsigned char long_press = 0;
[; ;prog.c: 499: static unsigned char ButtonPressTimeIn1 = 0;
[; ;prog.c: 500: static unsigned char ButtonPressTimeIn2 = 0;
[; ;prog.c: 501: static unsigned char ButtonPressTimeOut = 0;
[; ;prog.c: 502: unsigned char CurrentKeysState = 0;
[e = _CurrentKeysState -> -> 0 `i `uc ]
[; ;prog.c: 504: if (ButtonPressTimeOut > 0) {
"504
[e $ ! > -> F908 `i -> 0 `i 221  ]
{
[; ;prog.c: 505: ButtonPressTimeOut--;
"505
[e -- F908 -> -> 1 `i `uc ]
"506
}
[; ;prog.c: 506: } else {
[e $U 222  ]
[e :U 221 ]
{
[; ;prog.c: 508: KeyCode = 0;
"508
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 510: if (RA2) {
"510
[e $ ! _RA2 223  ]
{
[; ;prog.c: 511: CurrentKeysState = CurrentKeysState | 0b00000001;
"511
[e = _CurrentKeysState -> | -> _CurrentKeysState `i -> 1 `i `uc ]
[; ;prog.c: 512: ButtonPressTimeIn1 = 25;
"512
[e = F906 -> -> 25 `i `uc ]
"513
}
[; ;prog.c: 513: } else {
[e $U 224  ]
[e :U 223 ]
{
[; ;prog.c: 514: if (ButtonPressTimeIn1 == 0) {
"514
[e $ ! == -> F906 `i -> 0 `i 225  ]
{
[; ;prog.c: 515: CurrentKeysState = CurrentKeysState & 0b11111110;
"515
[e = _CurrentKeysState -> & -> _CurrentKeysState `i -> 254 `i `uc ]
"516
}
[; ;prog.c: 516: } else {
[e $U 226  ]
[e :U 225 ]
{
[; ;prog.c: 517: ButtonPressTimeIn1--;
"517
[e -- F906 -> -> 1 `i `uc ]
"518
}
[e :U 226 ]
"519
}
[e :U 224 ]
[; ;prog.c: 518: }
[; ;prog.c: 519: }
[; ;prog.c: 521: if (RA1) {
"521
[e $ ! _RA1 227  ]
{
[; ;prog.c: 522: CurrentKeysState = CurrentKeysState | 0b00000010;
"522
[e = _CurrentKeysState -> | -> _CurrentKeysState `i -> 2 `i `uc ]
[; ;prog.c: 523: ButtonPressTimeIn2 = 25;
"523
[e = F907 -> -> 25 `i `uc ]
"524
}
[; ;prog.c: 524: } else {
[e $U 228  ]
[e :U 227 ]
{
[; ;prog.c: 525: if (ButtonPressTimeIn2 == 0) {
"525
[e $ ! == -> F907 `i -> 0 `i 229  ]
{
[; ;prog.c: 526: CurrentKeysState = CurrentKeysState & 0b11111101;
"526
[e = _CurrentKeysState -> & -> _CurrentKeysState `i -> 253 `i `uc ]
"527
}
[; ;prog.c: 527: } else {
[e $U 230  ]
[e :U 229 ]
{
[; ;prog.c: 528: ButtonPressTimeIn2--;
"528
[e -- F907 -> -> 1 `i `uc ]
"529
}
[e :U 230 ]
"530
}
[e :U 228 ]
[; ;prog.c: 529: }
[; ;prog.c: 530: }
[; ;prog.c: 532: if ((ButtonPressTimeIn1 == 0 || ButtonPressTimeIn1 == 25) && (ButtonPressTimeIn2 == 0 || ButtonPressTimeIn2 == 25)) {
"532
[e $ ! && || == -> F906 `i -> 0 `i == -> F906 `i -> 25 `i || == -> F907 `i -> 0 `i == -> F907 `i -> 25 `i 231  ]
{
[; ;prog.c: 533: if (CurrentKeysState > 0) {
"533
[e $ ! > -> _CurrentKeysState `i -> 0 `i 232  ]
{
[; ;prog.c: 534: if (LastKeysState != CurrentKeysState) {
"534
[e $ ! != -> F904 `i -> _CurrentKeysState `i 233  ]
{
[; ;prog.c: 535: KeyTimeCounter = 0;
"535
[e = F903 -> -> 0 `i `ui ]
[; ;prog.c: 536: long_press = 0;
"536
[e = F905 -> -> 0 `i `uc ]
[; ;prog.c: 537: LastKeysState = CurrentKeysState;
"537
[e = F904 _CurrentKeysState ]
"538
}
[; ;prog.c: 538: } else if (KeyTimeCounter < 150) {
[e $U 234  ]
[e :U 233 ]
[e $ ! < F903 -> -> 150 `i `ui 235  ]
{
[; ;prog.c: 539: KeyTimeCounter++;
"539
[e ++ F903 -> -> 1 `i `ui ]
"540
}
[; ;prog.c: 540: } else if (KeyTimeCounter == 150 && !long_press) {
[e $U 236  ]
[e :U 235 ]
[e $ ! && == F903 -> -> 150 `i `ui ! != -> F905 `i -> -> -> 0 `i `uc `i 237  ]
{
[; ;prog.c: 541: long_press = 1;
"541
[e = F905 -> -> 1 `i `uc ]
"542
}
[e :U 237 ]
"544
[e :U 236 ]
[e :U 234 ]
[; ;prog.c: 542: }
[; ;prog.c: 544: if (long_press == 1) {
[e $ ! == -> F905 `i -> 1 `i 238  ]
{
[; ;prog.c: 545: KeyCode = 30 + LastKeysState + 3;
"545
[e = _KeyCode -> + + -> 30 `i -> F904 `i -> 3 `i `uc ]
[; ;prog.c: 546: long_press = 2;
"546
[e = F905 -> -> 2 `i `uc ]
[; ;prog.c: 547: ButtonPressTimeOut = 40;
"547
[e = F908 -> -> 40 `i `uc ]
"548
}
[e :U 238 ]
"550
}
[; ;prog.c: 548: }
[; ;prog.c: 550: } else if (LastKeysState > 0 && long_press == 0) {
[e $U 239  ]
[e :U 232 ]
[e $ ! && > -> F904 `i -> 0 `i == -> F905 `i -> 0 `i 240  ]
{
[; ;prog.c: 551: KeyCode = 30 + LastKeysState;
"551
[e = _KeyCode -> + -> 30 `i -> F904 `i `uc ]
[; ;prog.c: 552: LastKeysState = 0;
"552
[e = F904 -> -> 0 `i `uc ]
[; ;prog.c: 553: KeyTimeCounter = 0;
"553
[e = F903 -> -> 0 `i `ui ]
[; ;prog.c: 554: long_press = 0;
"554
[e = F905 -> -> 0 `i `uc ]
[; ;prog.c: 555: ButtonPressTimeOut = 40;
"555
[e = F908 -> -> 40 `i `uc ]
"557
}
[; ;prog.c: 557: } else if (long_press == 2) {
[e $U 241  ]
[e :U 240 ]
[e $ ! == -> F905 `i -> 2 `i 242  ]
{
[; ;prog.c: 558: LastKeysState = 0;
"558
[e = F904 -> -> 0 `i `uc ]
[; ;prog.c: 559: KeyTimeCounter = 0;
"559
[e = F903 -> -> 0 `i `ui ]
[; ;prog.c: 560: long_press = 0;
"560
[e = F905 -> -> 0 `i `uc ]
[; ;prog.c: 561: ButtonPressTimeOut = 40;
"561
[e = F908 -> -> 40 `i `uc ]
"562
}
[e :U 242 ]
"563
[e :U 241 ]
[e :U 239 ]
}
[e :U 231 ]
"564
}
[e :U 222 ]
[; ;prog.c: 562: }
[; ;prog.c: 563: }
[; ;prog.c: 564: }
[; ;prog.c: 566: get_temp_Async();
"566
[e ( _get_temp_Async ..  ]
"567
}
[e :U 218 ]
[; ;prog.c: 567: }
[; ;prog.c: 568: }
"568
[e :UE 217 ]
}
"570
[v _indData `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 570: void indData() {
[e :U _indData ]
[f ]
"572
[v _cd `uc ~T0 @X0 1 a ]
[; ;prog.c: 572: unsigned char cd = 3;
[e = _cd -> -> 3 `i `uc ]
"573
[v _dN `uc ~T0 @X0 1 a ]
[; ;prog.c: 573: unsigned char dN = 3;
[e = _dN -> -> 3 `i `uc ]
[; ;prog.c: 575: if (sign != 0) {
"575
[e $ ! != -> _sign `i -> 0 `i 244  ]
{
[; ;prog.c: 576: setDigit(cd, 32);
"576
[e ( _setDigit (2 , _cd -> -> 32 `i `uc ]
[; ;prog.c: 577: cd--;
"577
[e -- _cd -> -> 1 `i `uc ]
[; ;prog.c: 578: dN--;
"578
[e -- _dN -> -> 1 `i `uc ]
"579
}
[e :U 244 ]
"580
[v _isPoint `uc ~T0 @X0 1 a ]
[; ;prog.c: 579: }
[; ;prog.c: 580: unsigned char isPoint = 0;
[e = _isPoint -> -> 0 `i `uc ]
[; ;prog.c: 581: do {
"581
[e :U 247 ]
{
"582
[v _v `uc ~T0 @X0 1 a ]
[; ;prog.c: 582: unsigned char v = (temperature > 9 ? 1 : 0) + (temperature > 99 ? 1 : 0);
[e = _v -> + ? > -> _temperature `i -> 9 `i : -> 1 `i -> 0 `i ? > -> _temperature `i -> 99 `i : -> 1 `i -> 0 `i `uc ]
[; ;prog.c: 583: setDigit(cd - v, temperature % 10);
"583
[e ( _setDigit (2 , -> - -> _cd `i -> _v `i `uc -> % -> _temperature `i -> 10 `i `uc ]
[; ;prog.c: 584: if (!isPoint) {
"584
[e $ ! ! != -> _isPoint `i -> -> -> 0 `i `uc `i 248  ]
{
[; ;prog.c: 585: setPoint(cd - v, 1);
"585
[e ( _setPoint (2 , -> - -> _cd `i -> _v `i `uc -> -> 1 `i `uc ]
[; ;prog.c: 586: isPoint = 1;
"586
[e = _isPoint -> -> 1 `i `uc ]
"587
}
[e :U 248 ]
[; ;prog.c: 587: }
[; ;prog.c: 588: temperature /= 10;
"588
[e =/ _temperature -> 10 `uc ]
[; ;prog.c: 589: dN--;
"589
[e -- _dN -> -> 1 `i `uc ]
"590
}
[; ;prog.c: 590: } while (temperature > 0);
[e $ > -> _temperature `i -> 0 `i 247  ]
[e :U 246 ]
[; ;prog.c: 592: if (dN > 0) {
"592
[e $ ! > -> _dN `i -> 0 `i 249  ]
{
[; ;prog.c: 593: cd = dN;
"593
[e = _cd _dN ]
[; ;prog.c: 594: if (temp_drob > 99) temp_drob /= 10;
"594
[e $ ! > -> _temp_drob `i -> 99 `i 250  ]
[e =/ _temp_drob -> 10 `uc ]
[e :U 250 ]
[; ;prog.c: 595: if (temp_drob > 9 && dN == 1) temp_drob /= 10;
"595
[e $ ! && > -> _temp_drob `i -> 9 `i == -> _dN `i -> 1 `i 251  ]
[e =/ _temp_drob -> 10 `uc ]
[e :U 251 ]
[; ;prog.c: 596: do {
"596
[e :U 254 ]
{
"597
[v _v `uc ~T0 @X0 1 a ]
[; ;prog.c: 597: unsigned char v = (temp_drob > 9 ? 1 : 0);
[e = _v -> ? > -> _temp_drob `i -> 9 `i : -> 1 `i -> 0 `i `uc ]
[; ;prog.c: 598: setDigit(cd - v, temp_drob % 10);
"598
[e ( _setDigit (2 , -> - -> _cd `i -> _v `i `uc -> % -> _temp_drob `i -> 10 `i `uc ]
[; ;prog.c: 599: temp_drob /= 10;
"599
[e =/ _temp_drob -> 10 `uc ]
[; ;prog.c: 600: dN--;
"600
[e -- _dN -> -> 1 `i `uc ]
"601
}
[; ;prog.c: 601: } while (temp_drob > 0);
[e $ > -> _temp_drob `i -> 0 `i 254  ]
[e :U 253 ]
"602
}
[e :U 249 ]
[; ;prog.c: 602: }
[; ;prog.c: 604: while (dN > 0) {
"604
[e $U 255  ]
[e :U 256 ]
{
[; ;prog.c: 605: setDigit(dN, 0);
"605
[e ( _setDigit (2 , _dN -> -> 0 `i `uc ]
[; ;prog.c: 606: dN--;
"606
[e -- _dN -> -> 1 `i `uc ]
"607
}
[e :U 255 ]
"604
[e $ > -> _dN `i -> 0 `i 256  ]
[e :U 257 ]
[; ;prog.c: 607: }
[; ;prog.c: 608: }
"608
[e :UE 243 ]
}
"610
[v _ReadCell `(v ~T0 @X0 1 ef3`uc`*uc`*uc ]
{
[; ;prog.c: 610: void ReadCell(unsigned char cell, unsigned char * CellsData, unsigned char * CellIsEmpty) {
[e :U _ReadCell ]
[v _cell `uc ~T0 @X0 1 r1 ]
[v _CellsData `*uc ~T0 @X0 1 r2 ]
[v _CellIsEmpty `*uc ~T0 @X0 1 r3 ]
[f ]
"611
[v __CellIsEmpty `uc ~T0 @X0 1 a ]
[; ;prog.c: 611: unsigned char _CellIsEmpty = 1;
[e = __CellIsEmpty -> -> 1 `i `uc ]
[; ;prog.c: 612: FillArrayFromEEPROM(CellsData, cell * (sizeof(DS_Address)), (sizeof(DS_Address)));
"612
[e ( _FillArrayFromEEPROM (3 , , _CellsData -> * -> _cell `ui -> # _DS_Address `ui `uc -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 613: for (unsigned char i = 0; i < (sizeof(DS_Address)); i++) {
"613
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 259  ]
[e $U 260  ]
[e :U 259 ]
{
[; ;prog.c: 614: if (CellsData[i] != 0xFF) {
"614
[e $ ! != -> *U + _CellsData * -> _i `ux -> -> # *U _CellsData `ui `ux `i -> 255 `i 262  ]
{
[; ;prog.c: 615: _CellIsEmpty = 0;
"615
[e = __CellIsEmpty -> -> 0 `i `uc ]
[; ;prog.c: 616: break;
"616
[e $U 260  ]
"617
}
[e :U 262 ]
"618
}
"613
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 259  ]
[e :U 260 ]
"618
}
[; ;prog.c: 617: }
[; ;prog.c: 618: }
[; ;prog.c: 619: *CellIsEmpty = _CellIsEmpty;
"619
[e = *U _CellIsEmpty __CellIsEmpty ]
[; ;prog.c: 620: }
"620
[e :UE 258 ]
}
"622
[v _CellToInd `(v ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 622: void CellToInd(unsigned char cell) {
[e :U _CellToInd ]
[v _cell `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 623: clrInd();
"623
[e ( _clrInd ..  ]
[; ;prog.c: 625: if (cell >= 9) {
"625
[e $ ! >= -> _cell `i -> 9 `i 264  ]
{
[; ;prog.c: 626: setDigit(3, (1 + cell) / 10);
"626
[e ( _setDigit (2 , -> -> 3 `i `uc -> / + -> 1 `i -> _cell `i -> 10 `i `uc ]
[; ;prog.c: 627: setDigit(2, (1 + cell) % 10);
"627
[e ( _setDigit (2 , -> -> 2 `i `uc -> % + -> 1 `i -> _cell `i -> 10 `i `uc ]
"628
}
[; ;prog.c: 628: } else {
[e $U 265  ]
[e :U 264 ]
{
[; ;prog.c: 629: setDigit(3, 1 + cell);
"629
[e ( _setDigit (2 , -> -> 3 `i `uc -> + -> 1 `i -> _cell `i `uc ]
[; ;prog.c: 630: setDigit(2, 34);
"630
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 34 `i `uc ]
"631
}
[e :U 265 ]
[; ;prog.c: 631: }
[; ;prog.c: 632: setDigit(1, 34);
"632
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 34 `i `uc ]
[; ;prog.c: 634: refreshInd();
"634
[e ( _refreshInd ..  ]
[; ;prog.c: 635: }
"635
[e :UE 263 ]
}
"637
[v _EditAddressMemory `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 637: void EditAddressMemory() {
[e :U _EditAddressMemory ]
[f ]
[; ;prog.c: 638: getTemp_flags.ActiveProcess = 0;
"638
[e = . _getTemp_flags 9 -> -> 0 `i `uc ]
[; ;prog.c: 640: PowerBlocked++;
"640
[e ++ _PowerBlocked -> -> 1 `i `uc ]
[; ;prog.c: 642: clrInd();
"642
[e ( _clrInd ..  ]
"644
[v _cell `uc ~T0 @X0 1 a ]
[; ;prog.c: 644: unsigned char cell = 0;
[e = _cell -> -> 0 `i `uc ]
"645
[v _CellIsEmpty `uc ~T0 @X0 1 a ]
[; ;prog.c: 645: unsigned char CellIsEmpty = 1;
[e = _CellIsEmpty -> -> 1 `i `uc ]
"646
[v _CellsData `uc ~T0 @X0 -> # _DS_Address `ui a ]
[; ;prog.c: 646: unsigned char CellsData [(sizeof(DS_Address))];
[; ;prog.c: 648: ReadCell(cell, CellsData, &CellIsEmpty);
"648
[e ( _ReadCell (3 , , _cell &U _CellsData &U _CellIsEmpty ]
[; ;prog.c: 649: CellToInd(cell);
"649
[e ( _CellToInd (1 _cell ]
[; ;prog.c: 651: while (1) {
"651
[e :U 268 ]
{
[; ;prog.c: 652: if (KeyCode == 31) {
"652
[e $ ! == -> _KeyCode `i -> 31 `i 270  ]
{
[; ;prog.c: 653: KeyCode = 0;
"653
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 654: if (cell > 0) {
"654
[e $ ! > -> _cell `i -> 0 `i 271  ]
{
[; ;prog.c: 655: cell--;
"655
[e -- _cell -> -> 1 `i `uc ]
"656
}
[; ;prog.c: 656: } else {
[e $U 272  ]
[e :U 271 ]
{
[; ;prog.c: 657: cell = 16 - 1;
"657
[e = _cell -> - -> 16 `i -> 1 `i `uc ]
"658
}
[e :U 272 ]
[; ;prog.c: 658: }
[; ;prog.c: 659: ReadCell(cell, CellsData, &CellIsEmpty);
"659
[e ( _ReadCell (3 , , _cell &U _CellsData &U _CellIsEmpty ]
[; ;prog.c: 660: CellToInd(cell);
"660
[e ( _CellToInd (1 _cell ]
"661
}
[; ;prog.c: 661: } else if (KeyCode == 32) {
[e $U 273  ]
[e :U 270 ]
[e $ ! == -> _KeyCode `i -> 32 `i 274  ]
{
[; ;prog.c: 662: KeyCode = 0;
"662
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 663: if (cell < 16 - 1) {
"663
[e $ ! < -> _cell `i - -> 16 `i -> 1 `i 275  ]
{
[; ;prog.c: 664: cell++;
"664
[e ++ _cell -> -> 1 `i `uc ]
"665
}
[; ;prog.c: 665: } else {
[e $U 276  ]
[e :U 275 ]
{
[; ;prog.c: 666: cell = 0;
"666
[e = _cell -> -> 0 `i `uc ]
"667
}
[e :U 276 ]
[; ;prog.c: 667: }
[; ;prog.c: 668: ReadCell(cell, CellsData, &CellIsEmpty);
"668
[e ( _ReadCell (3 , , _cell &U _CellsData &U _CellIsEmpty ]
[; ;prog.c: 669: CellToInd(cell);
"669
[e ( _CellToInd (1 _cell ]
"670
}
[; ;prog.c: 670: } else if (KeyCode == 34) {
[e $U 277  ]
[e :U 274 ]
[e $ ! == -> _KeyCode `i -> 34 `i 278  ]
{
[; ;prog.c: 671: KeyCode = 0;
"671
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 672: clrInd();
"672
[e ( _clrInd ..  ]
[; ;prog.c: 673: refreshInd();
"673
[e ( _refreshInd ..  ]
[; ;prog.c: 674: break;
"674
[e $U 269  ]
"675
}
[; ;prog.c: 675: } else if (KeyCode == 35 && CellIsEmpty == 1) {
[e $U 279  ]
[e :U 278 ]
[e $ ! && == -> _KeyCode `i -> 35 `i == -> _CellIsEmpty `i -> 1 `i 280  ]
{
[; ;prog.c: 676: KeyCode = 0;
"676
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 677: waitInterrupt();
"677
[e ( _waitInterrupt ..  ]
[; ;prog.c: 678: if (INIT()) {
"678
[e $ ! ( _INIT ..  281  ]
{
[; ;prog.c: 679: waitInterrupt();
"679
[e ( _waitInterrupt ..  ]
[; ;prog.c: 680: TX(0x33);
"680
[e ( _TX (1 -> -> 51 `i `uc ]
[; ;prog.c: 681: waitInterrupt();
"681
[e ( _waitInterrupt ..  ]
[v _CellsData `uc ~T0 @X0 -> # _DS_Address `ui a ]
[; ;prog.c: 682: unsigned char CellsData [(sizeof(DS_Address))];
[; ;prog.c: 683: for (unsigned char i = 0; i < (sizeof(DS_Address)); i++) {
"683
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 282  ]
[e $U 283  ]
[e :U 282 ]
{
[; ;prog.c: 684: waitInterrupt();
"684
[e ( _waitInterrupt ..  ]
[; ;prog.c: 685: CellsData[i] = RX();
"685
[e = *U + &U _CellsData * -> _i `ux -> -> # *U &U _CellsData `ui `ux ( _RX ..  ]
"686
}
"683
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 282  ]
[e :U 283 ]
"686
}
[; ;prog.c: 686: }
[; ;prog.c: 687: if (CellsData[(sizeof(DS_Address)) - 1] == calc_crc(CellsData, (sizeof(DS_Address)) - 1)) {
"687
[e $ ! == -> *U + &U _CellsData * -> - -> # _DS_Address `ui -> -> 1 `i `ui `ux -> -> # *U &U _CellsData `ui `ux `i -> ( _calc_crc (2 , &U _CellsData -> - -> # _DS_Address `ui -> -> 1 `i `ui `uc `i 285  ]
{
[; ;prog.c: 688: waitInterrupt();
"688
[e ( _waitInterrupt ..  ]
[; ;prog.c: 689: WriteArrayToEEPROM(CellsData, cell * (sizeof(DS_Address)), (sizeof(DS_Address)));
"689
[e ( _WriteArrayToEEPROM (3 , , &U _CellsData -> * -> _cell `ui -> # _DS_Address `ui `uc -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 690: waitInterrupt();
"690
[e ( _waitInterrupt ..  ]
[; ;prog.c: 691: ReadCell(cell, CellsData, &CellIsEmpty);
"691
[e ( _ReadCell (3 , , _cell &U _CellsData &U _CellIsEmpty ]
"692
}
[; ;prog.c: 692: } else {
[e $U 286  ]
[e :U 285 ]
{
[; ;prog.c: 693: ShowError();
"693
[e ( _ShowError ..  ]
"694
}
[e :U 286 ]
"695
}
[e :U 281 ]
"696
}
[; ;prog.c: 694: }
[; ;prog.c: 695: }
[; ;prog.c: 696: } else if (KeyCode == 36 && CellIsEmpty == 0) {
[e $U 287  ]
[e :U 280 ]
[e $ ! && == -> _KeyCode `i -> 36 `i == -> _CellIsEmpty `i -> 0 `i 288  ]
{
[; ;prog.c: 697: KeyCode = 0;
"697
[e = _KeyCode -> -> 0 `i `uc ]
[v _CellsData `uc ~T0 @X0 -> # _DS_Address `ui a ]
[; ;prog.c: 698: unsigned char CellsData [(sizeof(DS_Address))];
[; ;prog.c: 699: for (unsigned char i = 0; i < (sizeof(DS_Address)); i++) {
"699
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 289  ]
[e $U 290  ]
[e :U 289 ]
{
[; ;prog.c: 700: CellsData[i] = 0xFF;
"700
[e = *U + &U _CellsData * -> _i `ux -> -> # *U &U _CellsData `ui `ux -> -> 255 `i `uc ]
"701
}
"699
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Address `ui 289  ]
[e :U 290 ]
"701
}
[; ;prog.c: 701: }
[; ;prog.c: 702: waitInterrupt();
"702
[e ( _waitInterrupt ..  ]
[; ;prog.c: 703: WriteArrayToEEPROM(CellsData, cell * (sizeof(DS_Address)), (sizeof(DS_Address)));
"703
[e ( _WriteArrayToEEPROM (3 , , &U _CellsData -> * -> _cell `ui -> # _DS_Address `ui `uc -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 704: waitInterrupt();
"704
[e ( _waitInterrupt ..  ]
[; ;prog.c: 705: ReadCell(cell, CellsData, &CellIsEmpty);
"705
[e ( _ReadCell (3 , , _cell &U _CellsData &U _CellIsEmpty ]
"706
}
[e :U 288 ]
"709
[e :U 287 ]
[e :U 279 ]
[e :U 277 ]
[e :U 273 ]
[; ;prog.c: 706: }
[; ;prog.c: 709: setPoint(1, !CellIsEmpty);
[e ( _setPoint (2 , -> -> 1 `i `uc -> -> ! != -> _CellIsEmpty `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;prog.c: 711: refreshInd();
"711
[e ( _refreshInd ..  ]
"712
}
[e :U 267 ]
"651
[e $U 268  ]
[e :U 269 ]
[; ;prog.c: 712: }
[; ;prog.c: 713: PowerBlocked--;
"713
[e -- _PowerBlocked -> -> 1 `i `uc ]
[; ;prog.c: 714: }
"714
[e :UE 266 ]
}
"716
[v _Run_getTemp `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 716: void Run_getTemp() {
[e :U _Run_getTemp ]
[f ]
[; ;prog.c: 718: getTemp_flags.Init = 1;
"718
[e = . _getTemp_flags 0 -> -> 1 `i `uc ]
[; ;prog.c: 719: getTemp_flags.Send_Address = 1;
"719
[e = . _getTemp_flags 1 -> -> 1 `i `uc ]
[; ;prog.c: 720: getTemp_flags.CountAddressBytes = 0;
"720
[e = . _getTemp_flags 2 -> -> 0 `i `uc ]
[; ;prog.c: 721: getTemp_flags.SendConvertTemp = 1;
"721
[e = . _getTemp_flags 3 -> -> 1 `i `uc ]
[; ;prog.c: 722: getTemp_flags.PauseValue = 120;
"722
[e = . _getTemp_flags 4 -> -> 120 `i `ui ]
[; ;prog.c: 723: getTemp_flags.SendGetTemp = 1;
"723
[e = . _getTemp_flags 5 -> -> 1 `i `uc ]
[; ;prog.c: 724: getTemp_flags.ReadData = 1;
"724
[e = . _getTemp_flags 6 -> -> 1 `i `uc ]
[; ;prog.c: 725: getTemp_flags.CountDataBytes = 0;
"725
[e = . _getTemp_flags 7 -> -> 0 `i `uc ]
[; ;prog.c: 726: getTemp_flags.Error = 0;
"726
[e = . _getTemp_flags 8 -> -> 0 `i `uc ]
[; ;prog.c: 728: getTemp_flags.ActiveProcess = 1;
"728
[e = . _getTemp_flags 9 -> -> 1 `i `uc ]
[; ;prog.c: 730: }
"730
[e :UE 292 ]
}
"732
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 732: void main() {
[e :U _main ]
[f ]
[; ;prog.c: 735: INTCON = 0;
"735
[e = _INTCON -> -> 0 `i `uc ]
[; ;prog.c: 736: OPTION_REG = 0b00000111;
"736
[e = _OPTION_REG -> -> 7 `i `uc ]
[; ;prog.c: 737: TRISA = 0b00000110;
"737
[e = _TRISA -> -> 6 `i `uc ]
[; ;prog.c: 738: TRISB = 0b00000000;
"738
[e = _TRISB -> -> 0 `i `uc ]
[; ;prog.c: 739: PORTA = 0b00000000;
"739
[e = _PORTA -> -> 0 `i `uc ]
[; ;prog.c: 740: PORTB = 0b00000000;
"740
[e = _PORTB -> -> 0 `i `uc ]
[; ;prog.c: 741: TMR0 = TMR0_VALUE;
"741
[e = _TMR0 _TMR0_VALUE ]
[; ;prog.c: 742: T2CON = 0b00000100;
"742
[e = _T2CON -> -> 4 `i `uc ]
[; ;prog.c: 743: CMCON = 0b00000111;
"743
[e = _CMCON -> -> 7 `i `uc ]
[; ;prog.c: 744: INTCON = 0b10100000;
"744
[e = _INTCON -> -> 160 `i `uc ]
[; ;prog.c: 746: Reset_powerOnInterval();
"746
[e ( _Reset_powerOnInterval ..  ]
[; ;prog.c: 748: clrInd();
"748
[e ( _clrInd ..  ]
[; ;prog.c: 749: setDigit(1, 32);
"749
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 750: setDigit(2, 32);
"750
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 751: setDigit(3, 32);
"751
[e ( _setDigit (2 , -> -> 3 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 753: refreshInd();
"753
[e ( _refreshInd ..  ]
[; ;prog.c: 755: waitInterrupt();
"755
[e ( _waitInterrupt ..  ]
[; ;prog.c: 757: INIT();
"757
[e ( _INIT ..  ]
[; ;prog.c: 758: waitInterrupt();
"758
[e ( _waitInterrupt ..  ]
[; ;prog.c: 759: TX(0xCC);
"759
[e ( _TX (1 -> -> 204 `i `uc ]
[; ;prog.c: 760: waitInterrupt();
"760
[e ( _waitInterrupt ..  ]
[; ;prog.c: 761: TX(0x44);
"761
[e ( _TX (1 -> -> 68 `i `uc ]
"763
[v _address `uc ~T0 @X0 1 a ]
[; ;prog.c: 763: unsigned char address = FindCell(((sizeof(DS_Address)) * 16), 0);
[e = _address ( _FindCell (2 , -> * -> # _DS_Address `ui -> -> 16 `i `ui `uc -> -> 0 `i `uc ]
[; ;prog.c: 764: Broadcasting = address == ((sizeof(DS_Address)) * 16);
"764
[e = _Broadcasting == -> _address `ui * -> # _DS_Address `ui -> -> 16 `i `ui ]
"766
[v _cell `uc ~T0 @X0 1 a ]
[; ;prog.c: 766: unsigned char cell = 0;
[e = _cell -> -> 0 `i `uc ]
[; ;prog.c: 768: if (!Broadcasting) {
"768
[e $ ! ! _Broadcasting 294  ]
{
[; ;prog.c: 769: FillArrayFromEEPROM(DS_Address, address, (sizeof(DS_Address)));
"769
[e ( _FillArrayFromEEPROM (3 , , &U _DS_Address _address -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 770: cell = address / (sizeof(DS_Address));
"770
[e = _cell -> / -> _address `ui -> # _DS_Address `ui `uc ]
"771
}
[e :U 294 ]
"773
[v _data_on_ind_delay `ui ~T0 @X0 1 a ]
[; ;prog.c: 771: }
[; ;prog.c: 773: unsigned int data_on_ind_delay = 0;
[e = _data_on_ind_delay -> -> 0 `i `ui ]
[; ;prog.c: 775: Run_getTemp();
"775
[e ( _Run_getTemp ..  ]
[; ;prog.c: 777: while (1) {
"777
[e :U 296 ]
{
[; ;prog.c: 779: if (KeyCode == 33) {
"779
[e $ ! == -> _KeyCode `i -> 33 `i 298  ]
{
[; ;prog.c: 780: KeyCode = 0;
"780
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 781: if (PowerBlocked != 1) {
"781
[e $ ! != -> _PowerBlocked `i -> 1 `i 299  ]
{
[; ;prog.c: 782: PowerBlocked = 1;
"782
[e = _PowerBlocked -> -> 1 `i `uc ]
[; ;prog.c: 783: setPoint(1, 1);
"783
[e ( _setPoint (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;prog.c: 784: data_on_ind_delay = 10000;
"784
[e = _data_on_ind_delay -> -> 10000 `i `ui ]
[; ;prog.c: 785: refreshInd();
"785
[e ( _refreshInd ..  ]
"786
}
[; ;prog.c: 786: } else {
[e $U 300  ]
[e :U 299 ]
{
[; ;prog.c: 787: PowerBlocked = 0;
"787
[e = _PowerBlocked -> -> 0 `i `uc ]
"788
}
[e :U 300 ]
"789
}
[; ;prog.c: 788: }
[; ;prog.c: 789: } else if (!Broadcasting && KeyCode == 31 || KeyCode == 32 || KeyCode == 34) {
[e $U 301  ]
[e :U 298 ]
[e $ ! || || && ! _Broadcasting == -> _KeyCode `i -> 31 `i == -> _KeyCode `i -> 32 `i == -> _KeyCode `i -> 34 `i 302  ]
{
[; ;prog.c: 790: Reset_powerOnInterval();
"790
[e ( _Reset_powerOnInterval ..  ]
[; ;prog.c: 791: getTemp_flags.ActiveProcess = 0;
"791
[e = . _getTemp_flags 9 -> -> 0 `i `uc ]
[; ;prog.c: 792: address = FindCell((KeyCode == 34 ? ((sizeof(DS_Address)) * 16) : cell * (sizeof(DS_Address))), (KeyCode == 31 ? 1 : 0));
"792
[e = _address ( _FindCell (2 , -> ? == -> _KeyCode `i -> 34 `i : * -> # _DS_Address `ui -> -> 16 `i `ui * -> _cell `ui -> # _DS_Address `ui `uc -> ? == -> _KeyCode `i -> 31 `i : -> 1 `i -> 0 `i `uc ]
[; ;prog.c: 793: KeyCode = 0;
"793
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 795: waitInterrupt();
"795
[e ( _waitInterrupt ..  ]
[; ;prog.c: 796: FillArrayFromEEPROM(DS_Address, address, (sizeof(DS_Address)));
"796
[e ( _FillArrayFromEEPROM (3 , , &U _DS_Address _address -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 797: cell = address / (sizeof(DS_Address));
"797
[e = _cell -> / -> _address `ui -> # _DS_Address `ui `uc ]
[; ;prog.c: 799: CellToInd(cell);
"799
[e ( _CellToInd (1 _cell ]
[; ;prog.c: 800: data_on_ind_delay = 18000;
"800
[e = _data_on_ind_delay -> -> 18000 `i `ui ]
[; ;prog.c: 802: Run_getTemp();
"802
[e ( _Run_getTemp ..  ]
"804
}
[; ;prog.c: 804: } else if (KeyCode == 36) {
[e $U 303  ]
[e :U 302 ]
[e $ ! == -> _KeyCode `i -> 36 `i 304  ]
{
[; ;prog.c: 805: KeyCode = 0;
"805
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 806: EditAddressMemory();
"806
[e ( _EditAddressMemory ..  ]
[; ;prog.c: 808: Reset_powerOnInterval();
"808
[e ( _Reset_powerOnInterval ..  ]
[; ;prog.c: 809: address = FindCell(((sizeof(DS_Address)) * 16), 0);
"809
[e = _address ( _FindCell (2 , -> * -> # _DS_Address `ui -> -> 16 `i `ui `uc -> -> 0 `i `uc ]
[; ;prog.c: 810: Broadcasting = address == ((sizeof(DS_Address)) * 16);
"810
[e = _Broadcasting == -> _address `ui * -> # _DS_Address `ui -> -> 16 `i `ui ]
[; ;prog.c: 811: if (Broadcasting) {
"811
[e $ ! _Broadcasting 305  ]
{
[; ;prog.c: 812: setDigit(1, 32);
"812
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 813: setDigit(2, 32);
"813
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 814: setDigit(3, 32);
"814
[e ( _setDigit (2 , -> -> 3 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 815: refreshInd();
"815
[e ( _refreshInd ..  ]
"816
}
[; ;prog.c: 816: } else {
[e $U 306  ]
[e :U 305 ]
{
[; ;prog.c: 817: FillArrayFromEEPROM(DS_Address, address, (sizeof(DS_Address)));
"817
[e ( _FillArrayFromEEPROM (3 , , &U _DS_Address _address -> -> # _DS_Address `ui `uc ]
[; ;prog.c: 818: cell = address / (sizeof(DS_Address));
"818
[e = _cell -> / -> _address `ui -> # _DS_Address `ui `uc ]
[; ;prog.c: 820: CellToInd(cell);
"820
[e ( _CellToInd (1 _cell ]
[; ;prog.c: 821: data_on_ind_delay = 18000;
"821
[e = _data_on_ind_delay -> -> 18000 `i `ui ]
[; ;prog.c: 822: Run_getTemp();
"822
[e ( _Run_getTemp ..  ]
"823
}
[e :U 306 ]
"824
}
[e :U 304 ]
"826
[e :U 303 ]
[e :U 301 ]
[; ;prog.c: 823: }
[; ;prog.c: 824: }
[; ;prog.c: 826: if (getTemp_flags.Error) {
[e $ ! != -> . _getTemp_flags 8 `i -> -> -> 0 `i `uc `i 307  ]
{
[; ;prog.c: 827: ShowError();
"827
[e ( _ShowError ..  ]
"828
}
[; ;prog.c: 828: } else if (!getTemp_flags.ActiveProcess) {
[e $U 308  ]
[e :U 307 ]
[e $ ! ! != -> . _getTemp_flags 9 `i -> -> -> 0 `i `uc `i 309  ]
{
[; ;prog.c: 829: clrInd();
"829
[e ( _clrInd ..  ]
[; ;prog.c: 830: indData();
"830
[e ( _indData ..  ]
"831
}
[e :U 309 ]
"833
[e :U 308 ]
[; ;prog.c: 831: }
[; ;prog.c: 833: if (data_on_ind_delay == 0) {
[e $ ! == _data_on_ind_delay -> -> 0 `i `ui 310  ]
{
[; ;prog.c: 834: refreshInd();
"834
[e ( _refreshInd ..  ]
"835
}
[; ;prog.c: 835: } else {
[e $U 311  ]
[e :U 310 ]
{
[; ;prog.c: 836: data_on_ind_delay--;
"836
[e -- _data_on_ind_delay -> -> 1 `i `ui ]
"837
}
[e :U 311 ]
[; ;prog.c: 837: }
[; ;prog.c: 839: if (!getTemp_flags.ActiveProcess) {
"839
[e $ ! ! != -> . _getTemp_flags 9 `i -> -> -> 0 `i `uc `i 312  ]
{
[; ;prog.c: 840: Run_getTemp();
"840
[e ( _Run_getTemp ..  ]
"841
}
[e :U 312 ]
"844
}
[e :U 295 ]
"777
[e $U 296  ]
[e :U 297 ]
[; ;prog.c: 841: }
[; ;prog.c: 844: }
[; ;prog.c: 845: }
"845
[e :UE 293 ]
}
