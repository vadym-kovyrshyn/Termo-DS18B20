Version 3.2 HI-TECH Software Intermediate Code
"301 /opt/microchip/xc8/v1.37/include/pic16f628a.h
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"307
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"317
[s S19 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S19 . . TMR0IF . TMR0IE ]
"306
[u S17 `S18 1 `S19 1 ]
[n S17 . . . ]
"324
[v _INTCONbits `VS17 ~T0 @X0 0 e@11 ]
"1181
[v _EEADR `Vuc ~T0 @X0 0 e@155 ]
"1175
[v _EEDATA `Vuc ~T0 @X0 0 e@154 ]
"1193
[s S53 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S53 . RD WR WREN WRERR ]
"1192
[u S52 `S53 1 ]
[n S52 . . ]
"1200
[v _EECON1bits `VS52 ~T0 @X0 0 e@156 ]
"1224
[v _EECON2 `Vuc ~T0 @X0 0 e@157 ]
"1486
[v _TRISA3 `Vb ~T0 @X0 0 e@1067 ]
[v F782 `(v ~T0 @X0 1 tf1`ul ]
"152 /opt/microchip/xc8/v1.37/include/pic.h
[v __delay `JF782 ~T0 @X0 0 e ]
[p i __delay ]
"1386 /opt/microchip/xc8/v1.37/include/pic16f628a.h
[v _RA3 `Vb ~T0 @X0 0 e@43 ]
"1440
[v _T0IF `Vb ~T0 @X0 0 e@90 ]
"55
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"221
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"160
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"1488
[v _TRISA4 `Vb ~T0 @X0 0 e@1068 ]
"1384
[v _RA2 `Vb ~T0 @X0 0 e@42 ]
"1382
[v _RA1 `Vb ~T0 @X0 0 e@41 ]
[p mainexit ]
"812
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"881
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"942
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"516
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"743
[v _CMCON `Vuc ~T0 @X0 0 e@31 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16f628a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 /opt/microchip/xc8/v1.37/include/pic16f628a.h
[; ;pic16f628a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f628a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f628a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f628a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 72: typedef union {
[; ;pic16f628a.h: 73: struct {
[; ;pic16f628a.h: 74: unsigned C :1;
[; ;pic16f628a.h: 75: unsigned DC :1;
[; ;pic16f628a.h: 76: unsigned Z :1;
[; ;pic16f628a.h: 77: unsigned nPD :1;
[; ;pic16f628a.h: 78: unsigned nTO :1;
[; ;pic16f628a.h: 79: unsigned RP :2;
[; ;pic16f628a.h: 80: unsigned IRP :1;
[; ;pic16f628a.h: 81: };
[; ;pic16f628a.h: 82: struct {
[; ;pic16f628a.h: 83: unsigned :5;
[; ;pic16f628a.h: 84: unsigned RP0 :1;
[; ;pic16f628a.h: 85: unsigned RP1 :1;
[; ;pic16f628a.h: 86: };
[; ;pic16f628a.h: 87: struct {
[; ;pic16f628a.h: 88: unsigned CARRY :1;
[; ;pic16f628a.h: 89: };
[; ;pic16f628a.h: 90: struct {
[; ;pic16f628a.h: 91: unsigned :2;
[; ;pic16f628a.h: 92: unsigned ZERO :1;
[; ;pic16f628a.h: 93: };
[; ;pic16f628a.h: 94: } STATUSbits_t;
[; ;pic16f628a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f628a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f628a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 165: typedef union {
[; ;pic16f628a.h: 166: struct {
[; ;pic16f628a.h: 167: unsigned RA0 :1;
[; ;pic16f628a.h: 168: unsigned RA1 :1;
[; ;pic16f628a.h: 169: unsigned RA2 :1;
[; ;pic16f628a.h: 170: unsigned RA3 :1;
[; ;pic16f628a.h: 171: unsigned RA4 :1;
[; ;pic16f628a.h: 172: unsigned RA5 :1;
[; ;pic16f628a.h: 173: unsigned RA6 :1;
[; ;pic16f628a.h: 174: unsigned RA7 :1;
[; ;pic16f628a.h: 175: };
[; ;pic16f628a.h: 176: } PORTAbits_t;
[; ;pic16f628a.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f628a.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 226: typedef union {
[; ;pic16f628a.h: 227: struct {
[; ;pic16f628a.h: 228: unsigned RB0 :1;
[; ;pic16f628a.h: 229: unsigned RB1 :1;
[; ;pic16f628a.h: 230: unsigned RB2 :1;
[; ;pic16f628a.h: 231: unsigned RB3 :1;
[; ;pic16f628a.h: 232: unsigned RB4 :1;
[; ;pic16f628a.h: 233: unsigned RB5 :1;
[; ;pic16f628a.h: 234: unsigned RB6 :1;
[; ;pic16f628a.h: 235: unsigned RB7 :1;
[; ;pic16f628a.h: 236: };
[; ;pic16f628a.h: 237: } PORTBbits_t;
[; ;pic16f628a.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 282: extern volatile unsigned char PCLATH @ 0x00A;
"284
[; ;pic16f628a.h: 284: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 287: typedef union {
[; ;pic16f628a.h: 288: struct {
[; ;pic16f628a.h: 289: unsigned PCLATH :5;
[; ;pic16f628a.h: 290: };
[; ;pic16f628a.h: 291: } PCLATHbits_t;
[; ;pic16f628a.h: 292: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 301: extern volatile unsigned char INTCON @ 0x00B;
"303
[; ;pic16f628a.h: 303: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 306: typedef union {
[; ;pic16f628a.h: 307: struct {
[; ;pic16f628a.h: 308: unsigned RBIF :1;
[; ;pic16f628a.h: 309: unsigned INTF :1;
[; ;pic16f628a.h: 310: unsigned T0IF :1;
[; ;pic16f628a.h: 311: unsigned RBIE :1;
[; ;pic16f628a.h: 312: unsigned INTE :1;
[; ;pic16f628a.h: 313: unsigned T0IE :1;
[; ;pic16f628a.h: 314: unsigned PEIE :1;
[; ;pic16f628a.h: 315: unsigned GIE :1;
[; ;pic16f628a.h: 316: };
[; ;pic16f628a.h: 317: struct {
[; ;pic16f628a.h: 318: unsigned :2;
[; ;pic16f628a.h: 319: unsigned TMR0IF :1;
[; ;pic16f628a.h: 320: unsigned :2;
[; ;pic16f628a.h: 321: unsigned TMR0IE :1;
[; ;pic16f628a.h: 322: };
[; ;pic16f628a.h: 323: } INTCONbits_t;
[; ;pic16f628a.h: 324: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 378: extern volatile unsigned char PIR1 @ 0x00C;
"380
[; ;pic16f628a.h: 380: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 383: typedef union {
[; ;pic16f628a.h: 384: struct {
[; ;pic16f628a.h: 385: unsigned TMR1IF :1;
[; ;pic16f628a.h: 386: unsigned TMR2IF :1;
[; ;pic16f628a.h: 387: unsigned CCP1IF :1;
[; ;pic16f628a.h: 388: unsigned :1;
[; ;pic16f628a.h: 389: unsigned TXIF :1;
[; ;pic16f628a.h: 390: unsigned RCIF :1;
[; ;pic16f628a.h: 391: unsigned CMIF :1;
[; ;pic16f628a.h: 392: unsigned EEIF :1;
[; ;pic16f628a.h: 393: };
[; ;pic16f628a.h: 394: } PIR1bits_t;
[; ;pic16f628a.h: 395: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 434: extern volatile unsigned short TMR1 @ 0x00E;
"436
[; ;pic16f628a.h: 436: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 440: extern volatile unsigned char TMR1L @ 0x00E;
"442
[; ;pic16f628a.h: 442: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 446: extern volatile unsigned char TMR1H @ 0x00F;
"448
[; ;pic16f628a.h: 448: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 452: extern volatile unsigned char T1CON @ 0x010;
"454
[; ;pic16f628a.h: 454: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 457: typedef union {
[; ;pic16f628a.h: 458: struct {
[; ;pic16f628a.h: 459: unsigned TMR1ON :1;
[; ;pic16f628a.h: 460: unsigned TMR1CS :1;
[; ;pic16f628a.h: 461: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 462: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 463: unsigned T1CKPS :2;
[; ;pic16f628a.h: 464: };
[; ;pic16f628a.h: 465: struct {
[; ;pic16f628a.h: 466: unsigned :4;
[; ;pic16f628a.h: 467: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 468: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 469: };
[; ;pic16f628a.h: 470: } T1CONbits_t;
[; ;pic16f628a.h: 471: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 510: extern volatile unsigned char TMR2 @ 0x011;
"512
[; ;pic16f628a.h: 512: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 516: extern volatile unsigned char T2CON @ 0x012;
"518
[; ;pic16f628a.h: 518: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 521: typedef union {
[; ;pic16f628a.h: 522: struct {
[; ;pic16f628a.h: 523: unsigned T2CKPS :2;
[; ;pic16f628a.h: 524: unsigned TMR2ON :1;
[; ;pic16f628a.h: 525: unsigned TOUTPS :4;
[; ;pic16f628a.h: 526: };
[; ;pic16f628a.h: 527: struct {
[; ;pic16f628a.h: 528: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 529: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 530: unsigned :1;
[; ;pic16f628a.h: 531: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 532: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 533: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 534: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 535: };
[; ;pic16f628a.h: 536: } T2CONbits_t;
[; ;pic16f628a.h: 537: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 586: extern volatile unsigned short CCPR1 @ 0x015;
"588
[; ;pic16f628a.h: 588: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 592: extern volatile unsigned char CCPR1L @ 0x015;
"594
[; ;pic16f628a.h: 594: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 598: extern volatile unsigned char CCPR1H @ 0x016;
"600
[; ;pic16f628a.h: 600: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 604: extern volatile unsigned char CCP1CON @ 0x017;
"606
[; ;pic16f628a.h: 606: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 609: typedef union {
[; ;pic16f628a.h: 610: struct {
[; ;pic16f628a.h: 611: unsigned CCP1M :4;
[; ;pic16f628a.h: 612: unsigned CCP1Y :1;
[; ;pic16f628a.h: 613: unsigned CCP1X :1;
[; ;pic16f628a.h: 614: };
[; ;pic16f628a.h: 615: struct {
[; ;pic16f628a.h: 616: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 617: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 618: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 619: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 620: };
[; ;pic16f628a.h: 621: } CCP1CONbits_t;
[; ;pic16f628a.h: 622: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 661: extern volatile unsigned char RCSTA @ 0x018;
"663
[; ;pic16f628a.h: 663: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 666: typedef union {
[; ;pic16f628a.h: 667: struct {
[; ;pic16f628a.h: 668: unsigned RX9D :1;
[; ;pic16f628a.h: 669: unsigned OERR :1;
[; ;pic16f628a.h: 670: unsigned FERR :1;
[; ;pic16f628a.h: 671: unsigned ADEN :1;
[; ;pic16f628a.h: 672: unsigned CREN :1;
[; ;pic16f628a.h: 673: unsigned SREN :1;
[; ;pic16f628a.h: 674: unsigned RX9 :1;
[; ;pic16f628a.h: 675: unsigned SPEN :1;
[; ;pic16f628a.h: 676: };
[; ;pic16f628a.h: 677: struct {
[; ;pic16f628a.h: 678: unsigned :3;
[; ;pic16f628a.h: 679: unsigned ADDEN :1;
[; ;pic16f628a.h: 680: };
[; ;pic16f628a.h: 681: } RCSTAbits_t;
[; ;pic16f628a.h: 682: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 731: extern volatile unsigned char TXREG @ 0x019;
"733
[; ;pic16f628a.h: 733: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 737: extern volatile unsigned char RCREG @ 0x01A;
"739
[; ;pic16f628a.h: 739: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 743: extern volatile unsigned char CMCON @ 0x01F;
"745
[; ;pic16f628a.h: 745: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 748: typedef union {
[; ;pic16f628a.h: 749: struct {
[; ;pic16f628a.h: 750: unsigned CM :3;
[; ;pic16f628a.h: 751: unsigned CIS :1;
[; ;pic16f628a.h: 752: unsigned C1INV :1;
[; ;pic16f628a.h: 753: unsigned C2INV :1;
[; ;pic16f628a.h: 754: unsigned C1OUT :1;
[; ;pic16f628a.h: 755: unsigned C2OUT :1;
[; ;pic16f628a.h: 756: };
[; ;pic16f628a.h: 757: struct {
[; ;pic16f628a.h: 758: unsigned CM0 :1;
[; ;pic16f628a.h: 759: unsigned CM1 :1;
[; ;pic16f628a.h: 760: unsigned CM2 :1;
[; ;pic16f628a.h: 761: };
[; ;pic16f628a.h: 762: } CMCONbits_t;
[; ;pic16f628a.h: 763: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 812: extern volatile unsigned char OPTION_REG @ 0x081;
"814
[; ;pic16f628a.h: 814: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 817: typedef union {
[; ;pic16f628a.h: 818: struct {
[; ;pic16f628a.h: 819: unsigned PS :3;
[; ;pic16f628a.h: 820: unsigned PSA :1;
[; ;pic16f628a.h: 821: unsigned T0SE :1;
[; ;pic16f628a.h: 822: unsigned T0CS :1;
[; ;pic16f628a.h: 823: unsigned INTEDG :1;
[; ;pic16f628a.h: 824: unsigned nRBPU :1;
[; ;pic16f628a.h: 825: };
[; ;pic16f628a.h: 826: struct {
[; ;pic16f628a.h: 827: unsigned PS0 :1;
[; ;pic16f628a.h: 828: unsigned PS1 :1;
[; ;pic16f628a.h: 829: unsigned PS2 :1;
[; ;pic16f628a.h: 830: };
[; ;pic16f628a.h: 831: } OPTION_REGbits_t;
[; ;pic16f628a.h: 832: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 881: extern volatile unsigned char TRISA @ 0x085;
"883
[; ;pic16f628a.h: 883: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 886: typedef union {
[; ;pic16f628a.h: 887: struct {
[; ;pic16f628a.h: 888: unsigned TRISA0 :1;
[; ;pic16f628a.h: 889: unsigned TRISA1 :1;
[; ;pic16f628a.h: 890: unsigned TRISA2 :1;
[; ;pic16f628a.h: 891: unsigned TRISA3 :1;
[; ;pic16f628a.h: 892: unsigned TRISA4 :1;
[; ;pic16f628a.h: 893: unsigned TRISA5 :1;
[; ;pic16f628a.h: 894: unsigned TRISA6 :1;
[; ;pic16f628a.h: 895: unsigned TRISA7 :1;
[; ;pic16f628a.h: 896: };
[; ;pic16f628a.h: 897: } TRISAbits_t;
[; ;pic16f628a.h: 898: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 942: extern volatile unsigned char TRISB @ 0x086;
"944
[; ;pic16f628a.h: 944: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 947: typedef union {
[; ;pic16f628a.h: 948: struct {
[; ;pic16f628a.h: 949: unsigned TRISB0 :1;
[; ;pic16f628a.h: 950: unsigned TRISB1 :1;
[; ;pic16f628a.h: 951: unsigned TRISB2 :1;
[; ;pic16f628a.h: 952: unsigned TRISB3 :1;
[; ;pic16f628a.h: 953: unsigned TRISB4 :1;
[; ;pic16f628a.h: 954: unsigned TRISB5 :1;
[; ;pic16f628a.h: 955: unsigned TRISB6 :1;
[; ;pic16f628a.h: 956: unsigned TRISB7 :1;
[; ;pic16f628a.h: 957: };
[; ;pic16f628a.h: 958: } TRISBbits_t;
[; ;pic16f628a.h: 959: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1003: extern volatile unsigned char PIE1 @ 0x08C;
"1005
[; ;pic16f628a.h: 1005: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1008: typedef union {
[; ;pic16f628a.h: 1009: struct {
[; ;pic16f628a.h: 1010: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1011: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1012: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1013: unsigned :1;
[; ;pic16f628a.h: 1014: unsigned TXIE :1;
[; ;pic16f628a.h: 1015: unsigned RCIE :1;
[; ;pic16f628a.h: 1016: unsigned CMIE :1;
[; ;pic16f628a.h: 1017: unsigned EEIE :1;
[; ;pic16f628a.h: 1018: };
[; ;pic16f628a.h: 1019: } PIE1bits_t;
[; ;pic16f628a.h: 1020: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1059: extern volatile unsigned char PCON @ 0x08E;
"1061
[; ;pic16f628a.h: 1061: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1064: typedef union {
[; ;pic16f628a.h: 1065: struct {
[; ;pic16f628a.h: 1066: unsigned nBOR :1;
[; ;pic16f628a.h: 1067: unsigned nPOR :1;
[; ;pic16f628a.h: 1068: unsigned :1;
[; ;pic16f628a.h: 1069: unsigned OSCF :1;
[; ;pic16f628a.h: 1070: };
[; ;pic16f628a.h: 1071: struct {
[; ;pic16f628a.h: 1072: unsigned nBO :1;
[; ;pic16f628a.h: 1073: };
[; ;pic16f628a.h: 1074: struct {
[; ;pic16f628a.h: 1075: unsigned nBOD :1;
[; ;pic16f628a.h: 1076: };
[; ;pic16f628a.h: 1077: } PCONbits_t;
[; ;pic16f628a.h: 1078: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1107: extern volatile unsigned char PR2 @ 0x092;
"1109
[; ;pic16f628a.h: 1109: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1113: extern volatile unsigned char TXSTA @ 0x098;
"1115
[; ;pic16f628a.h: 1115: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1118: typedef union {
[; ;pic16f628a.h: 1119: struct {
[; ;pic16f628a.h: 1120: unsigned TX9D :1;
[; ;pic16f628a.h: 1121: unsigned TRMT :1;
[; ;pic16f628a.h: 1122: unsigned BRGH :1;
[; ;pic16f628a.h: 1123: unsigned :1;
[; ;pic16f628a.h: 1124: unsigned SYNC :1;
[; ;pic16f628a.h: 1125: unsigned TXEN :1;
[; ;pic16f628a.h: 1126: unsigned TX9 :1;
[; ;pic16f628a.h: 1127: unsigned CSRC :1;
[; ;pic16f628a.h: 1128: };
[; ;pic16f628a.h: 1129: } TXSTAbits_t;
[; ;pic16f628a.h: 1130: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1169: extern volatile unsigned char SPBRG @ 0x099;
"1171
[; ;pic16f628a.h: 1171: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1175: extern volatile unsigned char EEDATA @ 0x09A;
"1177
[; ;pic16f628a.h: 1177: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1181: extern volatile unsigned char EEADR @ 0x09B;
"1183
[; ;pic16f628a.h: 1183: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1187: extern volatile unsigned char EECON1 @ 0x09C;
"1189
[; ;pic16f628a.h: 1189: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1192: typedef union {
[; ;pic16f628a.h: 1193: struct {
[; ;pic16f628a.h: 1194: unsigned RD :1;
[; ;pic16f628a.h: 1195: unsigned WR :1;
[; ;pic16f628a.h: 1196: unsigned WREN :1;
[; ;pic16f628a.h: 1197: unsigned WRERR :1;
[; ;pic16f628a.h: 1198: };
[; ;pic16f628a.h: 1199: } EECON1bits_t;
[; ;pic16f628a.h: 1200: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1224: extern volatile unsigned char EECON2 @ 0x09D;
"1226
[; ;pic16f628a.h: 1226: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1230: extern volatile unsigned char VRCON @ 0x09F;
"1232
[; ;pic16f628a.h: 1232: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1235: typedef union {
[; ;pic16f628a.h: 1236: struct {
[; ;pic16f628a.h: 1237: unsigned VR :4;
[; ;pic16f628a.h: 1238: unsigned :1;
[; ;pic16f628a.h: 1239: unsigned VRR :1;
[; ;pic16f628a.h: 1240: unsigned VROE :1;
[; ;pic16f628a.h: 1241: unsigned VREN :1;
[; ;pic16f628a.h: 1242: };
[; ;pic16f628a.h: 1243: struct {
[; ;pic16f628a.h: 1244: unsigned VR0 :1;
[; ;pic16f628a.h: 1245: unsigned VR1 :1;
[; ;pic16f628a.h: 1246: unsigned VR2 :1;
[; ;pic16f628a.h: 1247: unsigned VR3 :1;
[; ;pic16f628a.h: 1248: };
[; ;pic16f628a.h: 1249: } VRCONbits_t;
[; ;pic16f628a.h: 1250: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1300: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1302: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1304: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1306: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1308: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1310: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1312: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1314: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1316: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1318: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1320: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1322: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1324: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1326: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1328: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1330: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1332: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1334: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1336: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1338: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1340: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1342: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1344: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1346: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1348: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1350: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1352: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1354: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1356: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1358: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1360: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1362: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1364: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1366: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1368: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1370: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1372: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1374: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1376: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1378: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1380: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1382: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1384: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1386: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1388: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1390: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1392: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1394: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1396: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1398: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1400: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1402: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1404: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1406: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1408: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1410: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1412: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1414: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1416: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1418: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1420: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1422: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1424: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1426: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1428: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1430: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1432: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1434: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1436: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1438: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1440: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1442: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1444: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1446: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1448: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1450: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1452: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1454: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1456: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1458: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1460: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1462: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1464: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1466: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1468: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1470: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1472: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1474: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1476: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1478: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1480: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1482: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1484: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1486: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1488: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1490: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1492: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1494: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1496: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1498: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1500: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1502: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1504: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1506: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1508: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1510: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1512: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1514: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1516: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1518: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1520: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1522: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1524: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1526: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1528: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1530: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1532: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1534: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1536: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1538: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1540: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1542: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1544: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1546: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1548: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1550: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1552: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1554: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1556: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1558: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1560: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 141: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
"14 prog.c
[p x FOSC=INTOSCIO ]
"15
[p x WDTE=OFF ]
"16
[p x PWRTE=ON ]
"17
[p x MCLRE=ON ]
"18
[p x BOREN=OFF ]
"19
[p x LVP=OFF ]
"20
[p x CPD=OFF ]
"21
[p x CP=OFF ]
"23
[v _digits `Vuc ~T0 @X0 -> 3 `i e ]
[; ;prog.c: 23: volatile unsigned char digits [3];
"24
[v _digits_0 `Vuc ~T0 @X0 -> 3 `i e ]
[; ;prog.c: 24: volatile unsigned char digits_0 [3];
"25
[v _KeyCode `Vuc ~T0 @X0 1 e ]
[; ;prog.c: 25: volatile unsigned char KeyCode;
"26
[v _TMR0_VALUE `Cuc ~T0 @X0 1 e ]
[i _TMR0_VALUE
-> -> 235 `i `uc
]
[; ;prog.c: 26: const unsigned char TMR0_VALUE = 235;
"27
[v _digitnum `uc ~T0 @X0 1 e ]
[; ;prog.c: 27: unsigned char digitnum;
"28
[v _digitemp `uc ~T0 @X0 1 e ]
[; ;prog.c: 28: unsigned char digitemp;
"29
[v _powerOnInterval `i ~T0 @X0 1 e ]
[; ;prog.c: 29: int powerOnInterval;
"30
[v _count2 `uc ~T0 @X0 1 e ]
[i _count2
-> -> 0 `i `uc
]
[; ;prog.c: 30: unsigned char count2 = 0;
"31
[v _PortAData `Cuc ~T0 @X0 -> 3 `i e ]
[i _PortAData
:U ..
"32
-> -> 128 `i `uc
"33
-> -> 64 `i `uc
"34
-> -> 1 `i `uc
..
]
[; ;prog.c: 31: const unsigned char PortAData[3] = {
[; ;prog.c: 32: 0b10000000,
[; ;prog.c: 33: 0b01000000,
[; ;prog.c: 34: 0b00000001,
[; ;prog.c: 35: };
"36
[v _endInterrupt `b ~T0 @X0 1 e ]
[; ;prog.c: 36: bit endInterrupt;
"37
[v _powerOff `b ~T0 @X0 1 e ]
[i _powerOff
-> 0 `i
]
[; ;prog.c: 37: bit powerOff = 0;
"38
[v _Broadcasting `b ~T0 @X0 1 e ]
[; ;prog.c: 38: bit Broadcasting;
"40
[v _DS_Adress `uc ~T0 @X0 -> 0 `x e ]
[i _DS_Adress
:U ..
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
]
[; ;prog.c: 40: unsigned char DS_Adress [] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
"42
[v _temperature `uc ~T0 @X0 1 e ]
[i _temperature
-> -> 0 `i `uc
]
[; ;prog.c: 42: char temperature = 0;
"43
[v _temp_drob `uc ~T0 @X0 1 e ]
[i _temp_drob
-> -> 0 `i `uc
]
[; ;prog.c: 43: unsigned char temp_drob = 0;
"44
[v _sign `uc ~T0 @X0 1 e ]
[; ;prog.c: 44: unsigned char sign;
"59
[v _Reset_powerOnInterval `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 59: void Reset_powerOnInterval(){
[e :U _Reset_powerOnInterval ]
[f ]
[; ;prog.c: 60: powerOnInterval = 700;
"60
[e = _powerOnInterval -> 700 `i ]
[; ;prog.c: 61: }
"61
[e :UE 57 ]
}
"62
[v _getDigit `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 62: unsigned char getDigit(char a) {
[e :U _getDigit ]
[v _a `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 63: return (digits_0[a - 1] & 0b00111111);
"63
[e ) -> & -> *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux `i -> 63 `i `uc ]
[e $UE 58  ]
[; ;prog.c: 64: }
"64
[e :UE 58 ]
}
"66
[v _setDigit `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 66: void setDigit(char a, unsigned char data) {
[e :U _setDigit ]
[v _a `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 67: digits_0[a - 1] = (digits_0[a - 1] & 0b11000000) | (data & 0b00111111);
"67
[e = *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> | & -> *U + &U _digits_0 * -> -> - -> _a `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux `i -> 192 `i & -> _data `i -> 63 `i `uc ]
[; ;prog.c: 68: }
"68
[e :UE 59 ]
}
"70
[v _setPoint `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 70: void setPoint(char dignum, char value) {
[e :U _setPoint ]
[v _dignum `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 71: value == 1 ? digits_0[dignum - 1] |= 0b01000000 : digits_0[dignum - 1] &= 0b10111111;
"71
[e ? == -> _value `i -> 1 `i : -> =| *U + &U _digits_0 * -> -> - -> _dignum `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> -> 64 `i `uc `i -> =& *U + &U _digits_0 * -> -> - -> _dignum `i -> 1 `i `ui `ux -> -> # *U &U _digits_0 `ui `ux -> -> 191 `i `uc `i ]
[; ;prog.c: 72: }
"72
[e :UE 60 ]
}
"74
[v _refreshInd `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 74: void refreshInd() {
[e :U _refreshInd ]
[f ]
[; ;prog.c: 75: for (char a = 0; a < 3; a++) {
"75
{
[v _a `uc ~T0 @X0 1 a ]
[e = _a -> -> 0 `i `uc ]
[e $ < -> _a `i -> 3 `i 62  ]
[e $U 63  ]
[e :U 62 ]
{
[; ;prog.c: 76: digits[a] = digits_0[a];
"76
[e = *U + &U _digits * -> _a `ux -> -> # *U &U _digits `ui `ux *U + &U _digits_0 * -> _a `ux -> -> # *U &U _digits_0 `ui `ux ]
"77
}
"75
[e ++ _a -> -> 1 `i `uc ]
[e $ < -> _a `i -> 3 `i 62  ]
[e :U 63 ]
"77
}
[; ;prog.c: 77: }
[; ;prog.c: 78: }
"78
[e :UE 61 ]
}
"80
[v _clrInd `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 80: void clrInd() {
[e :U _clrInd ]
[f ]
[; ;prog.c: 81: for (char a = 0; a < 3; a++) {
"81
{
[v _a `uc ~T0 @X0 1 a ]
[e = _a -> -> 0 `i `uc ]
[e $ < -> _a `i -> 3 `i 66  ]
[e $U 67  ]
[e :U 66 ]
{
[; ;prog.c: 82: digits_0[a] = 34;
"82
[e = *U + &U _digits_0 * -> _a `ux -> -> # *U &U _digits_0 `ui `ux -> -> 34 `i `uc ]
"83
}
"81
[e ++ _a -> -> 1 `i `uc ]
[e $ < -> _a `i -> 3 `i 66  ]
[e :U 67 ]
"83
}
[; ;prog.c: 83: }
[; ;prog.c: 84: }
"84
[e :UE 65 ]
}
"86
[v _convDig `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 86: unsigned char convDig(unsigned char dig) {
[e :U _convDig ]
[v _dig `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 87: switch (dig) {
"87
[e $U 71  ]
{
[; ;prog.c: 88: case 0: return 0b11011011;
"88
[e :U 72 ]
[e ) -> -> 219 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 89: case 1: return 0b00011000;
"89
[e :U 73 ]
[e ) -> -> 24 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 90: case 2: return 0b10110011;
"90
[e :U 74 ]
[e ) -> -> 179 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 91: case 3: return 0b10111010;
"91
[e :U 75 ]
[e ) -> -> 186 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 92: case 4: return 0b01111000;
"92
[e :U 76 ]
[e ) -> -> 120 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 93: case 5: return 0b11101010;
"93
[e :U 77 ]
[e ) -> -> 234 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 94: case 6: return 0b11101011;
"94
[e :U 78 ]
[e ) -> -> 235 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 95: case 7: return 0b10011000;
"95
[e :U 79 ]
[e ) -> -> 152 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 96: case 8: return 0b11111011;
"96
[e :U 80 ]
[e ) -> -> 251 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 97: case 9: return 0b11111010;
"97
[e :U 81 ]
[e ) -> -> 250 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 98: case 10: return 0b11111001;
"98
[e :U 82 ]
[e ) -> -> 249 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 99: case 11: return 0b01101011;
"99
[e :U 83 ]
[e ) -> -> 107 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 100: case 12: return 0b11000011;
"100
[e :U 84 ]
[e ) -> -> 195 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 101: case 13: return 0b00111011;
"101
[e :U 85 ]
[e ) -> -> 59 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 102: case 14: return 0b11100011;
"102
[e :U 86 ]
[e ) -> -> 227 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 103: case 15: return 0b11100001;
"103
[e :U 87 ]
[e ) -> -> 225 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 104: case 16: return 0b11111000;
"104
[e :U 88 ]
[e ) -> -> 248 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 105: case 17: return 0b01101001;
"105
[e :U 89 ]
[e ) -> -> 105 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 106: case 18: return 0b01000001;
"106
[e :U 90 ]
[e ) -> -> 65 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 107: case 19: return 0b00011010;
"107
[e :U 91 ]
[e ) -> -> 26 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 108: case 20: return 0b01000011;
"108
[e :U 92 ]
[e ) -> -> 67 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 109: case 21: return 0b00101001;
"109
[e :U 93 ]
[e ) -> -> 41 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 110: case 22: return 0b00101011;
"110
[e :U 94 ]
[e ) -> -> 43 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 111: case 23: return 0b11110001;
"111
[e :U 95 ]
[e ) -> -> 241 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 112: case 24: return 0b00100001;
"112
[e :U 96 ]
[e ) -> -> 33 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 113: case 25: return 0b01101010;
"113
[e :U 97 ]
[e ) -> -> 106 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 114: case 26: return 0b01100011;
"114
[e :U 98 ]
[e ) -> -> 99 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 115: case 27: return 0b01011011;
"115
[e :U 99 ]
[e ) -> -> 91 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 116: case 28: return 0b00001011;
"116
[e :U 100 ]
[e ) -> -> 11 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 117: case 29: return 0b01110001;
"117
[e :U 101 ]
[e ) -> -> 113 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 118: case 30: return 0b10110001;
"118
[e :U 102 ]
[e ) -> -> 177 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 119: case 31: return 0b11110000;
"119
[e :U 103 ]
[e ) -> -> 240 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 120: case 32: return 0b00100000;
"120
[e :U 104 ]
[e ) -> -> 32 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 121: case 33: return 0b00000010;
"121
[e :U 105 ]
[e ) -> -> 2 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 122: case 34: return 0b00000000;
"122
[e :U 106 ]
[e ) -> -> 0 `i `uc ]
[e $UE 69  ]
[; ;prog.c: 123: default: return 0b00000000;
"123
[e :U 107 ]
[e ) -> -> 0 `i `uc ]
[e $UE 69  ]
"124
}
[; ;prog.c: 124: }
[e $U 70  ]
"87
[e :U 71 ]
[e [\ _dig , $ -> -> 0 `i `uc 72
 , $ -> -> 1 `i `uc 73
 , $ -> -> 2 `i `uc 74
 , $ -> -> 3 `i `uc 75
 , $ -> -> 4 `i `uc 76
 , $ -> -> 5 `i `uc 77
 , $ -> -> 6 `i `uc 78
 , $ -> -> 7 `i `uc 79
 , $ -> -> 8 `i `uc 80
 , $ -> -> 9 `i `uc 81
 , $ -> -> 10 `i `uc 82
 , $ -> -> 11 `i `uc 83
 , $ -> -> 12 `i `uc 84
 , $ -> -> 13 `i `uc 85
 , $ -> -> 14 `i `uc 86
 , $ -> -> 15 `i `uc 87
 , $ -> -> 16 `i `uc 88
 , $ -> -> 17 `i `uc 89
 , $ -> -> 18 `i `uc 90
 , $ -> -> 19 `i `uc 91
 , $ -> -> 20 `i `uc 92
 , $ -> -> 21 `i `uc 93
 , $ -> -> 22 `i `uc 94
 , $ -> -> 23 `i `uc 95
 , $ -> -> 24 `i `uc 96
 , $ -> -> 25 `i `uc 97
 , $ -> -> 26 `i `uc 98
 , $ -> -> 27 `i `uc 99
 , $ -> -> 28 `i `uc 100
 , $ -> -> 29 `i `uc 101
 , $ -> -> 30 `i `uc 102
 , $ -> -> 31 `i `uc 103
 , $ -> -> 32 `i `uc 104
 , $ -> -> 33 `i `uc 105
 , $ -> -> 34 `i `uc 106
 107 ]
"124
[e :U 70 ]
[; ;prog.c: 125: }
"125
[e :UE 69 ]
}
"128
[v _EEWR `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 128: void EEWR(unsigned char adress, unsigned char data) {
[e :U _EEWR ]
[v _adress `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"129
[v _INTCON_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 129: volatile unsigned char INTCON_BUP = INTCON;
[e = _INTCON_BUP _INTCON ]
[; ;prog.c: 130: INTCONbits.GIE = 0;
"130
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;prog.c: 131: EEADR = adress;
"131
[e = _EEADR _adress ]
[; ;prog.c: 132: EEDATA = data;
"132
[e = _EEDATA _data ]
[; ;prog.c: 133: EECON1bits.WREN = 1;
"133
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
[; ;prog.c: 134: EECON2 = 0x55;
"134
[e = _EECON2 -> -> 85 `i `uc ]
[; ;prog.c: 135: EECON2 = 0xAA;
"135
[e = _EECON2 -> -> 170 `i `uc ]
[; ;prog.c: 136: EECON1bits.WR = 1;
"136
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
[; ;prog.c: 137: EECON1bits.WREN = 0;
"137
[e = . . _EECON1bits 0 2 -> -> 0 `i `uc ]
[; ;prog.c: 138: while (EECON1bits.WR == 1) {
"138
[e $U 109  ]
[e :U 110 ]
{
"139
}
[e :U 109 ]
"138
[e $ == -> . . _EECON1bits 0 1 `i -> 1 `i 110  ]
[e :U 111 ]
[; ;prog.c: 139: }
[; ;prog.c: 140: INTCON = INTCON_BUP;
"140
[e = _INTCON _INTCON_BUP ]
[; ;prog.c: 141: }
"141
[e :UE 108 ]
}
"143
[v _EERD `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 143: unsigned char EERD(unsigned char adress) {
[e :U _EERD ]
[v _adress `uc ~T0 @X0 1 r1 ]
[f ]
"144
[v _INTCON_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 144: volatile unsigned char INTCON_BUP = INTCON;
[e = _INTCON_BUP _INTCON ]
"145
[v _EEDATA_BUP `Vuc ~T0 @X0 1 a ]
[; ;prog.c: 145: volatile unsigned char EEDATA_BUP;
[; ;prog.c: 146: INTCONbits.GIE = 0;
"146
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
[; ;prog.c: 147: EEADR = adress;
"147
[e = _EEADR _adress ]
[; ;prog.c: 148: EECON1bits.RD = 1;
"148
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
[; ;prog.c: 149: EEDATA_BUP = EEDATA;
"149
[e = _EEDATA_BUP _EEDATA ]
[; ;prog.c: 150: INTCON = INTCON_BUP;
"150
[e = _INTCON _INTCON_BUP ]
[; ;prog.c: 151: return EEDATA_BUP;
"151
[e ) _EEDATA_BUP ]
[e $UE 112  ]
[; ;prog.c: 152: }
"152
[e :UE 112 ]
}
"154
[v _FillArrayFromEEPROM `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
{
[; ;prog.c: 154: void FillArrayFromEEPROM(unsigned char *container, unsigned char adress_start, unsigned char quantity) {
[e :U _FillArrayFromEEPROM ]
[v _container `*uc ~T0 @X0 1 r1 ]
[v _adress_start `uc ~T0 @X0 1 r2 ]
[v _quantity `uc ~T0 @X0 1 r3 ]
[f ]
[; ;prog.c: 155: for (unsigned char i = 0; i < quantity; i++) {
"155
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 117  ]
[e :U 114 ]
{
[; ;prog.c: 156: container[i] = EERD(adress_start + i);
"156
[e = *U + _container * -> _i `ux -> -> # *U _container `ui `ux ( _EERD (1 -> + -> _adress_start `i -> _i `i `uc ]
"157
}
"155
[e ++ _i -> -> 1 `i `uc ]
[e :U 117 ]
[e $ < -> _i `i -> _quantity `i 114  ]
[e :U 115 ]
"157
}
[; ;prog.c: 157: }
[; ;prog.c: 158: }
"158
[e :UE 113 ]
}
"160
[v _WriteArrayToEEPROM `(v ~T0 @X0 1 ef3`*uc`uc`uc ]
{
[; ;prog.c: 160: void WriteArrayToEEPROM(unsigned char * container, unsigned char adress_start, unsigned char quantity) {
[e :U _WriteArrayToEEPROM ]
[v _container `*uc ~T0 @X0 1 r1 ]
[v _adress_start `uc ~T0 @X0 1 r2 ]
[v _quantity `uc ~T0 @X0 1 r3 ]
[f ]
[; ;prog.c: 161: for (unsigned char i = 0; i < quantity; i++) {
"161
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 122  ]
[e :U 119 ]
{
[; ;prog.c: 162: EEWR(adress_start + i, container[i]);
"162
[e ( _EEWR (2 , -> + -> _adress_start `i -> _i `i `uc *U + _container * -> _i `ux -> -> # *U _container `ui `ux ]
"163
}
"161
[e ++ _i -> -> 1 `i `uc ]
[e :U 122 ]
[e $ < -> _i `i -> _quantity `i 119  ]
[e :U 120 ]
"163
}
[; ;prog.c: 163: }
[; ;prog.c: 164: }
"164
[e :UE 118 ]
}
"166
[v _LoadAdress `(v ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 166: void LoadAdress(unsigned char cell){
[e :U _LoadAdress ]
[v _cell `uc ~T0 @X0 1 r1 ]
[f ]
[; ;prog.c: 167: FillArrayFromEEPROM(DS_Adress, cell * sizeof(DS_Adress), sizeof(DS_Adress));
"167
[e ( _FillArrayFromEEPROM (3 , , &U _DS_Adress -> * -> _cell `ui -> # _DS_Adress `ui `uc -> -> # _DS_Adress `ui `uc ]
[; ;prog.c: 168: }
"168
[e :UE 123 ]
}
"171
[v _INIT `(b ~T0 @X0 1 sf ]
{
[; ;prog.c: 171: static bit INIT() {
[e :U _INIT ]
[f ]
"172
[v F838 `b ~T0 @X0 1 s b ]
[; ;prog.c: 172: static bit b;
[; ;prog.c: 173: b = 0;
"173
[e = F838 -> -> 0 `i `b ]
[; ;prog.c: 174: TRISA3 = 1;
"174
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 175: _delay((unsigned long)((20)*(4000000/4000000.0)));
"175
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 176: TRISA3 = 0;
"176
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 177: _delay((unsigned long)((500)*(4000000/4000000.0)));
"177
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 178: TRISA3 = 1;
"178
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 179: _delay((unsigned long)((65)*(4000000/4000000.0)));
"179
[e ( __delay (1 -> * -> -> 65 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 180: b = RA3;
"180
[e = F838 _RA3 ]
[; ;prog.c: 181: _delay((unsigned long)((450)*(4000000/4000000.0)));
"181
[e ( __delay (1 -> * -> -> 450 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 183: return !b;
"183
[e ) -> -> ! F838 `i `b ]
[e $UE 124  ]
[; ;prog.c: 184: }
"184
[e :UE 124 ]
}
"186
[v _TX `(v ~T0 @X0 1 ef1`uc ]
{
[; ;prog.c: 186: void TX(unsigned char cmd) {
[e :U _TX ]
[v _cmd `uc ~T0 @X0 1 r1 ]
[f ]
"187
[v _temp `uc ~T0 @X0 1 a ]
[; ;prog.c: 187: unsigned char temp = 0;
[e = _temp -> -> 0 `i `uc ]
"188
[v _i `uc ~T0 @X0 1 a ]
[; ;prog.c: 188: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;prog.c: 189: temp = cmd;
"189
[e = _temp _cmd ]
[; ;prog.c: 190: for (i = 0; i < 8; i++) {
"190
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 126  ]
[e $U 127  ]
[e :U 126 ]
{
[; ;prog.c: 191: if (temp & 0x01) {
"191
[e $ ! != & -> _temp `i -> 1 `i -> 0 `i 129  ]
{
[; ;prog.c: 192: TRISA3 = 0;
"192
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 193: _delay((unsigned long)((5)*(4000000/4000000.0)));
"193
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 194: TRISA3 = 1;
"194
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 195: _delay((unsigned long)((70)*(4000000/4000000.0)));
"195
[e ( __delay (1 -> * -> -> 70 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"196
}
[; ;prog.c: 196: } else {
[e $U 130  ]
[e :U 129 ]
{
[; ;prog.c: 197: TRISA3 = 0;
"197
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 198: _delay((unsigned long)((70)*(4000000/4000000.0)));
"198
[e ( __delay (1 -> * -> -> 70 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 199: TRISA3 = 1;
"199
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 200: _delay((unsigned long)((5)*(4000000/4000000.0)));
"200
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"201
}
[e :U 130 ]
[; ;prog.c: 201: }
[; ;prog.c: 202: temp >>= 1;
"202
[e =>> _temp -> 1 `i ]
"203
}
"190
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 126  ]
[e :U 127 ]
"203
}
[; ;prog.c: 203: }
[; ;prog.c: 204: }
"204
[e :UE 125 ]
}
"206
[v _RX `(uc ~T0 @X0 1 ef ]
{
[; ;prog.c: 206: unsigned char RX() {
[e :U _RX ]
[f ]
"207
[v _d `uc ~T0 @X0 1 a ]
[; ;prog.c: 207: unsigned char d = 0;
[e = _d -> -> 0 `i `uc ]
[; ;prog.c: 208: for (unsigned char i = 0; i < 8; i++) {
"208
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 132  ]
[e $U 133  ]
[e :U 132 ]
{
[; ;prog.c: 209: TRISA3 = 0;
"209
[e = _TRISA3 -> -> 0 `i `b ]
[; ;prog.c: 210: _delay((unsigned long)((6)*(4000000/4000000.0)));
"210
[e ( __delay (1 -> * -> -> 6 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 211: TRISA3 = 1;
"211
[e = _TRISA3 -> -> 1 `i `b ]
[; ;prog.c: 212: _delay((unsigned long)((4)*(4000000/4000000.0)));
"212
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;prog.c: 213: d >>= 1;
"213
[e =>> _d -> 1 `i ]
[; ;prog.c: 214: if (RA3 == 1) d |= 0x80;
"214
[e $ ! == -> _RA3 `i -> 1 `i 135  ]
[e =| _d -> -> 128 `i `uc ]
[e :U 135 ]
[; ;prog.c: 215: _delay((unsigned long)((60)*(4000000/4000000.0)));
"215
[e ( __delay (1 -> * -> -> 60 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"216
}
"208
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 132  ]
[e :U 133 ]
"216
}
[; ;prog.c: 216: }
[; ;prog.c: 217: return d;
"217
[e ) _d ]
[e $UE 131  ]
[; ;prog.c: 218: }
"218
[e :UE 131 ]
}
"220
[v _Send_DS_Adress `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 220: void Send_DS_Adress(){
[e :U _Send_DS_Adress ]
[f ]
[; ;prog.c: 221: if(Broadcasting){
"221
[e $ ! _Broadcasting 137  ]
{
[; ;prog.c: 222: TX(0xCC);
"222
[e ( _TX (1 -> -> 204 `i `uc ]
"223
}
[; ;prog.c: 223: }else{
[e $U 138  ]
[e :U 137 ]
{
[; ;prog.c: 224: TX(0x55);
"224
[e ( _TX (1 -> -> 85 `i `uc ]
[; ;prog.c: 225: for(unsigned char i = 0; i < sizeof(DS_Adress); i++){
"225
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 139  ]
[e $U 140  ]
[e :U 139 ]
{
[; ;prog.c: 226: TX(DS_Adress[i]);
"226
[e ( _TX (1 *U + &U _DS_Adress * -> _i `ux -> -> # *U &U _DS_Adress `ui `ux ]
"227
}
"225
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 139  ]
[e :U 140 ]
"227
}
"228
}
[e :U 138 ]
[; ;prog.c: 227: }
[; ;prog.c: 228: }
[; ;prog.c: 229: }
"229
[e :UE 136 ]
}
"231
[v _get_temp `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 231: void get_temp() {
[e :U _get_temp ]
[f ]
"232
[v F860 `b ~T0 @X0 1 s init ]
"233
[v _temp1 `uc ~T0 @X0 1 a ]
[; ;prog.c: 232: static bit init;
[; ;prog.c: 233: unsigned char temp1 = 0;
[e = _temp1 -> -> 0 `i `uc ]
"234
[v _temp2 `uc ~T0 @X0 1 a ]
[; ;prog.c: 234: unsigned char temp2 = 0;
[e = _temp2 -> -> 0 `i `uc ]
[; ;prog.c: 235: init = INIT();
"235
[e = F860 ( _INIT ..  ]
[; ;prog.c: 237: endInterrupt = 0;
"237
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 238: while (!endInterrupt);
"238
[e $U 143  ]
[e :U 144 ]
[e :U 143 ]
[e $ ! _endInterrupt 144  ]
[e :U 145 ]
[; ;prog.c: 240: if (init) {
"240
[e $ ! F860 146  ]
{
[; ;prog.c: 241: Send_DS_Adress();
"241
[e ( _Send_DS_Adress ..  ]
[; ;prog.c: 242: TX(0x44);
"242
[e ( _TX (1 -> -> 68 `i `uc ]
[; ;prog.c: 243: _delay((unsigned long)((250)*(4000000/4000.0)));
"243
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 244: _delay((unsigned long)((250)*(4000000/4000.0)));
"244
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 245: _delay((unsigned long)((250)*(4000000/4000.0)));
"245
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[; ;prog.c: 246: _delay((unsigned long)((250)*(4000000/4000.0)));
"246
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"247
}
[e :U 146 ]
[; ;prog.c: 247: }
[; ;prog.c: 249: endInterrupt = 0;
"249
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 250: while (!endInterrupt);
"250
[e $U 147  ]
[e :U 148 ]
[e :U 147 ]
[e $ ! _endInterrupt 148  ]
[e :U 149 ]
[; ;prog.c: 252: init = INIT();
"252
[e = F860 ( _INIT ..  ]
[; ;prog.c: 254: endInterrupt = 0;
"254
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 255: while (!endInterrupt);
"255
[e $U 150  ]
[e :U 151 ]
[e :U 150 ]
[e $ ! _endInterrupt 151  ]
[e :U 152 ]
[; ;prog.c: 257: if (init) {
"257
[e $ ! F860 153  ]
{
[; ;prog.c: 258: Send_DS_Adress();
"258
[e ( _Send_DS_Adress ..  ]
[; ;prog.c: 259: TX(0xBE);
"259
[e ( _TX (1 -> -> 190 `i `uc ]
[; ;prog.c: 261: endInterrupt = 0;
"261
[e = _endInterrupt -> -> 0 `i `b ]
[; ;prog.c: 262: while (!endInterrupt);
"262
[e $U 154  ]
[e :U 155 ]
[e :U 154 ]
[e $ ! _endInterrupt 155  ]
[e :U 156 ]
[; ;prog.c: 264: temp1 = RX();
"264
[e = _temp1 ( _RX ..  ]
[; ;prog.c: 265: temp2 = RX();
"265
[e = _temp2 ( _RX ..  ]
"266
}
[e :U 153 ]
[; ;prog.c: 266: }
[; ;prog.c: 267: temp_drob = temp1 & 0b00001111;
"267
[e = _temp_drob -> & -> _temp1 `i -> 15 `i `uc ]
[; ;prog.c: 268: temp_drob = ((temp_drob * 6) + 2) / 10;
"268
[e = _temp_drob -> / + * -> _temp_drob `i -> 6 `i -> 2 `i -> 10 `i `uc ]
[; ;prog.c: 269: temp1 >>= 4;
"269
[e =>> _temp1 -> 4 `i ]
[; ;prog.c: 270: sign = temp2 & 0x80;
"270
[e = _sign -> & -> _temp2 `i -> 128 `i `uc ]
[; ;prog.c: 271: temp2 <<= 4;
"271
[e =<< _temp2 -> 4 `i ]
[; ;prog.c: 272: temp2 &= 0b01110000;
"272
[e =& _temp2 -> -> 112 `i `uc ]
[; ;prog.c: 273: temp2 |= temp1;
"273
[e =| _temp2 _temp1 ]
[; ;prog.c: 275: if (sign) {
"275
[e $ ! != -> _sign `i -> -> -> 0 `i `uc `i 157  ]
{
[; ;prog.c: 276: temperature = 127 - temp2;
"276
[e = _temperature -> - -> 127 `i -> _temp2 `i `uc ]
[; ;prog.c: 277: temp_drob = 10 - temp_drob;
"277
[e = _temp_drob -> - -> 10 `i -> _temp_drob `i `uc ]
[; ;prog.c: 278: if (temp_drob == 10) {
"278
[e $ ! == -> _temp_drob `i -> 10 `i 158  ]
{
[; ;prog.c: 279: temp_drob = 0;
"279
[e = _temp_drob -> -> 0 `i `uc ]
[; ;prog.c: 280: temperature++;
"280
[e ++ _temperature -> -> 1 `i `uc ]
"281
}
[e :U 158 ]
"282
}
[; ;prog.c: 281: }
[; ;prog.c: 282: } else {
[e $U 159  ]
[e :U 157 ]
{
[; ;prog.c: 283: temperature = temp2;
"283
[e = _temperature _temp2 ]
"284
}
[e :U 159 ]
[; ;prog.c: 284: }
[; ;prog.c: 285: }
"285
[e :UE 142 ]
}
"287
[v _FindCell `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[; ;prog.c: 287: unsigned char FindCell(unsigned char adressStart, unsigned char previous) {
[e :U _FindCell ]
[v _adressStart `uc ~T0 @X0 1 r1 ]
[v _previous `uc ~T0 @X0 1 r2 ]
[f ]
[; ;prog.c: 288: if (adressStart == ((sizeof(DS_Adress)) * 24)) {
"288
[e $ ! == -> _adressStart `ui * -> # _DS_Adress `ui -> -> 24 `i `ui 161  ]
{
[; ;prog.c: 289: adressStart = (((sizeof(DS_Adress)) * 24) - (sizeof(DS_Adress)));
"289
[e = _adressStart -> - * -> # _DS_Adress `ui -> -> 24 `i `ui -> # _DS_Adress `ui `uc ]
"290
}
[e :U 161 ]
"291
[v _adress `ui ~T0 @X0 1 a ]
[; ;prog.c: 290: }
[; ;prog.c: 291: unsigned int adress = adressStart;
[e = _adress -> _adressStart `ui ]
"292
[v _adressNew `ui ~T0 @X0 1 a ]
[; ;prog.c: 292: unsigned int adressNew = ((sizeof(DS_Adress)) * 24);
[e = _adressNew * -> # _DS_Adress `ui -> -> 24 `i `ui ]
[; ;prog.c: 293: do {
"293
[e :U 164 ]
{
[; ;prog.c: 295: if (!previous) {
"295
[e $ ! ! != -> _previous `i -> -> -> 0 `i `uc `i 165  ]
{
[; ;prog.c: 296: adress == (((sizeof(DS_Adress)) * 24) - (sizeof(DS_Adress))) ? adress = 0 : adress += (sizeof(DS_Adress));
"296
[e ? == _adress - * -> # _DS_Adress `ui -> -> 24 `i `ui -> # _DS_Adress `ui : = _adress -> -> 0 `i `ui =+ _adress -> # _DS_Adress `ui ]
"297
}
[; ;prog.c: 297: } else {
[e $U 166  ]
[e :U 165 ]
{
[; ;prog.c: 298: adress == 0 ? adress = (((sizeof(DS_Adress)) * 24) - (sizeof(DS_Adress))) : adress -= (sizeof(DS_Adress));
"298
[e ? == _adress -> -> 0 `i `ui : = _adress - * -> # _DS_Adress `ui -> -> 24 `i `ui -> # _DS_Adress `ui =- _adress -> # _DS_Adress `ui ]
"299
}
[e :U 166 ]
"301
[v _CellsData `uc ~T0 @X0 -> # _DS_Adress `ui a ]
[; ;prog.c: 299: }
[; ;prog.c: 301: unsigned char CellsData [(sizeof(DS_Adress))];
[; ;prog.c: 302: FillArrayFromEEPROM(&CellsData, adress * (sizeof(DS_Adress)), (sizeof(DS_Adress)));
"302
[e ( _FillArrayFromEEPROM (3 , , &U _CellsData -> * _adress -> # _DS_Adress `ui `uc -> -> # _DS_Adress `ui `uc ]
"304
[v _CellIsEmpty `uc ~T0 @X0 1 a ]
[; ;prog.c: 304: unsigned char CellIsEmpty = 1;
[e = _CellIsEmpty -> -> 1 `i `uc ]
[; ;prog.c: 305: for (unsigned char i = 0; i < (sizeof(DS_Adress)); i++) {
"305
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 167  ]
[e $U 168  ]
[e :U 167 ]
{
[; ;prog.c: 306: if (CellsData[i] != 0xFF) {
"306
[e $ ! != -> *U + &U _CellsData * -> _i `ux -> -> # *U &U _CellsData `ui `ux `i -> 255 `i 170  ]
{
[; ;prog.c: 307: CellIsEmpty = 0;
"307
[e = _CellIsEmpty -> -> 0 `i `uc ]
"308
}
[e :U 170 ]
"309
}
"305
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 167  ]
[e :U 168 ]
"309
}
[; ;prog.c: 308: }
[; ;prog.c: 309: }
[; ;prog.c: 311: if (CellIsEmpty == 0) {
"311
[e $ ! == -> _CellIsEmpty `i -> 0 `i 171  ]
{
[; ;prog.c: 312: adressNew = adress;
"312
[e = _adressNew _adress ]
[; ;prog.c: 313: break;
"313
[e $U 163  ]
"314
}
[e :U 171 ]
"315
}
[; ;prog.c: 314: }
[; ;prog.c: 315: } while (adress != adressStart);
[e $ != _adress -> _adressStart `ui 164  ]
[e :U 163 ]
[; ;prog.c: 316: return adressNew;
"316
[e ) -> _adressNew `uc ]
[e $UE 160  ]
[; ;prog.c: 317: }
"317
[e :UE 160 ]
}
[v F876 `(v ~T0 @X0 1 tf ]
"321
[v _F `IF876 ~T0 @X0 1 e ]
{
[; ;prog.c: 321: void interrupt F() {
[e :U _F ]
[f ]
[; ;prog.c: 322: if (T0IF) {
"322
[e $ ! _T0IF 173  ]
{
[; ;prog.c: 323: T0IF = 0;
"323
[e = _T0IF -> -> 0 `i `b ]
[; ;prog.c: 324: TMR0 += TMR0_VALUE;
"324
[e =+ _TMR0 _TMR0_VALUE ]
[; ;prog.c: 326: if (count2 > 2)count2 = 0;
"326
[e $ ! > -> _count2 `i -> 2 `i 174  ]
[e = _count2 -> -> 0 `i `uc ]
[e :U 174 ]
[; ;prog.c: 327: digitnum = PortAData[count2];
"327
[e = _digitnum *U + &U _PortAData * -> _count2 `ux -> -> # *U &U _PortAData `ui `ux ]
"328
[v _dig `uc ~T0 @X0 1 a ]
[; ;prog.c: 328: unsigned char dig = digits[count2];
[e = _dig *U + &U _digits * -> _count2 `ux -> -> # *U &U _digits `ui `ux ]
[; ;prog.c: 329: digitemp = convDig(0b00111111 & dig);
"329
[e = _digitemp ( _convDig (1 -> & -> 63 `i -> _dig `i `uc ]
[; ;prog.c: 333: (0b01000000 == (0b01000000 & dig)) ? digitemp |= 0b00000100 : digitemp &= 0b11111011;
"333
[e ? == -> 64 `i & -> 64 `i -> _dig `i : -> =| _digitemp -> -> 4 `i `uc `i -> =& _digitemp -> -> 251 `i `uc `i ]
[; ;prog.c: 334: count2++;
"334
[e ++ _count2 -> -> 1 `i `uc ]
[; ;prog.c: 336: PORTB = digitemp;
"336
[e = _PORTB _digitemp ]
[; ;prog.c: 337: PORTA = (PORTA & 0b00110110) | digitnum;
"337
[e = _PORTA -> | & -> _PORTA `i -> 54 `i -> _digitnum `i `uc ]
[; ;prog.c: 338: endInterrupt = 1;
"338
[e = _endInterrupt -> -> 1 `i `b ]
[; ;prog.c: 339: powerOnInterval--;
"339
[e -- _powerOnInterval -> 1 `i ]
[; ;prog.c: 340: if (powerOnInterval == 0) {
"340
[e $ ! == _powerOnInterval -> 0 `i 175  ]
{
[; ;prog.c: 341: powerOff = 1;
"341
[e = _powerOff -> -> 1 `i `b ]
[; ;prog.c: 342: TRISA4 = 1;
"342
[e = _TRISA4 -> -> 1 `i `b ]
"343
}
[e :U 175 ]
"345
[v F878 `ui ~T0 @X0 1 s KeyTimeCounter ]
[i F878
-> -> 0 `i `ui
]
"346
[v F879 `uc ~T0 @X0 1 s LastKeysState ]
[i F879
-> -> 0 `i `uc
]
"347
[v F880 `uc ~T0 @X0 1 s long_press ]
[i F880
-> -> 0 `i `uc
]
"348
[v F881 `uc ~T0 @X0 1 s ButtonPressTimeIn1 ]
[i F881
-> -> 0 `i `uc
]
"349
[v F882 `uc ~T0 @X0 1 s ButtonPressTimeIn2 ]
[i F882
-> -> 0 `i `uc
]
"350
[v F883 `uc ~T0 @X0 1 s ButtonPressTimeOut ]
[i F883
-> -> 0 `i `uc
]
"351
[v _CurrentKeysState `uc ~T0 @X0 1 a ]
[; ;prog.c: 343: }
[; ;prog.c: 345: static unsigned int KeyTimeCounter = 0;
[; ;prog.c: 346: static unsigned char LastKeysState = 0;
[; ;prog.c: 347: static unsigned char long_press = 0;
[; ;prog.c: 348: static unsigned char ButtonPressTimeIn1 = 0;
[; ;prog.c: 349: static unsigned char ButtonPressTimeIn2 = 0;
[; ;prog.c: 350: static unsigned char ButtonPressTimeOut = 0;
[; ;prog.c: 351: unsigned char CurrentKeysState = 0;
[e = _CurrentKeysState -> -> 0 `i `uc ]
[; ;prog.c: 353: if (ButtonPressTimeOut > 0) {
"353
[e $ ! > -> F883 `i -> 0 `i 176  ]
{
[; ;prog.c: 354: ButtonPressTimeOut--;
"354
[e -- F883 -> -> 1 `i `uc ]
"355
}
[; ;prog.c: 355: } else {
[e $U 177  ]
[e :U 176 ]
{
[; ;prog.c: 357: KeyCode = 0;
"357
[e = _KeyCode -> -> 0 `i `uc ]
[; ;prog.c: 359: if(RA2){
"359
[e $ ! _RA2 178  ]
{
[; ;prog.c: 360: CurrentKeysState = CurrentKeysState | 0b00000001;
"360
[e = _CurrentKeysState -> | -> _CurrentKeysState `i -> 1 `i `uc ]
[; ;prog.c: 361: ButtonPressTimeIn1 = 25;
"361
[e = F881 -> -> 25 `i `uc ]
"362
}
[; ;prog.c: 362: }else{
[e $U 179  ]
[e :U 178 ]
{
[; ;prog.c: 363: if(ButtonPressTimeIn1 == 0){
"363
[e $ ! == -> F881 `i -> 0 `i 180  ]
{
[; ;prog.c: 364: CurrentKeysState = CurrentKeysState & 0b11111110;
"364
[e = _CurrentKeysState -> & -> _CurrentKeysState `i -> 254 `i `uc ]
"365
}
[; ;prog.c: 365: }else{
[e $U 181  ]
[e :U 180 ]
{
[; ;prog.c: 366: ButtonPressTimeIn1--;
"366
[e -- F881 -> -> 1 `i `uc ]
"367
}
[e :U 181 ]
"368
}
[e :U 179 ]
[; ;prog.c: 367: }
[; ;prog.c: 368: }
[; ;prog.c: 370: if(RA1){
"370
[e $ ! _RA1 182  ]
{
[; ;prog.c: 371: CurrentKeysState = CurrentKeysState | 0b00000010;
"371
[e = _CurrentKeysState -> | -> _CurrentKeysState `i -> 2 `i `uc ]
[; ;prog.c: 372: ButtonPressTimeIn2 = 25;
"372
[e = F882 -> -> 25 `i `uc ]
"373
}
[; ;prog.c: 373: }else{
[e $U 183  ]
[e :U 182 ]
{
[; ;prog.c: 374: if(ButtonPressTimeIn2 == 0){
"374
[e $ ! == -> F882 `i -> 0 `i 184  ]
{
[; ;prog.c: 375: CurrentKeysState = CurrentKeysState & 0b11111101;
"375
[e = _CurrentKeysState -> & -> _CurrentKeysState `i -> 253 `i `uc ]
"376
}
[; ;prog.c: 376: }else{
[e $U 185  ]
[e :U 184 ]
{
[; ;prog.c: 377: ButtonPressTimeIn2--;
"377
[e -- F882 -> -> 1 `i `uc ]
"378
}
[e :U 185 ]
"379
}
[e :U 183 ]
[; ;prog.c: 378: }
[; ;prog.c: 379: }
[; ;prog.c: 381: if((ButtonPressTimeIn1 == 0 || ButtonPressTimeIn1 == 25) && (ButtonPressTimeIn2 == 0 || ButtonPressTimeIn2 == 25)){
"381
[e $ ! && || == -> F881 `i -> 0 `i == -> F881 `i -> 25 `i || == -> F882 `i -> 0 `i == -> F882 `i -> 25 `i 186  ]
{
[; ;prog.c: 382: if(CurrentKeysState > 0){
"382
[e $ ! > -> _CurrentKeysState `i -> 0 `i 187  ]
{
[; ;prog.c: 383: if(LastKeysState != CurrentKeysState){
"383
[e $ ! != -> F879 `i -> _CurrentKeysState `i 188  ]
{
[; ;prog.c: 384: KeyTimeCounter = 0;
"384
[e = F878 -> -> 0 `i `ui ]
[; ;prog.c: 385: long_press = 0;
"385
[e = F880 -> -> 0 `i `uc ]
[; ;prog.c: 386: LastKeysState = CurrentKeysState;
"386
[e = F879 _CurrentKeysState ]
"387
}
[; ;prog.c: 387: }else if(KeyTimeCounter < 150){
[e $U 189  ]
[e :U 188 ]
[e $ ! < F878 -> -> 150 `i `ui 190  ]
{
[; ;prog.c: 388: KeyTimeCounter++;
"388
[e ++ F878 -> -> 1 `i `ui ]
"389
}
[; ;prog.c: 389: }else if(KeyTimeCounter == 150 && !long_press){
[e $U 191  ]
[e :U 190 ]
[e $ ! && == F878 -> -> 150 `i `ui ! != -> F880 `i -> -> -> 0 `i `uc `i 192  ]
{
[; ;prog.c: 390: long_press = 1;
"390
[e = F880 -> -> 1 `i `uc ]
"391
}
[e :U 192 ]
"393
[e :U 191 ]
[e :U 189 ]
[; ;prog.c: 391: }
[; ;prog.c: 393: if(long_press == 1){
[e $ ! == -> F880 `i -> 1 `i 193  ]
{
[; ;prog.c: 394: KeyCode = 30 + LastKeysState + 3;
"394
[e = _KeyCode -> + + -> 30 `i -> F879 `i -> 3 `i `uc ]
[; ;prog.c: 395: long_press = 2;
"395
[e = F880 -> -> 2 `i `uc ]
[; ;prog.c: 396: ButtonPressTimeOut = 40;
"396
[e = F883 -> -> 40 `i `uc ]
"397
}
[e :U 193 ]
"399
}
[; ;prog.c: 397: }
[; ;prog.c: 399: }else if(LastKeysState > 0 && long_press == 0){
[e $U 194  ]
[e :U 187 ]
[e $ ! && > -> F879 `i -> 0 `i == -> F880 `i -> 0 `i 195  ]
{
[; ;prog.c: 400: KeyCode = 30 + LastKeysState;
"400
[e = _KeyCode -> + -> 30 `i -> F879 `i `uc ]
[; ;prog.c: 401: LastKeysState = 0;
"401
[e = F879 -> -> 0 `i `uc ]
[; ;prog.c: 402: KeyTimeCounter = 0;
"402
[e = F878 -> -> 0 `i `ui ]
[; ;prog.c: 403: long_press = 0;
"403
[e = F880 -> -> 0 `i `uc ]
[; ;prog.c: 404: ButtonPressTimeOut = 40;
"404
[e = F883 -> -> 40 `i `uc ]
"406
}
[; ;prog.c: 406: }else if(long_press == 2){
[e $U 196  ]
[e :U 195 ]
[e $ ! == -> F880 `i -> 2 `i 197  ]
{
[; ;prog.c: 407: LastKeysState = 0;
"407
[e = F879 -> -> 0 `i `uc ]
[; ;prog.c: 408: KeyTimeCounter = 0;
"408
[e = F878 -> -> 0 `i `ui ]
[; ;prog.c: 409: long_press = 0;
"409
[e = F880 -> -> 0 `i `uc ]
[; ;prog.c: 410: ButtonPressTimeOut = 40;
"410
[e = F883 -> -> 40 `i `uc ]
"411
}
[e :U 197 ]
"412
[e :U 196 ]
[e :U 194 ]
}
[e :U 186 ]
"413
}
[e :U 177 ]
"414
}
[e :U 173 ]
[; ;prog.c: 411: }
[; ;prog.c: 412: }
[; ;prog.c: 413: }
[; ;prog.c: 414: }
[; ;prog.c: 415: }
"415
[e :UE 172 ]
}
"417
[v _indData `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 417: void indData() {
[e :U _indData ]
[f ]
[; ;prog.c: 419: if (!INIT()) {
"419
[e $ ! ! ( _INIT ..  199  ]
{
[; ;prog.c: 420: setDigit(3, 14);
"420
[e ( _setDigit (2 , -> -> 3 `i `uc -> -> 14 `i `uc ]
[; ;prog.c: 421: setDigit(2, 24);
"421
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 24 `i `uc ]
[; ;prog.c: 422: setDigit(1, 24);
"422
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 24 `i `uc ]
[; ;prog.c: 423: return;
"423
[e $UE 198  ]
"424
}
[e :U 199 ]
"426
[v _cd `uc ~T0 @X0 1 a ]
[; ;prog.c: 424: }
[; ;prog.c: 426: unsigned char cd = 3;
[e = _cd -> -> 3 `i `uc ]
"427
[v _dN `uc ~T0 @X0 1 a ]
[; ;prog.c: 427: unsigned char dN = 3;
[e = _dN -> -> 3 `i `uc ]
[; ;prog.c: 429: if (sign != 0) {
"429
[e $ ! != -> _sign `i -> 0 `i 200  ]
{
[; ;prog.c: 430: setDigit(cd, 32);
"430
[e ( _setDigit (2 , _cd -> -> 32 `i `uc ]
[; ;prog.c: 431: cd--;
"431
[e -- _cd -> -> 1 `i `uc ]
[; ;prog.c: 432: dN--;
"432
[e -- _dN -> -> 1 `i `uc ]
"433
}
[e :U 200 ]
"434
[v _isPoint `uc ~T0 @X0 1 a ]
[; ;prog.c: 433: }
[; ;prog.c: 434: unsigned char isPoint = 0;
[e = _isPoint -> -> 0 `i `uc ]
[; ;prog.c: 435: do {
"435
[e :U 203 ]
{
"436
[v _v `uc ~T0 @X0 1 a ]
[; ;prog.c: 436: unsigned char v = (temperature > 9 ? 1 : 0) + (temperature > 99 ? 1 : 0);
[e = _v -> + ? > -> _temperature `i -> 9 `i : -> 1 `i -> 0 `i ? > -> _temperature `i -> 99 `i : -> 1 `i -> 0 `i `uc ]
[; ;prog.c: 437: setDigit(cd - v, temperature % 10);
"437
[e ( _setDigit (2 , -> - -> _cd `i -> _v `i `uc -> % -> _temperature `i -> 10 `i `uc ]
[; ;prog.c: 438: if (!isPoint) {
"438
[e $ ! ! != -> _isPoint `i -> -> -> 0 `i `uc `i 204  ]
{
[; ;prog.c: 439: setPoint(cd - v, 1);
"439
[e ( _setPoint (2 , -> - -> _cd `i -> _v `i `uc -> -> 1 `i `uc ]
[; ;prog.c: 440: isPoint = 1;
"440
[e = _isPoint -> -> 1 `i `uc ]
"441
}
[e :U 204 ]
[; ;prog.c: 441: }
[; ;prog.c: 442: temperature /= 10;
"442
[e =/ _temperature -> 10 `uc ]
[; ;prog.c: 443: dN--;
"443
[e -- _dN -> -> 1 `i `uc ]
"444
}
[; ;prog.c: 444: } while (temperature > 0);
[e $ > -> _temperature `i -> 0 `i 203  ]
[e :U 202 ]
[; ;prog.c: 446: if (dN > 0) {
"446
[e $ ! > -> _dN `i -> 0 `i 205  ]
{
[; ;prog.c: 447: cd = dN;
"447
[e = _cd _dN ]
[; ;prog.c: 448: if (temp_drob > 99) temp_drob /= 10;
"448
[e $ ! > -> _temp_drob `i -> 99 `i 206  ]
[e =/ _temp_drob -> 10 `uc ]
[e :U 206 ]
[; ;prog.c: 449: if (temp_drob > 9 && dN == 1) temp_drob /= 10;
"449
[e $ ! && > -> _temp_drob `i -> 9 `i == -> _dN `i -> 1 `i 207  ]
[e =/ _temp_drob -> 10 `uc ]
[e :U 207 ]
[; ;prog.c: 450: do {
"450
[e :U 210 ]
{
"451
[v _v `uc ~T0 @X0 1 a ]
[; ;prog.c: 451: unsigned char v = (temp_drob > 9 ? 1 : 0);
[e = _v -> ? > -> _temp_drob `i -> 9 `i : -> 1 `i -> 0 `i `uc ]
[; ;prog.c: 452: setDigit(cd - v, temp_drob % 10);
"452
[e ( _setDigit (2 , -> - -> _cd `i -> _v `i `uc -> % -> _temp_drob `i -> 10 `i `uc ]
[; ;prog.c: 453: temp_drob /= 10;
"453
[e =/ _temp_drob -> 10 `uc ]
[; ;prog.c: 454: dN--;
"454
[e -- _dN -> -> 1 `i `uc ]
"455
}
[; ;prog.c: 455: } while (temp_drob > 0);
[e $ > -> _temp_drob `i -> 0 `i 210  ]
[e :U 209 ]
"456
}
[e :U 205 ]
[; ;prog.c: 456: }
[; ;prog.c: 458: while (dN > 0) {
"458
[e $U 211  ]
[e :U 212 ]
{
[; ;prog.c: 459: setDigit(dN, 0);
"459
[e ( _setDigit (2 , _dN -> -> 0 `i `uc ]
[; ;prog.c: 460: dN--;
"460
[e -- _dN -> -> 1 `i `uc ]
"461
}
[e :U 211 ]
"458
[e $ > -> _dN `i -> 0 `i 212  ]
[e :U 213 ]
[; ;prog.c: 461: }
[; ;prog.c: 462: }
"462
[e :UE 198 ]
}
"464
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;prog.c: 464: void main() {
[e :U _main ]
[f ]
[; ;prog.c: 467: INTCON = 0;
"467
[e = _INTCON -> -> 0 `i `uc ]
[; ;prog.c: 468: OPTION_REG = 0b00000111;
"468
[e = _OPTION_REG -> -> 7 `i `uc ]
[; ;prog.c: 469: TRISA = 0b00000110;
"469
[e = _TRISA -> -> 6 `i `uc ]
[; ;prog.c: 470: TRISB = 0b00000000;
"470
[e = _TRISB -> -> 0 `i `uc ]
[; ;prog.c: 471: PORTA = 0b00000000;
"471
[e = _PORTA -> -> 0 `i `uc ]
[; ;prog.c: 472: PORTB = 0b00000000;
"472
[e = _PORTB -> -> 0 `i `uc ]
[; ;prog.c: 473: TMR0 = TMR0_VALUE;
"473
[e = _TMR0 _TMR0_VALUE ]
[; ;prog.c: 474: T2CON = 0b00000100;
"474
[e = _T2CON -> -> 4 `i `uc ]
[; ;prog.c: 475: CMCON = 0b00000111;
"475
[e = _CMCON -> -> 7 `i `uc ]
[; ;prog.c: 476: INTCON = 0b10100000;
"476
[e = _INTCON -> -> 160 `i `uc ]
[; ;prog.c: 478: Reset_powerOnInterval();
"478
[e ( _Reset_powerOnInterval ..  ]
[; ;prog.c: 480: clrInd();
"480
[e ( _clrInd ..  ]
[; ;prog.c: 481: setDigit(1, 32);
"481
[e ( _setDigit (2 , -> -> 1 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 482: setDigit(2, 32);
"482
[e ( _setDigit (2 , -> -> 2 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 483: setDigit(3, 32);
"483
[e ( _setDigit (2 , -> -> 3 `i `uc -> -> 32 `i `uc ]
[; ;prog.c: 485: refreshInd();
"485
[e ( _refreshInd ..  ]
"491
[v _adress `uc ~T0 @X0 1 a ]
[; ;prog.c: 491: unsigned char adress = FindCell(((sizeof(DS_Adress)) * 24), 0);
[e = _adress ( _FindCell (2 , -> * -> # _DS_Adress `ui -> -> 24 `i `ui `uc -> -> 0 `i `uc ]
[; ;prog.c: 492: Broadcasting = adress == ((sizeof(DS_Adress)) * 24);
"492
[e = _Broadcasting == -> _adress `ui * -> # _DS_Adress `ui -> -> 24 `i `ui ]
[; ;prog.c: 494: if(Broadcasting){
"494
[e $ ! _Broadcasting 215  ]
{
[; ;prog.c: 495: setPoint(2, 1);
"495
[e ( _setPoint (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"496
}
[e :U 215 ]
[; ;prog.c: 496: }
[; ;prog.c: 497: refreshInd();
"497
[e ( _refreshInd ..  ]
[; ;prog.c: 499: Broadcasting = 1;
"499
[e = _Broadcasting -> -> 1 `i `b ]
[; ;prog.c: 501: INIT();
"501
[e ( _INIT ..  ]
[; ;prog.c: 502: TX(0x33);
"502
[e ( _TX (1 -> -> 51 `i `uc ]
[; ;prog.c: 503: for(unsigned char i = 0; i < (sizeof(DS_Adress)); i++){
"503
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 216  ]
[e $U 217  ]
[e :U 216 ]
{
[; ;prog.c: 504: DS_Adress[i] = RX();
"504
[e = *U + &U _DS_Adress * -> _i `ux -> -> # *U &U _DS_Adress `ui `ux ( _RX ..  ]
"505
}
"503
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `ui -> # _DS_Adress `ui 216  ]
[e :U 217 ]
"505
}
[; ;prog.c: 505: }
[; ;prog.c: 506: WriteArrayToEEPROM(DS_Adress, 0, (sizeof(DS_Adress)));
"506
[e ( _WriteArrayToEEPROM (3 , , &U _DS_Adress -> -> 0 `i `uc -> -> # _DS_Adress `ui `uc ]
[; ;prog.c: 509: while (1) {
"509
[e :U 220 ]
{
"576
}
[e :U 219 ]
"509
[e $U 220  ]
[e :U 221 ]
[; ;prog.c: 576: }
[; ;prog.c: 577: }
"577
[e :UE 214 ]
}
