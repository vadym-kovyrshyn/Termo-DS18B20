Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/debug\Termo-DS18B20.debug.sym \
  --cmf=dist/default/debug\Termo-DS18B20.debug.cmf -z -Q16F628A \
  -oC:\Users\Vadim\AppData\Local\Temp\s6tc.2 \
  -Mdist/default/debug/Termo-DS18B20.debug.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=0120h-014fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-014Fh -ARAM=020h-06Fh,0A0h-0EFh,0120h-014Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-014Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Vadim\AppData\Local\Temp\s6tc.obj \
  dist/default/debug\Termo-DS18B20.debug.obj 

Object code version is 3.11

Machine type is 16F628A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Vadim\AppData\Local\Temp\s6tc.obj
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/debug\Termo-DS18B20.debug.obj
                cinit                                11       11       20        8       0
                intentry                              4        4        C        8       0
                swtext1                             602      602       23      C04       0
                text32                              4D1      4D1       31        8       0
                text31                              6BE      6BE       19      C4A       0
                text30                              58A      58A       2A        8       0
                text29                              668      668       1F      C4A       0
                text28                              5B4      5B4       29        8       0
                text27                              44F      44F       45        8       0
                text26                              122      122       D0        8       0
                text25                              1F2      1F2       AF        8       0
                text24                              40A      40A       45        8       0
                text23                              494      494       3D        8       0
                text22                              764      764        E      C4A       0
                text21                              714      714       12      C4A       0
                text20                              702      702       12      C4A       0
                text19                              531      531       2E        8       0
                text18                              502      502       2F        8       0
                text17                              647      647       21      C4A       0
                text16                              755      755        F      C4A       0
                text15                              726      726       11      C4A       0
                text14                              5DD      5DD       25        8       0
                text13                              55F      55F       2B        8       0
                text12                              6D7      6D7       18      C4A       0
                text11                              789      789        5      EF6       0
                text10                              6EF      6EF       13      C4A       0
                text9                               746      746        F      C4A       0
                text8                               2A1      2A1       AD        8       0
                text7                               625      625       22      C4A       0
                text6                               3C2      3C2       48        8       0
                text5                               783      783        6      EF6       0
                text4                               737      737        F      C4A       0
                text3                               6A3      6A3       1B      C4A       0
                text2                               687      687       1C      C4A       0
                text1                               34E      34E       74        8       0
                maintext                             31       31       F1        8       0
                cstackBANK0                          20       20       28       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       1C       A0       1
                clrtext                             77B      77B        8      EF6       0
                dataBANK1                            BC       BC       11       A0       1
                bssBANK1                             CD       CD        8       A0       1
                bitbssBANK0                         2C8       59        3       20       1     8
                bssBANK0                             48       48       11       20       1
                nvBANK1                              D5       D5        2       A0       1
                strings                             772      772        9      EE4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11       20         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text32                              4D1      4D1       31         0
                text31                              6BE      6BE       19         0
                text30                              58A      58A       2A         0
                text29                              668      668       1F         0
                text28                              5B4      5B4       29         0
                text27                              44F      44F       45         0
                text26                              122      122       D0         0
                text25                              1F2      1F2       AF         0
                text24                              40A      40A       45         0
                text23                              494      494       3D         0
                text22                              764      764        E         0
                text21                              714      714       12         0
                text20                              702      702       12         0
                text19                              531      531       2E         0
                text18                              502      502       2F         0
                text17                              647      647       21         0
                text16                              755      755        F         0
                text15                              726      726       11         0
                text14                              5DD      5DD       25         0
                text13                              55F      55F       2B         0
                text12                              6D7      6D7       18         0
                text11                              789      789        5         0
                text10                              6EF      6EF       13         0
                text9                               746      746        F         0
                text8                               2A1      2A1       AD         0
                text7                               625      625       22         0
                text6                               3C2      3C2       48         0
                text5                               783      783        6         0
                text4                               737      737        F         0
                text3                               6A3      6A3       1B         0
                text2                               687      687       1C         0
                text1                               34E      34E       74         0
                maintext                             31       31       F1         0
                clrtext                             77B      77B        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             772      772        9         0

        CLASS   CONST          
                swtext1                             602      602       23         0

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       28         1
                bitbssBANK0                         2C8       59        3         1
                bssBANK0                             48       48       11         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       1C         1
                dataBANK1                            BC       BC       11         1
                bssBANK1                             CD       CD        8         1
                nvBANK1                              D5       D5        2         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0005FE  000602         8       0  CODE        2
                cstackBANK0                    000020  00003A  00005A        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000037  0000D7        A0       1  BANK1       1
                swtext1                        000602  000023  000625       C04       0  CONST       2
                text7                          000625  00014D  000772       C4A       0  CODE        2
                strings                        000772  000009  00077B       EE4       0  STRING      2
                clrtext                        00077B  000013  00078E       EF6       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005A-006F             16           1
        BANK1            00D7-00EF             19           1
        BANK2            0120-014F             30           1
        CODE             0001-0003              3           2
                         078E-07FF             72
        CONST            0001-0003              3           2
                         078E-07FF             72
        EEDATA           2100-217F             80           2
        ENTRY            0001-0003              3           2
                         078E-07FF             72
        IDLOC            2000-2003              4           2
        RAM              005A-006F             16           1
                         00D7-00EF             19
                         0120-014F             30
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-014F             30           1
        STRCODE          0001-0003              3           2
                         078E-07FF             72
        STRING           0001-0003              3           2
                         078E-07FF             72

                                  Symbol Table

?___awdiv                         cstackBANK0  002A
?___awmod                         cstackBANK0  002A
?___wmul                          cstackCOMMON 0070
?i1___awdiv                       cstackCOMMON 0076
CellToInd@cell                    cstackBANK0  0036
EERD@EEDATA_BUP                   cstackBANK0  002C
EERD@INTCON_BUP                   cstackBANK0  002B
EERD@address                      cstackBANK0  002A
EEWR@INTCON_BUP                   cstackBANK0  002C
EEWR@address                      cstackBANK0  002B
EEWR@data                         cstackBANK0  002A
EditAddressMemory@CellIsEmpty     cstackBANK1  00BA
EditAddressMemory@CellsData       cstackBANK1  00A0
EditAddressMemory@CellsData_253   cstackBANK1  00A8
EditAddressMemory@CellsData_256   cstackBANK1  00B0
EditAddressMemory@cell            cstackBANK1  00BB
EditAddressMemory@i               cstackBANK1  00B8
EditAddressMemory@i_257           cstackBANK1  00B9
F@ButtonPressTimeIn1              bssBANK0     004C
F@ButtonPressTimeIn2              bssBANK0     004D
F@ButtonPressTimeOut              bssBANK0     004E
F@CurrentKeysState                cstackBANK0  0029
F@KeyTimeCounter                  bssBANK1     00D3
F@LastKeysState                   bssBANK0     004F
F@dig                             cstackBANK0  0028
F@long_press                      bssBANK0     0050
FillArrayFromEEPROM@address_start cstackBANK0  002D
FillArrayFromEEPROM@container     cstackBANK0  0030
FillArrayFromEEPROM@i             cstackBANK0  0031
FillArrayFromEEPROM@quantity      cstackBANK0  002E
FindCell@CellIsEmpty              cstackBANK0  003C
FindCell@CellsData                cstackBANK0  0033
FindCell@address                  cstackBANK0  003F
FindCell@addressNew               cstackBANK0  003B
FindCell@addressStart             cstackBANK0  003D
FindCell@i                        cstackBANK0  003E
FindCell@previous                 cstackBANK0  0032
INIT@b                            bitbssBANK0  02C8
PL2                               text8        0338
PL4                               text8        0346
PL6                               text25       029B
PL8                               maintext     011D
RX@d                              cstackBANK0  002B
RX@i                              cstackBANK0  002C
ReadCell@CellIsEmpty              cstackBANK0  0033
ReadCell@CellsData                cstackBANK0  0032
ReadCell@_CellIsEmpty             cstackBANK0  0036
ReadCell@cell                     cstackBANK0  0035
ReadCell@i                        cstackBANK0  0037
TX@cmd                            cstackBANK0  002B
TX@i                              cstackBANK0  002D
TX@temp                           cstackBANK0  002C
WriteArrayToEEPROM@address_start  cstackBANK0  002D
WriteArrayToEEPROM@container      cstackBANK0  0030
WriteArrayToEEPROM@i              cstackBANK0  0031
WriteArrayToEEPROM@quantity       cstackBANK0  002E
_Broadcasting                     bitbssBANK0  02C9
_CMCON                            (abs)        001F
_CellToInd                        text19       0531
_DS_Address                       dataBANK1    00C5
_DS_ReadData                      dataBANK1    00BC
_DigitNumber                      bssBANK0     0051
_EEADR                            (abs)        009B
_EECON1bits                       (abs)        009C
_EECON2                           (abs)        009D
_EEDATA                           (abs)        009A
_EERD                             text16       0755
_EEWR                             text12       06D7
_EditAddressMemory                text8        02A1
_F                                text25       01F2
_FillArrayFromEEPROM              text15       0726
_FindCell                         text6        03C2
_INIT                             text18       0502
_INTCON                           (abs)        000B
_INTCONbits                       (abs)        000B
_KeyCode                          bssBANK0     0052
_OPTION_REG                       (abs)        0081
_PORTA                            (abs)        0005
_PORTB                            (abs)        0006
_PortAData                        strings      0778
_PowerBlocked                     bssBANK0     0053
_RA1                              (abs)        0029
_RA2                              (abs)        002A
_RA3                              (abs)        002B
_RX                               text17       0647
_ReadCell                         text14       05DD
_Reset_powerOnInterval            text5        0783
_Run_getTemp                      text4        0737
_T0IF                             (abs)        005A
_T2CON                            (abs)        0012
_TMR0                             (abs)        0001
_TRISA                            (abs)        0085
_TRISA3                           (abs)        042B
_TRISA4                           (abs)        042C
_TRISB                            (abs)        0086
_TX                               text13       055F
_WriteArrayToEEPROM               text10       06EF
__CFG_BOREN$OFF                   (abs)        0000
__CFG_CP$OFF                      (abs)        0000
__CFG_CPD$OFF                     (abs)        0000
__CFG_FOSC$INTOSCIO               (abs)        0000
__CFG_LVP$OFF                     (abs)        0000
__CFG_MCLRE$ON                    (abs)        0000
__CFG_PWRTE$ON                    (abs)        0000
__CFG_WDTE$OFF                    (abs)        0000
__Habs1                           abs1         0000
__Hbank0                          bank0        0000
__Hbank1                          bank1        0000
__Hbank2                          bank2        0000
__Hbank3                          bank3        0000
__HbitbssBANK0                    bitbssBANK0  0000
__HbssBANK0                       bssBANK0     0000
__HbssBANK1                       bssBANK1     0000
__Hcinit                          cinit        0031
__Hclrtext                        clrtext      0000
__Hcode                           code         0000
__Hcommon                         common       0000
__Hconfig                         config       2008
__HcstackBANK0                    cstackBANK0  0000
__HcstackBANK1                    cstackBANK1  0000
__HcstackCOMMON                   cstackCOMMON 0000
__HdataBANK1                      dataBANK1    0000
__Heeprom_data                    eeprom_data  0000
__Hend_init                       end_init     0011
__Hfunctab                        functab      0000
__HidataBANK1                     idataBANK1   0000
__Hidloc                          idloc        0000
__Hinit                           init         0010
__Hintentry                       intentry     0010
__Hmaintext                       maintext     0000
__HnvBANK1                        nvBANK1      0000
__Hpa_nodes                       pa_nodes     0000
__Hpowerup                        powerup      0000
__Hram                            ram          0000
__Hreset_vec                      reset_vec    0001
__Hsfr0                           sfr0         0000
__Hsfr1                           sfr1         0000
__Hsfr2                           sfr2         0000
__Hsfr3                           sfr3         0000
__Hspace_0                        (abs)        2008
__Hspace_1                        (abs)        02CB
__Hspace_2                        (abs)        0000
__Hspace_3                        (abs)        0000
__Hstack                          stack        0000
__Hstrings                        strings      0000
__Htext                           text         0000
__Labs1                           abs1         0000
__Lbank0                          bank0        0000
__Lbank1                          bank1        0000
__Lbank2                          bank2        0000
__Lbank3                          bank3        0000
__LbitbssBANK0                    bitbssBANK0  0000
__LbssBANK0                       bssBANK0     0000
__LbssBANK1                       bssBANK1     0000
__Lcinit                          cinit        0011
__Lclrtext                        clrtext      0000
__Lcode                           code         0000
__Lcommon                         common       0000
__Lconfig                         config       2007
__LcstackBANK0                    cstackBANK0  0000
__LcstackBANK1                    cstackBANK1  0000
__LcstackCOMMON                   cstackCOMMON 0000
__LdataBANK1                      dataBANK1    0000
__Leeprom_data                    eeprom_data  0000
__Lend_init                       end_init     0010
__Lfunctab                        functab      0000
__LidataBANK1                     idataBANK1   0000
__Lidloc                          idloc        0000
__Linit                           init         0010
__Lintentry                       intentry     0004
__Lmaintext                       maintext     0000
__LnvBANK1                        nvBANK1      0000
__Lpa_nodes                       pa_nodes     0000
__Lpowerup                        powerup      0000
__Lram                            ram          0000
__Lreset_vec                      reset_vec    0000
__Lsfr0                           sfr0         0000
__Lsfr1                           sfr1         0000
__Lsfr2                           sfr2         0000
__Lsfr3                           sfr3         0000
__Lspace_0                        (abs)        0000
__Lspace_1                        (abs)        0000
__Lspace_2                        (abs)        0000
__Lspace_3                        (abs)        0000
__Lstack                          stack        0000
__Lstrings                        strings      0000
__Ltext                           text         0000
__S0                              (abs)        2008
__S1                              (abs)        00D7
__S2                              (abs)        0000
__S3                              (abs)        0000
___awdiv                          text24       040A
___awdiv@counter                  cstackBANK0  002E
___awdiv@dividend                 cstackBANK0  002C
___awdiv@divisor                  cstackBANK0  002A
___awdiv@quotient                 cstackBANK0  0030
___awdiv@sign                     cstackBANK0  002F
___awmod                          text23       0494
___awmod@counter                  cstackBANK0  002E
___awmod@dividend                 cstackBANK0  002C
___awmod@divisor                  cstackBANK0  002A
___awmod@sign                     cstackBANK0  002F
___int_sp                         stack        0000
___latbits                        (abs)        0000
___lbdiv                          text3        06A3
___lbdiv@counter                  cstackBANK0  002C
___lbdiv@dividend                 cstackBANK0  002B
___lbdiv@divisor                  cstackBANK0  002A
___lbdiv@quotient                 cstackBANK0  002D
___lbmod                          text2        0687
___lbmod@counter                  cstackBANK0  002D
___lbmod@dividend                 cstackBANK0  002C
___lbmod@divisor                  cstackBANK0  002A
___lbmod@rem                      cstackBANK0  002E
___sp                             stack        0000
___wmul                           text31       06BE
___wmul@multiplicand              cstackCOMMON 0072
___wmul@multiplier                cstackCOMMON 0070
___wmul@product                   cstackCOMMON 0074
__end_ofPL2                       text8        0346
__end_ofPL4                       text8        034E
__end_ofPL6                       text25       02A1
__end_ofPL8                       maintext     0122
__end_of_CellToInd                text19       055F
__end_of_EERD                     text16       0764
__end_of_EEWR                     text12       06EF
__end_of_EditAddressMemory        text8        0338
__end_of_F                        text25       029B
__end_of_FillArrayFromEEPROM      text15       0737
__end_of_FindCell                 text6        040A
__end_of_INIT                     text18       0531
__end_of_PortAData                strings      077B
__end_of_RX                       text17       0668
__end_of_ReadCell                 text14       0602
__end_of_Reset_powerOnInterval    text5        0789
__end_of_Run_getTemp              text4        0746
__end_of_TX                       text13       058A
__end_of_WriteArrayToEEPROM       text10       0702
__end_of___awdiv                  text24       044F
__end_of___awmod                  text23       04D1
__end_of___lbdiv                  text3        06BE
__end_of___lbmod                  text2        06A3
__end_of___wmul                   text31       06D7
__end_of__initialization          cinit        002F
__end_of__stringtab               strings      0778
__end_of_calc_crc                 text7        0647
__end_of_clrInd                   text22       0772
__end_of_convDig                  text32       0502
__end_of_get_temp_Async           text26       01F2
__end_of_indData                  text1        03C2
__end_of_main                     maintext     011D
__end_of_refreshInd               text21       0726
__end_of_setDigit                 text20       0714
__end_of_setPoint                 text9        0755
__end_of_waitInterrupt            text11       078E
__end_ofi1_INIT                   text30       05B4
__end_ofi1_RX                     text29       0687
__end_ofi1_TX                     text28       05DD
__end_ofi1___awdiv                text27       0494
__initialization                  cinit        0011
__pbitbssBANK0                    bitbssBANK0  02C8
__pbssBANK0                       bssBANK0     0048
__pbssBANK1                       bssBANK1     00CD
__pcstackBANK0                    cstackBANK0  0020
__pcstackBANK1                    cstackBANK1  00A0
__pcstackCOMMON                   cstackCOMMON 0070
__pdataBANK1                      dataBANK1    00BC
__pidataBANK1                     idataBANK1   0000
__pintentry                       intentry     0004
__pmaintext                       maintext     0031
__pnvBANK1                        nvBANK1      00D5
__pstrings                        strings      0772
__pswtext1                        swtext1      0602
__ptext1                          text1        034E
__ptext10                         text10       06EF
__ptext11                         text11       0789
__ptext12                         text12       06D7
__ptext13                         text13       055F
__ptext14                         text14       05DD
__ptext15                         text15       0726
__ptext16                         text16       0755
__ptext17                         text17       0647
__ptext18                         text18       0502
__ptext19                         text19       0531
__ptext2                          text2        0687
__ptext20                         text20       0702
__ptext21                         text21       0714
__ptext22                         text22       0764
__ptext23                         text23       0494
__ptext24                         text24       040A
__ptext25                         text25       01F2
__ptext26                         text26       0122
__ptext27                         text27       044F
__ptext28                         text28       05B4
__ptext29                         text29       0668
__ptext3                          text3        06A3
__ptext30                         text30       058A
__ptext31                         text31       06BE
__ptext32                         text32       04D1
__ptext4                          text4        0737
__ptext5                          text5        0783
__ptext6                          text6        03C2
__ptext7                          text7        0625
__ptext8                          text8        02A1
__ptext9                          text9        0746
__size_of_CellToInd               (abs)        0000
__size_of_EERD                    (abs)        0000
__size_of_EEWR                    (abs)        0000
__size_of_EditAddressMemory       (abs)        0000
__size_of_F                       (abs)        0000
__size_of_FillArrayFromEEPROM     (abs)        0000
__size_of_FindCell                (abs)        0000
__size_of_INIT                    (abs)        0000
__size_of_RX                      (abs)        0000
__size_of_ReadCell                (abs)        0000
__size_of_Reset_powerOnInterval   (abs)        0000
__size_of_Run_getTemp             (abs)        0000
__size_of_TX                      (abs)        0000
__size_of_WriteArrayToEEPROM      (abs)        0000
__size_of___awdiv                 (abs)        0000
__size_of___awmod                 (abs)        0000
__size_of___lbdiv                 (abs)        0000
__size_of___lbmod                 (abs)        0000
__size_of___wmul                  (abs)        0000
__size_of_calc_crc                (abs)        0000
__size_of_clrInd                  (abs)        0000
__size_of_convDig                 (abs)        0000
__size_of_get_temp_Async          (abs)        0000
__size_of_indData                 (abs)        0000
__size_of_main                    (abs)        0000
__size_of_refreshInd              (abs)        0000
__size_of_setDigit                (abs)        0000
__size_of_setPoint                (abs)        0000
__size_of_waitInterrupt           (abs)        0000
__size_ofi1_INIT                  (abs)        0000
__size_ofi1_RX                    (abs)        0000
__size_ofi1_TX                    (abs)        0000
__size_ofi1___awdiv               (abs)        0000
__stringbase                      strings      0777
__stringtab                       strings      0772
_calc_crc                         text7        0625
_clrInd                           text22       0764
_convDig                          text32       04D1
_digitemp                         bssBANK0     0054
_digitnum                         bssBANK0     0055
_digits                           bssBANK1     00CD
_digits_0                         bssBANK1     00D0
_endInterrupt                     bitbssBANK0  02CA
_getTemp_flags                    bssBANK0     0048
_get_temp_Async                   text26       0122
_indData                          text1        034E
_main                             maintext     0031
_main$266                         cstackBANK0  0042
_powerOnInterval                  nvBANK1      00D5
_refreshInd                       text21       0714
_setDigit                         text20       0702
_setPoint                         text9        0746
_sign                             bssBANK0     0056
_temp_drob                        bssBANK0     0057
_temperature                      bssBANK0     0058
_waitInterrupt                    text11       0789
btemp                             (abs)        007E
calc_crc@crc                      cstackBANK0  002F
calc_crc@dat                      cstackBANK0  002B
calc_crc@fb                       cstackBANK0  002C
calc_crc@i                        cstackBANK0  002E
calc_crc@len                      cstackBANK0  002A
calc_crc@mas                      cstackBANK0  002D
clear_ram0                        clrtext      077B
clrInd@a                          cstackBANK0  002A
convDig@dig                       cstackCOMMON 0070
end_of_initialization             cinit        002F
get_temp_Async@temp1              cstackBANK0  0022
get_temp_Async@temp2              cstackBANK0  0023
i1RX@d                            cstackCOMMON 0071
i1RX@i                            cstackCOMMON 0072
i1TX@cmd                          cstackCOMMON 0071
i1TX@i                            cstackCOMMON 0073
i1TX@temp                         cstackCOMMON 0072
i1_INIT                           text30       058A
i1_RX                             text29       0668
i1_TX                             text28       05B4
i1___awdiv                        text27       044F
i1___awdiv@counter                cstackCOMMON 007A
i1___awdiv@dividend               cstackCOMMON 0078
i1___awdiv@divisor                cstackCOMMON 0076
i1___awdiv@quotient               cstackCOMMON 007C
i1___awdiv@sign                   cstackCOMMON 007B
indData@cd                        cstackBANK0  003A
indData@dN                        cstackBANK0  003B
indData@isPoint                   cstackBANK0  0038
indData@v                         cstackBANK0  0039
indData@v_236                     cstackBANK0  0037
interrupt_function                intentry     0004
intlevel0                         functab      0000
intlevel1                         functab      0000
intlevel2                         functab      0000
intlevel3                         functab      0000
intlevel4                         functab      0000
intlevel5                         functab      0000
ltemp                             (abs)        007E
ltemp0                            (abs)        007E
ltemp1                            (abs)        0082
ltemp2                            (abs)        0086
ltemp3                            (abs)        0080
main@address                      cstackBANK0  0047
main@cell                         cstackBANK0  0046
main@data_on_ind_delay            cstackBANK0  0044
main@switcher                     cstackBANK0  0041
refreshInd@a                      cstackBANK0  002B
reset_vec                         reset_vec    0000
saved_w                           (abs)        007E
setDigit@a                        cstackBANK0  0035
setDigit@data                     cstackBANK0  0032
setPoint@dignum                   cstackBANK0  002B
setPoint@value                    cstackBANK0  002A
stackhi                           (abs)        0000
stacklo                           (abs)        0000
start                             init         0010
start_initialization              cinit        0011
ttemp                             (abs)        007E
ttemp0                            (abs)        007E
ttemp1                            (abs)        0081
ttemp2                            (abs)        0084
ttemp3                            (abs)        0087
ttemp4                            (abs)        007F
wtemp                             (abs)        007E
wtemp0                            (abs)        007E
wtemp1                            (abs)        0080
wtemp2                            (abs)        0082
wtemp3                            (abs)        0084
wtemp4                            (abs)        0086
wtemp5                            (abs)        0088
wtemp6                            (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 709 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data_on_ind_    2   36[BANK0 ] unsigned int 
  address         1   39[BANK0 ] unsigned char 
  cell            1   38[BANK0 ] unsigned char 
  switcher        1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       7       0       0
      Temps:          0       1       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_CellToInd
		_EditAddressMemory
		_FillArrayFromEEPROM
		_FindCell
		_Reset_powerOnInterval
		_Run_getTemp
		_clrInd
		_indData
		_refreshInd
		_setDigit
		_setPoint
		_waitInterrupt
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _indData *****************
 Defined at:
		line 546 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  v               1   23[BANK0 ] unsigned char 
  v               1   25[BANK0 ] unsigned char 
  dN              1   27[BANK0 ] unsigned char 
  cd              1   26[BANK0 ] unsigned char 
  isPoint         1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       5       0       0
      Temps:          0       1       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lbdiv
		___lbmod
		_setDigit
		_setPoint
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   12[BANK0 ] unsigned char 
  rem             1   14[BANK0 ] unsigned char 
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
 This function uses a non-reentrant model


 *************** function ___lbdiv *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   11[BANK0 ] unsigned char 
  quotient        1   13[BANK0 ] unsigned char 
  counter         1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
 This function uses a non-reentrant model


 *************** function _Run_getTemp *****************
 Defined at:
		line 693 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Reset_powerOnInterval *****************
 Defined at:
		line 79 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _FindCell *****************
 Defined at:
		line 412 in file "prog.c"
 Parameters:    Size  Location     Type
  addressStart    1    wreg     unsigned char 
  previous        1   18[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  addressStart    1   29[BANK0 ] unsigned char 
  i               1   30[BANK0 ] unsigned char 
  CellsData       8   19[BANK0 ] unsigned char [8]
  CellIsEmpty     1   28[BANK0 ] unsigned char 
  CRC             1    0        unsigned char 
  address         1   31[BANK0 ] unsigned char 
  addressNew      1   27[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0      13       0       0
      Temps:          0       0       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_FillArrayFromEEPROM
		_calc_crc
		_waitInterrupt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _calc_crc *****************
 Defined at:
		line 238 in file "prog.c"
 Parameters:    Size  Location     Type
  mas             1    wreg     PTR unsigned char 
		 -> FindCell@CellsData(8), 
  len             1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  mas             1   13[BANK0 ] PTR unsigned char 
		 -> FindCell@CellsData(8), 
  fb              1   12[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
  dat             1   11[BANK0 ] unsigned char 
  crc             1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       5       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_FindCell
 This function uses a non-reentrant model


 *************** function _EditAddressMemory *****************
 Defined at:
		line 620 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   24[BANK1 ] unsigned char 
  i               1   25[BANK1 ] unsigned char 
  CellsData       8    8[BANK1 ] unsigned char [8]
  CellsData       8   16[BANK1 ] unsigned char [8]
  CellsData       8    0[BANK1 ] unsigned char [8]
  cell            1   27[BANK1 ] unsigned char 
  CellIsEmpty     1   26[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      28       0
      Temps:          0       1       0       0
      Totals:         0       1      28       0
Total ram usage:       29 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_CellToInd
		_INIT
		_RX
		_ReadCell
		_TX
		_WriteArrayToEEPROM
		_clrInd
		_refreshInd
		_setPoint
		_waitInterrupt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setPoint *****************
 Defined at:
		line 91 in file "prog.c"
 Parameters:    Size  Location     Type
  dignum          1    wreg     unsigned char 
  value           1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dignum          1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _WriteArrayToEEPROM *****************
 Defined at:
		line 181 in file "prog.c"
 Parameters:    Size  Location     Type
  container       1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData_256(8), EditAddressMemory@CellsData_253(8), 
  address_star    1   13[BANK0 ] unsigned char 
  quantity        1   14[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  container       1   16[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData_256(8), EditAddressMemory@CellsData_253(8), 
  i               1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EEWR
		_waitInterrupt
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _waitInterrupt *****************
 Defined at:
		line 74 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_WriteArrayToEEPROM
		_FindCell
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _EEWR *****************
 Defined at:
		line 148 in file "prog.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  data            1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  address         1   11[BANK0 ] unsigned char 
  INTCON_BUP      1   12[BANK0 ] volatile unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_WriteArrayToEEPROM
 This function uses a non-reentrant model


 *************** function _TX *****************
 Defined at:
		line 204 in file "prog.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1   11[BANK0 ] unsigned char 
  i               1   13[BANK0 ] unsigned char 
  temp            1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _ReadCell *****************
 Defined at:
		line 593 in file "prog.c"
 Parameters:    Size  Location     Type
  cell            1    wreg     unsigned char 
  CellsData       1   18[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData_256(8), EditAddressMemory@CellsData_253(8), EditAddressMemory@CellsData(8), 
  CellIsEmpty     1   19[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellIsEmpty(1), 
 Auto vars:     Size  Location     Type
  cell            1   21[BANK0 ] unsigned char 
  i               1   23[BANK0 ] unsigned char 
  _CellIsEmpty    1   22[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_FillArrayFromEEPROM
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _FillArrayFromEEPROM *****************
 Defined at:
		line 174 in file "prog.c"
 Parameters:    Size  Location     Type
  container       1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData_256(8), EditAddressMemory@CellsData_253(8), EditAddressMemory@CellsData(8), FindCell@CellsData(8), 
		 -> DS_Address(8), 
  address_star    1   13[BANK0 ] unsigned char 
  quantity        1   14[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  container       1   16[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData_256(8), EditAddressMemory@CellsData_253(8), EditAddressMemory@CellsData(8), FindCell@CellsData(8), 
		 -> DS_Address(8), 
  i               1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EERD
 This function is called by:
		_FindCell
		_ReadCell
		_main
 This function uses a non-reentrant model


 *************** function _EERD *****************
 Defined at:
		line 163 in file "prog.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1   10[BANK0 ] unsigned char 
  EEDATA_BUP      1   12[BANK0 ] volatile unsigned char 
  INTCON_BUP      1   11[BANK0 ] volatile unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_FillArrayFromEEPROM
 This function uses a non-reentrant model


 *************** function _RX *****************
 Defined at:
		line 224 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   12[BANK0 ] unsigned char 
  d               1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _INIT *****************
 Defined at:
		line 189 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _CellToInd *****************
 Defined at:
		line 605 in file "prog.c"
 Parameters:    Size  Location     Type
  cell            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cell            1   22[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___awmod
		_clrInd
		_refreshInd
		_setDigit
 This function is called by:
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _setDigit *****************
 Defined at:
		line 87 in file "prog.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  data            1   18[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1   21[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
		_CellToInd
		_main
 This function uses a non-reentrant model


 *************** function _refreshInd *****************
 Defined at:
		line 95 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  a               1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _clrInd *****************
 Defined at:
		line 101 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  a               1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2   10[BANK0 ] int 
  dividend        2   12[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   15[BANK0 ] unsigned char 
  counter         1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   10[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2   10[BANK0 ] int 
  dividend        2   12[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   16[BANK0 ] int 
  sign            1   15[BANK0 ] unsigned char 
  counter         1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   10[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
 This function uses a non-reentrant model


 *************** function _F *****************
 Defined at:
		line 447 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  CurrentKeysS    1    9[BANK0 ] unsigned char 
  dig             1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       4       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_convDig
		_get_temp_Async
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _get_temp_Async *****************
 Defined at:
		line 329 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp2           1    3[BANK0 ] unsigned char 
  temp1           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___wmul
		i1_INIT
		i1_RX
		i1_TX
		i1___awdiv
 This function is called by:
		_F
 This function uses a non-reentrant model


 *************** function i1___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[COMMON] int 
  dividend        2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  __awdiv         2   12[COMMON] int 
  __awdiv         1   11[COMMON] unsigned char 
  __awdiv         1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_TX *****************
 Defined at:
		line 204 in file "prog.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    1[COMMON] unsigned char 
  TX              1    3[COMMON] unsigned char 
  TX              1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_RX *****************
 Defined at:
		line 224 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  RX              1    2[COMMON] unsigned char 
  RX              1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_INIT *****************
 Defined at:
		line 189 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function _convDig *****************
 Defined at:
		line 107 in file "prog.c"
 Parameters:    Size  Location     Type
  dig             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dig             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_F
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	0494	0000	62

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 62

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	06BE	0000	26

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 26

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	040A	0000	70

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 70

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	0687	0000	29

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 29

shared
		PL8            		CODE           	011D	0000	6
		__stringtab    		STRING         	0772	0000	7
		i1___awdiv     		CODE           	044F	0000	70
		__initialization		CODE           	0011	0000	31
		_PortAData     		STRING         	0778	0000	4
		i1_RX          		CODE           	0668	0000	32
		i1_TX          		CODE           	05B4	0000	42
		PL2            		CODE           	0338	0000	15
		PL4            		CODE           	0346	0000	9
		PL6            		CODE           	029B	0000	7
		i1_INIT        		CODE           	058A	0000	43

shared estimated size: 266

prog.c
		_indData       		CODE           	034E	0000	117
		_setDigit      		CODE           	0702	0000	19
		_convDig       		CODE           	04D1	0000	50
		_EEWR          		CODE           	06D7	0000	25
		_Reset_powerOnInterval		CODE           	0783	0000	7
		_refreshInd    		CODE           	0714	0000	19
		_calc_crc      		CODE           	0625	0000	35
		_setPoint      		CODE           	0746	0000	16
		_waitInterrupt 		CODE           	0789	0000	6
		_main          		CODE           	0031	0000	237
		_EditAddressMemory		CODE           	02A1	0000	152
		_ReadCell      		CODE           	05DD	0000	38
		_get_temp_Async		CODE           	0122	0000	209
		_WriteArrayToEEPROM		CODE           	06EF	0000	20
		_FillArrayFromEEPROM		CODE           	0726	0000	18
		_Run_getTemp   		CODE           	0737	0000	16
		_EERD          		CODE           	0755	0000	16
		_CellToInd     		CODE           	0531	0000	47
		_F             		CODE           	01F2	0000	170
		_RX            		CODE           	0647	0000	34
		_TX            		CODE           	055F	0000	44
		_INIT          		CODE           	0502	0000	48
		_clrInd        		CODE           	0764	0000	15
		_FindCell      		CODE           	03C2	0000	73

prog.c estimated size: 1431

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c
		___lbdiv       		CODE           	06A3	0000	28

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c estimated size: 28

