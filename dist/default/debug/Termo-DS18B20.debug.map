Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/debug\Termo-DS18B20.debug.sym \
  --cmf=dist/default/debug\Termo-DS18B20.debug.cmf -z -Q16F628A \
  -oC:\Users\Vadim\AppData\Local\Temp\s5go.2 \
  -Mdist/default/debug/Termo-DS18B20.debug.map -E1 -ver=XC8 \
  -ASTACK=0120h-014fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-014Fh -ARAM=020h-06Fh,0A0h-0EFh,0120h-014Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-014Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Vadim\AppData\Local\Temp\s5go.obj \
  dist/default/debug\Termo-DS18B20.debug.obj 

Object code version is 3.11

Machine type is 16F628A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Vadim\AppData\Local\Temp\s5go.obj
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/debug\Termo-DS18B20.debug.obj
                cinit                                11       11       1C        8       0
                intentry                              4        4        C        8       0
                swtext1                             611      611       23      C22       0
                text34                              4E0      4E0       31        8       0
                text33                              6EE      6EE       19      C68       0
                text32                              599      599       2A        8       0
                text31                              698      698       1F      C68       0
                text30                              5C3      5C3       29        8       0
                text29                              45E      45E       45        8       0
                text28                              634      634       22      C68       0
                text27                               2D       2D       F1        8       0
                text26                              2B6      2B6       AA        8       0
                text25                              419      419       45        8       0
                text24                              4A3      4A3       3D        8       0
                text23                              7A5      7A5        E      C68       0
                text22                              732      732       13      C68       0
                text21                              745      745       12      C68       0
                text20                              540      540       2E        8       0
                text19                              511      511       2F        8       0
                text18                              677      677       21      C68       0
                text17                              788      788        F      C68       0
                text16                              768      768       11      C68       0
                text15                              5EC      5EC       25        8       0
                text14                              797      797        E      C68       0
                text13                              56E      56E       2B        8       0
                text12                              707      707       18      C68       0
                text11                              7CA      7CA        5      F78       0
                text10                              71F      71F       13      C68       0
                text9                               656      656       21      C68       0
                text8                               779      779        F      C68       0
                text7                               1F3      1F3       C3        8       0
                text6                               3D4      3D4       45        8       0
                text5                               7C4      7C4        6      F78       0
                text4                               757      757       11      C68       0
                text3                               6D3      6D3       1B      C68       0
                text2                               6B7      6B7       1C      C68       0
                text1                               360      360       74        8       0
                maintext                            11E      11E       D5        8       0
                cstackBANK0                          20       20       23       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       17       A0       1
                clrtext                             7BC      7BC        8      F78       0
                dataBANK1                            B7       B7       11       A0       1
                bitbssBANK0                         2F0       5E        3       20       1     8
                bssBANK0                             43       43       1B       20       1
                strings                             7B3      7B3        9      F66       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11       1C         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text34                              4E0      4E0       31         0
                text33                              6EE      6EE       19         0
                text32                              599      599       2A         0
                text31                              698      698       1F         0
                text30                              5C3      5C3       29         0
                text29                              45E      45E       45         0
                text28                              634      634       22         0
                text27                               2D       2D       F1         0
                text26                              2B6      2B6       AA         0
                text25                              419      419       45         0
                text24                              4A3      4A3       3D         0
                text23                              7A5      7A5        E         0
                text22                              732      732       13         0
                text21                              745      745       12         0
                text20                              540      540       2E         0
                text19                              511      511       2F         0
                text18                              677      677       21         0
                text17                              788      788        F         0
                text16                              768      768       11         0
                text15                              5EC      5EC       25         0
                text14                              797      797        E         0
                text13                              56E      56E       2B         0
                text12                              707      707       18         0
                text11                              7CA      7CA        5         0
                text10                              71F      71F       13         0
                text9                               656      656       21         0
                text8                               779      779        F         0
                text7                               1F3      1F3       C3         0
                text6                               3D4      3D4       45         0
                text5                               7C4      7C4        6         0
                text4                               757      757       11         0
                text3                               6D3      6D3       1B         0
                text2                               6B7      6B7       1C         0
                text1                               360      360       74         0
                maintext                            11E      11E       D5         0
                clrtext                             7BC      7BC        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             7B3      7B3        9         0

        CLASS   CONST          
                swtext1                             611      611       23         0

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       23         1
                bitbssBANK0                         2F0       5E        3         1
                bssBANK0                             43       43       1B         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       17         1
                dataBANK1                            B7       B7       11         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  00060D  000611         8       0  CODE        2
                cstackBANK0                    000020  00003F  00005F        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000028  0000C8        A0       1  BANK1       1
                swtext1                        000611  000023  000634       C22       0  CONST       2
                text28                         000634  00017F  0007B3       C68       0  CODE        2
                strings                        0007B3  000009  0007BC       F66       0  STRING      2
                clrtext                        0007BC  000013  0007CF       F78       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005F-006F             11           1
        BANK1            00C8-00EF             28           1
        BANK2            0120-014F             30           1
        CODE             0001-0003              3           2
                         07CF-07FF             31
        CONST            0001-0003              3           2
                         07CF-07FF             31
        EEDATA           2100-217F             80           2
        ENTRY            0001-0003              3           2
                         07CF-07FF             31
        IDLOC            2000-2003              4           2
        RAM              005F-006F             11           1
                         00C8-00EF             28
                         0120-014F             30
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-014F             30           1
        STRCODE          0001-0003              3           2
                         07CF-07FF             31
        STRING           0001-0003              3           2
                         07CF-07FF             31

                                  Symbol Table

?___awdiv                         cstackBANK0  002C
?___awmod                         cstackBANK0  002C
?___wmul                          cstackCOMMON 0070
?i1___awdiv                       cstackCOMMON 0076
CellToInd@cell                    cstackBANK0  0038
EERD@EEDATA_BUP                   cstackBANK0  002E
EERD@INTCON_BUP                   cstackBANK0  002D
EERD@address                      cstackBANK0  002C
EEWR@INTCON_BUP                   cstackBANK0  002E
EEWR@address                      cstackBANK0  002D
EEWR@data                         cstackBANK0  002C
EditAddressMemory@CellIsEmpty     cstackBANK1  00AC
EditAddressMemory@CellsData       cstackBANK1  00A0
EditAddressMemory@ErrorShowed     cstackBANK1  00A8
EditAddressMemory@RereadCell      cstackBANK1  00A9
EditAddressMemory@cell            cstackBANK1  00AD
EditAddressMemory@i               cstackBANK1  00AA
EditAddressMemory@i_261           cstackBANK1  00AB
F@ButtonPressTimeIn1              bssBANK0     0052
F@ButtonPressTimeIn2              bssBANK0     0053
F@ButtonPressTimeOut              bssBANK0     0054
F@CurrentKeysState                cstackBANK0  002B
F@DigitNumber                     bssBANK0     0055
F@KeyTimeCounter                  bssBANK0     004E
F@LastKeysState                   bssBANK0     0056
F@dig                             cstackBANK0  002A
F@long_press                      bssBANK0     0057
FillArrayFromEEPROM@address_start cstackBANK0  002F
FillArrayFromEEPROM@container     cstackBANK0  0032
FillArrayFromEEPROM@i             cstackBANK0  0033
FillArrayFromEEPROM@quantity      cstackBANK0  0030
FindCell@CellIsEmpty              cstackBANK0  003E
FindCell@CellsData                cstackBANK0  0035
FindCell@address                  cstackBANK0  0041
FindCell@addressNew               cstackBANK0  003D
FindCell@addressStart             cstackBANK0  003F
FindCell@i                        cstackBANK0  0040
FindCell@previous                 cstackBANK0  0034
INIT@b                            bitbssBANK0  02F0
PL2                               text27       010E
PL4                               text27       0116
PL6                               text7        02B1
RX@d                              cstackBANK0  002D
RX@i                              cstackBANK0  002E
ReadCell@CellIsEmpty              cstackBANK0  0035
ReadCell@CellsData                cstackBANK0  0034
ReadCell@_CellIsEmpty             cstackBANK0  0038
ReadCell@cell                     cstackBANK0  0037
ReadCell@i                        cstackBANK0  0039
TX@cmd                            cstackBANK0  002D
TX@i                              cstackBANK0  002F
TX@temp                           cstackBANK0  002E
WriteArrayToEEPROM@address_start  cstackBANK0  002F
WriteArrayToEEPROM@container      cstackBANK0  0032
WriteArrayToEEPROM@i              cstackBANK0  0033
WriteArrayToEEPROM@quantity       cstackBANK0  0030
_Broadcasting                     bitbssBANK0  02F1
_CMCON                            (abs)        001F
_CellToInd                        text20       0540
_DS_Address                       dataBANK1    00C0
_DS_ReadData                      dataBANK1    00B7
_EEADR                            (abs)        009B
_EECON1bits                       (abs)        009C
_EECON2                           (abs)        009D
_EEDATA                           (abs)        009A
_EERD                             text17       0788
_EEWR                             text12       0707
_EditAddressMemory                text7        01F3
_F                                text26       02B6
_FillArrayFromEEPROM              text16       0768
_FindCell                         text6        03D4
_INIT                             text19       0511
_INTCON                           (abs)        000B
_INTCONbits                       (abs)        000B
_KeyCode                          bssBANK0     0058
_OPTION_REG                       (abs)        0081
_PORTA                            (abs)        0005
_PORTB                            (abs)        0006
_PortAData                        strings      07B9
_PowerBlocked                     bssBANK0     0059
_RA2                              (abs)        002A
_RA3                              (abs)        002B
_RA5                              (abs)        002D
_RX                               text18       0677
_ReadCell                         text15       05EC
_Reset_powerOnInterval            text5        07C4
_Run_getTemp                      text4        0757
_ShowError                        text14       0797
_T0IF                             (abs)        005A
_T2CON                            (abs)        0012
_TMR0                             (abs)        0001
_TRISA                            (abs)        0085
_TRISA3                           (abs)        042B
_TRISA4                           (abs)        042C
_TRISB                            (abs)        0086
_TX                               text13       056E
_WriteArrayToEEPROM               text10       071F
__CFG_BOREN$OFF                   (abs)        0000
__CFG_CP$OFF                      (abs)        0000
__CFG_CPD$OFF                     (abs)        0000
__CFG_FOSC$INTOSCIO               (abs)        0000
__CFG_LVP$OFF                     (abs)        0000
__CFG_MCLRE$OFF                   (abs)        0000
__CFG_PWRTE$ON                    (abs)        0000
__CFG_WDTE$OFF                    (abs)        0000
__Habs1                           abs1         0000
__Hbank0                          bank0        0000
__Hbank1                          bank1        0000
__Hbank2                          bank2        0000
__Hbank3                          bank3        0000
__HbitbssBANK0                    bitbssBANK0  0000
__HbssBANK0                       bssBANK0     0000
__Hcinit                          cinit        002D
__Hclrtext                        clrtext      0000
__Hcode                           code         0000
__Hcommon                         common       0000
__Hconfig                         config       2008
__HcstackBANK0                    cstackBANK0  0000
__HcstackBANK1                    cstackBANK1  0000
__HcstackCOMMON                   cstackCOMMON 0000
__HdataBANK1                      dataBANK1    0000
__Heeprom_data                    eeprom_data  0000
__Hend_init                       end_init     0011
__Hfunctab                        functab      0000
__HidataBANK1                     idataBANK1   0000
__Hidloc                          idloc        0000
__Hinit                           init         0010
__Hintentry                       intentry     0010
__Hmaintext                       maintext     0000
__Hpa_nodes                       pa_nodes     0000
__Hpowerup                        powerup      0000
__Hram                            ram          0000
__Hreset_vec                      reset_vec    0001
__Hsfr0                           sfr0         0000
__Hsfr1                           sfr1         0000
__Hsfr2                           sfr2         0000
__Hsfr3                           sfr3         0000
__Hspace_0                        (abs)        2008
__Hspace_1                        (abs)        02F3
__Hspace_2                        (abs)        0000
__Hspace_3                        (abs)        0000
__Hstack                          stack        0000
__Hstrings                        strings      0000
__Htext                           text         0000
__Labs1                           abs1         0000
__Lbank0                          bank0        0000
__Lbank1                          bank1        0000
__Lbank2                          bank2        0000
__Lbank3                          bank3        0000
__LbitbssBANK0                    bitbssBANK0  0000
__LbssBANK0                       bssBANK0     0000
__Lcinit                          cinit        0011
__Lclrtext                        clrtext      0000
__Lcode                           code         0000
__Lcommon                         common       0000
__Lconfig                         config       2007
__LcstackBANK0                    cstackBANK0  0000
__LcstackBANK1                    cstackBANK1  0000
__LcstackCOMMON                   cstackCOMMON 0000
__LdataBANK1                      dataBANK1    0000
__Leeprom_data                    eeprom_data  0000
__Lend_init                       end_init     0010
__Lfunctab                        functab      0000
__LidataBANK1                     idataBANK1   0000
__Lidloc                          idloc        0000
__Linit                           init         0010
__Lintentry                       intentry     0004
__Lmaintext                       maintext     0000
__Lpa_nodes                       pa_nodes     0000
__Lpowerup                        powerup      0000
__Lram                            ram          0000
__Lreset_vec                      reset_vec    0000
__Lsfr0                           sfr0         0000
__Lsfr1                           sfr1         0000
__Lsfr2                           sfr2         0000
__Lsfr3                           sfr3         0000
__Lspace_0                        (abs)        0000
__Lspace_1                        (abs)        0000
__Lspace_2                        (abs)        0000
__Lspace_3                        (abs)        0000
__Lstack                          stack        0000
__Lstrings                        strings      0000
__Ltext                           text         0000
__S0                              (abs)        2008
__S1                              (abs)        00C8
__S2                              (abs)        0000
__S3                              (abs)        0000
___awdiv                          text25       0419
___awdiv@counter                  cstackBANK0  0030
___awdiv@dividend                 cstackBANK0  002E
___awdiv@divisor                  cstackBANK0  002C
___awdiv@quotient                 cstackBANK0  0032
___awdiv@sign                     cstackBANK0  0031
___awmod                          text24       04A3
___awmod@counter                  cstackBANK0  0030
___awmod@dividend                 cstackBANK0  002E
___awmod@divisor                  cstackBANK0  002C
___awmod@sign                     cstackBANK0  0031
___int_sp                         stack        0000
___latbits                        (abs)        0000
___lbdiv                          text3        06D3
___lbdiv@counter                  cstackBANK0  002E
___lbdiv@dividend                 cstackBANK0  002D
___lbdiv@divisor                  cstackBANK0  002C
___lbdiv@quotient                 cstackBANK0  002F
___lbmod                          text2        06B7
___lbmod@counter                  cstackBANK0  002F
___lbmod@dividend                 cstackBANK0  002E
___lbmod@divisor                  cstackBANK0  002C
___lbmod@rem                      cstackBANK0  0030
___sp                             stack        0000
___wmul                           text33       06EE
___wmul@multiplicand              cstackCOMMON 0072
___wmul@multiplier                cstackCOMMON 0070
___wmul@product                   cstackCOMMON 0074
__end_ofPL2                       text27       0116
__end_ofPL4                       text27       011E
__end_ofPL6                       text7        02B6
__end_of_CellToInd                text20       056E
__end_of_EERD                     text17       0797
__end_of_EEWR                     text12       071F
__end_of_EditAddressMemory        text7        02B1
__end_of_F                        text26       0360
__end_of_FillArrayFromEEPROM      text16       0779
__end_of_FindCell                 text6        0419
__end_of_INIT                     text19       0540
__end_of_PortAData                strings      07BC
__end_of_RX                       text18       0698
__end_of_ReadCell                 text15       0611
__end_of_Reset_powerOnInterval    text5        07CA
__end_of_Run_getTemp              text4        0768
__end_of_ShowError                text14       07A5
__end_of_TX                       text13       0599
__end_of_WriteArrayToEEPROM       text10       0732
__end_of___awdiv                  text25       045E
__end_of___awmod                  text24       04E0
__end_of___lbdiv                  text3        06EE
__end_of___lbmod                  text2        06D3
__end_of___wmul                   text33       0707
__end_of__initialization          cinit        002B
__end_of__stringtab               strings      07B9
__end_of_calc_crc                 text9        0677
__end_of_clrInd                   text23       07B3
__end_of_convDig                  text34       0511
__end_of_get_temp_Async           text27       010E
__end_of_indData                  text1        03D4
__end_of_main                     maintext     01F3
__end_of_refreshInd               text22       0745
__end_of_setDigit                 text21       0757
__end_of_setPoint                 text8        0788
__end_of_waitInterrupt            text11       07CF
__end_ofi1_INIT                   text32       05C3
__end_ofi1_RX                     text31       06B7
__end_ofi1_TX                     text30       05EC
__end_ofi1___awdiv                text29       04A3
__end_ofi1_calc_crc               text28       0656
__initialization                  cinit        0011
__pbitbssBANK0                    bitbssBANK0  02F0
__pbssBANK0                       bssBANK0     0043
__pcstackBANK0                    cstackBANK0  0020
__pcstackBANK1                    cstackBANK1  00A0
__pcstackCOMMON                   cstackCOMMON 0070
__pdataBANK1                      dataBANK1    00B7
__pidataBANK1                     idataBANK1   0000
__pintentry                       intentry     0004
__pmaintext                       maintext     011E
__pstrings                        strings      07B3
__pswtext1                        swtext1      0611
__ptext1                          text1        0360
__ptext10                         text10       071F
__ptext11                         text11       07CA
__ptext12                         text12       0707
__ptext13                         text13       056E
__ptext14                         text14       0797
__ptext15                         text15       05EC
__ptext16                         text16       0768
__ptext17                         text17       0788
__ptext18                         text18       0677
__ptext19                         text19       0511
__ptext2                          text2        06B7
__ptext20                         text20       0540
__ptext21                         text21       0745
__ptext22                         text22       0732
__ptext23                         text23       07A5
__ptext24                         text24       04A3
__ptext25                         text25       0419
__ptext26                         text26       02B6
__ptext27                         text27       002D
__ptext28                         text28       0634
__ptext29                         text29       045E
__ptext3                          text3        06D3
__ptext30                         text30       05C3
__ptext31                         text31       0698
__ptext32                         text32       0599
__ptext33                         text33       06EE
__ptext34                         text34       04E0
__ptext4                          text4        0757
__ptext5                          text5        07C4
__ptext6                          text6        03D4
__ptext7                          text7        01F3
__ptext8                          text8        0779
__ptext9                          text9        0656
__size_of_CellToInd               (abs)        0000
__size_of_EERD                    (abs)        0000
__size_of_EEWR                    (abs)        0000
__size_of_EditAddressMemory       (abs)        0000
__size_of_F                       (abs)        0000
__size_of_FillArrayFromEEPROM     (abs)        0000
__size_of_FindCell                (abs)        0000
__size_of_INIT                    (abs)        0000
__size_of_RX                      (abs)        0000
__size_of_ReadCell                (abs)        0000
__size_of_Reset_powerOnInterval   (abs)        0000
__size_of_Run_getTemp             (abs)        0000
__size_of_ShowError               (abs)        0000
__size_of_TX                      (abs)        0000
__size_of_WriteArrayToEEPROM      (abs)        0000
__size_of___awdiv                 (abs)        0000
__size_of___awmod                 (abs)        0000
__size_of___lbdiv                 (abs)        0000
__size_of___lbmod                 (abs)        0000
__size_of___wmul                  (abs)        0000
__size_of_calc_crc                (abs)        0000
__size_of_clrInd                  (abs)        0000
__size_of_convDig                 (abs)        0000
__size_of_get_temp_Async          (abs)        0000
__size_of_indData                 (abs)        0000
__size_of_main                    (abs)        0000
__size_of_refreshInd              (abs)        0000
__size_of_setDigit                (abs)        0000
__size_of_setPoint                (abs)        0000
__size_of_waitInterrupt           (abs)        0000
__size_ofi1_INIT                  (abs)        0000
__size_ofi1_RX                    (abs)        0000
__size_ofi1_TX                    (abs)        0000
__size_ofi1___awdiv               (abs)        0000
__size_ofi1_calc_crc              (abs)        0000
__stringbase                      strings      07B8
__stringtab                       strings      07B3
_calc_crc                         text9        0656
_clrInd                           text23       07A5
_convDig                          text34       04E0
_digitemp                         bssBANK0     005A
_digits                           bssBANK0     0048
_digits_0                         bssBANK0     004B
_endInterrupt                     bitbssBANK0  02F2
_getTemp_flags                    bssBANK0     0043
_get_temp_Async                   text27       002D
_indData                          text1        0360
_main                             maintext     011E
_main$273                         cstackBANK1  00B1
_powerOnInterval                  bssBANK0     0050
_refreshInd                       text22       0732
_setDigit                         text21       0745
_setPoint                         text8        0779
_sign                             bssBANK0     005B
_temp_drob                        bssBANK0     005C
_temperature                      bssBANK0     005D
_waitInterrupt                    text11       07CA
btemp                             (abs)        007E
calc_crc@crc                      cstackBANK0  0031
calc_crc@dat                      cstackBANK0  002D
calc_crc@fb                       cstackBANK0  002E
calc_crc@i                        cstackBANK0  0030
calc_crc@len                      cstackBANK0  002C
calc_crc@mas                      cstackBANK0  002F
clear_ram0                        clrtext      07BC
clrInd@a                          cstackBANK0  002C
convDig@dig                       cstackCOMMON 0070
end_of_initialization             cinit        002B
get_temp_Async@i                  cstackBANK0  0022
get_temp_Async@temp1              cstackBANK0  0023
get_temp_Async@temp2              cstackBANK0  0024
i1RX@d                            cstackCOMMON 0071
i1RX@i                            cstackCOMMON 0072
i1TX@cmd                          cstackCOMMON 0071
i1TX@i                            cstackCOMMON 0073
i1TX@temp                         cstackCOMMON 0072
i1_INIT                           text32       0599
i1_RX                             text31       0698
i1_TX                             text30       05C3
i1___awdiv                        text29       045E
i1___awdiv@counter                cstackCOMMON 007A
i1___awdiv@dividend               cstackCOMMON 0078
i1___awdiv@divisor                cstackCOMMON 0076
i1___awdiv@quotient               cstackCOMMON 007C
i1___awdiv@sign                   cstackCOMMON 007B
i1_calc_crc                       text28       0634
i1calc_crc@crc                    cstackCOMMON 0075
i1calc_crc@dat                    cstackCOMMON 0072
i1calc_crc@fb                     cstackCOMMON 0073
i1calc_crc@i                      cstackCOMMON 0074
i1calc_crc@len                    cstackCOMMON 0070
i1calc_crc@mas                    cstackCOMMON 0071
indData@cd                        cstackBANK0  003C
indData@dN                        cstackBANK0  003D
indData@isPoint                   cstackBANK0  003A
indData@v                         cstackBANK0  003B
indData@v_241                     cstackBANK0  0039
interrupt_function                intentry     0004
intlevel0                         functab      0000
intlevel1                         functab      0000
intlevel2                         functab      0000
intlevel3                         functab      0000
intlevel4                         functab      0000
intlevel5                         functab      0000
ltemp                             (abs)        007E
ltemp0                            (abs)        007E
ltemp1                            (abs)        0082
ltemp2                            (abs)        0086
ltemp3                            (abs)        0080
main@TheStart                     cstackBANK1  00B3
main@X                            cstackBANK1  00AE
main@Z                            cstackBANK1  00B6
main@address                      cstackBANK1  00B5
main@cell                         cstackBANK1  00B4
main@point_on_ind_delay           cstackBANK1  00AF
refreshInd@a                      cstackBANK0  002D
reset_vec                         reset_vec    0000
saved_w                           (abs)        007E
setDigit@a                        cstackBANK0  0037
setDigit@data                     cstackBANK0  0034
setPoint@dignum                   cstackBANK0  002D
setPoint@value                    cstackBANK0  002C
stackhi                           (abs)        0000
stacklo                           (abs)        0000
start                             init         0010
start_initialization              cinit        0011
ttemp                             (abs)        007E
ttemp0                            (abs)        007E
ttemp1                            (abs)        0081
ttemp2                            (abs)        0084
ttemp3                            (abs)        0087
ttemp4                            (abs)        007F
wtemp                             (abs)        007E
wtemp0                            (abs)        007E
wtemp1                            (abs)        0080
wtemp2                            (abs)        0082
wtemp3                            (abs)        0084
wtemp4                            (abs)        0086
wtemp5                            (abs)        0088
wtemp6                            (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 760 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  point_on_ind    2   15[BANK1 ] unsigned int 
  data_on_ind_    2    0        unsigned int 
  address         1   21[BANK1 ] unsigned char 
  cell            1   20[BANK1 ] unsigned char 
  TheStart        1   19[BANK1 ] unsigned char 
  Z               1   22[BANK1 ] volatile unsigned char 
  X               1   14[BANK1 ] volatile unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       9       0
      Temps:          0       1       0       0
      Totals:         0       1       9       0
Total ram usage:       10 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_CellToInd
		_EditAddressMemory
		_FillArrayFromEEPROM
		_FindCell
		_Reset_powerOnInterval
		_Run_getTemp
		_ShowError
		_clrInd
		_indData
		_refreshInd
		_setDigit
		_setPoint
		_waitInterrupt
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _indData *****************
 Defined at:
		line 585 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  v               1   25[BANK0 ] unsigned char 
  v               1   27[BANK0 ] unsigned char 
  dN              1   29[BANK0 ] unsigned char 
  cd              1   28[BANK0 ] unsigned char 
  isPoint         1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       5       0       0
      Temps:          0       1       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lbdiv
		___lbmod
		_setDigit
		_setPoint
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   14[BANK0 ] unsigned char 
  rem             1   16[BANK0 ] unsigned char 
  counter         1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
 This function uses a non-reentrant model


 *************** function ___lbdiv *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1   13[BANK0 ] unsigned char 
  quotient        1   15[BANK0 ] unsigned char 
  counter         1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
 This function uses a non-reentrant model


 *************** function _Run_getTemp *****************
 Defined at:
		line 743 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Reset_powerOnInterval *****************
 Defined at:
		line 85 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _FindCell *****************
 Defined at:
		line 444 in file "prog.c"
 Parameters:    Size  Location     Type
  addressStart    1    wreg     unsigned char 
  previous        1   20[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  addressStart    1   31[BANK0 ] unsigned char 
  i               1   32[BANK0 ] unsigned char 
  CellsData       8   21[BANK0 ] unsigned char [8]
  CellIsEmpty     1   30[BANK0 ] unsigned char 
  address         1   33[BANK0 ] unsigned char 
  addressNew      1   29[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0      13       0       0
      Temps:          0       0       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_FillArrayFromEEPROM
		_waitInterrupt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _EditAddressMemory *****************
 Defined at:
		line 652 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   10[BANK1 ] unsigned char 
  i               1   11[BANK1 ] unsigned char 
  CellsData       8    0[BANK1 ] unsigned char [8]
  cell            1   13[BANK1 ] unsigned char 
  CellIsEmpty     1   12[BANK1 ] unsigned char 
  RereadCell      1    9[BANK1 ] unsigned char 
  ErrorShowed     1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      14       0
      Temps:          0       1       0       0
      Totals:         0       1      14       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_CellToInd
		_INIT
		_RX
		_ReadCell
		_ShowError
		_TX
		_WriteArrayToEEPROM
		_calc_crc
		_clrInd
		_refreshInd
		_setPoint
		_waitInterrupt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setPoint *****************
 Defined at:
		line 97 in file "prog.c"
 Parameters:    Size  Location     Type
  dignum          1    wreg     unsigned char 
  value           1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dignum          1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_indData
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _calc_crc *****************
 Defined at:
		line 256 in file "prog.c"
 Parameters:    Size  Location     Type
  mas             1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), DS_ReadData(9), 
  len             1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  mas             1   15[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), DS_ReadData(9), 
  fb              1   14[BANK0 ] unsigned char 
  i               1   16[BANK0 ] unsigned char 
  dat             1   13[BANK0 ] unsigned char 
  crc             1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       5       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _WriteArrayToEEPROM *****************
 Defined at:
		line 195 in file "prog.c"
 Parameters:    Size  Location     Type
  container       1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), 
  address_star    1   15[BANK0 ] unsigned char 
  quantity        1   16[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  container       1   18[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), 
  i               1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EEWR
		_waitInterrupt
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _waitInterrupt *****************
 Defined at:
		line 80 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_WriteArrayToEEPROM
		_FindCell
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _EEWR *****************
 Defined at:
		line 162 in file "prog.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  data            1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  address         1   13[BANK0 ] unsigned char 
  INTCON_BUP      1   14[BANK0 ] volatile unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_WriteArrayToEEPROM
 This function uses a non-reentrant model


 *************** function _TX *****************
 Defined at:
		line 218 in file "prog.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1   13[BANK0 ] unsigned char 
  i               1   15[BANK0 ] unsigned char 
  temp            1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _ShowError *****************
 Defined at:
		line 113 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_clrInd
		_refreshInd
		_setDigit
 This function is called by:
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _ReadCell *****************
 Defined at:
		line 625 in file "prog.c"
 Parameters:    Size  Location     Type
  cell            1    wreg     unsigned char 
  CellsData       1   20[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), 
  CellIsEmpty     1   21[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellIsEmpty(1), 
 Auto vars:     Size  Location     Type
  cell            1   23[BANK0 ] unsigned char 
  i               1   25[BANK0 ] unsigned char 
  _CellIsEmpty    1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_FillArrayFromEEPROM
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _FillArrayFromEEPROM *****************
 Defined at:
		line 188 in file "prog.c"
 Parameters:    Size  Location     Type
  container       1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), FindCell@CellsData(8), DS_Address(8), 
  address_star    1   15[BANK0 ] unsigned char 
  quantity        1   16[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  container       1   18[BANK0 ] PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), FindCell@CellsData(8), DS_Address(8), 
  i               1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_EERD
 This function is called by:
		_FindCell
		_ReadCell
		_main
 This function uses a non-reentrant model


 *************** function _EERD *****************
 Defined at:
		line 177 in file "prog.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  address         1   12[BANK0 ] unsigned char 
  EEDATA_BUP      1   14[BANK0 ] volatile unsigned char 
  INTCON_BUP      1   13[BANK0 ] volatile unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_FillArrayFromEEPROM
 This function uses a non-reentrant model


 *************** function _RX *****************
 Defined at:
		line 242 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   14[BANK0 ] unsigned char 
  d               1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _INIT *****************
 Defined at:
		line 203 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_EditAddressMemory
 This function uses a non-reentrant model


 *************** function _CellToInd *****************
 Defined at:
		line 637 in file "prog.c"
 Parameters:    Size  Location     Type
  cell            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cell            1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___awmod
		_clrInd
		_refreshInd
		_setDigit
 This function is called by:
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _setDigit *****************
 Defined at:
		line 93 in file "prog.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  data            1   20[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1   23[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ShowError
		_indData
		_CellToInd
		_main
 This function uses a non-reentrant model


 *************** function _refreshInd *****************
 Defined at:
		line 101 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  a               1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ShowError
		_CellToInd
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function _clrInd *****************
 Defined at:
		line 107 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  a               1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ShowError
		_CellToInd
		_EditAddressMemory
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2   12[BANK0 ] int 
  dividend        2   14[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   17[BANK0 ] unsigned char 
  counter         1   16[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2   12[BANK0 ] int 
  dividend        2   14[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   18[BANK0 ] int 
  sign            1   17[BANK0 ] unsigned char 
  counter         1   16[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_CellToInd
 This function uses a non-reentrant model


 *************** function _F *****************
 Defined at:
		line 478 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  CurrentKeysS    1   11[BANK0 ] unsigned char 
  dig             1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       5       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_convDig
		_get_temp_Async
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _get_temp_Async *****************
 Defined at:
		line 347 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp2           1    4[BANK0 ] unsigned char 
  temp1           1    3[BANK0 ] unsigned char 
  i               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___wmul
		i1_INIT
		i1_RX
		i1_TX
		i1___awdiv
		i1_calc_crc
 This function is called by:
		_F
 This function uses a non-reentrant model


 *************** function i1_calc_crc *****************
 Defined at:
		line 256 in file "prog.c"
 Parameters:    Size  Location     Type
  mas             1    wreg     PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), DS_ReadData(9), 
  len             1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  mas             1    1[COMMON] PTR unsigned char 
		 -> EditAddressMemory@CellsData(8), DS_ReadData(9), 
  calc_crc        1    5[COMMON] unsigned char 
  calc_crc        1    4[COMMON] unsigned char 
  calc_crc        1    3[COMMON] unsigned char 
  calc_crc        1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         5       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[COMMON] int 
  dividend        2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  __awdiv         2   12[COMMON] int 
  __awdiv         1   11[COMMON] unsigned char 
  __awdiv         1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_TX *****************
 Defined at:
		line 218 in file "prog.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    1[COMMON] unsigned char 
  TX              1    3[COMMON] unsigned char 
  TX              1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_RX *****************
 Defined at:
		line 242 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  RX              1    2[COMMON] unsigned char 
  RX              1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function i1_INIT *****************
 Defined at:
		line 203 in file "prog.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_temp_Async
 This function uses a non-reentrant model


 *************** function _convDig *****************
 Defined at:
		line 121 in file "prog.c"
 Parameters:    Size  Location     Type
  dig             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dig             1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_F
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	04A3	0000	62

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 62

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	06EE	0000	26

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 26

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	0419	0000	70

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 70

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c
		___lbmod       		CODE           	06B7	0000	29

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbmod.c estimated size: 29

shared
		__stringtab    		STRING         	07B3	0000	7
		i1_calc_crc    		CODE           	0634	0000	35
		i1___awdiv     		CODE           	045E	0000	70
		__initialization		CODE           	0011	0000	27
		_PortAData     		STRING         	07B9	0000	4
		i1_RX          		CODE           	0698	0000	32
		i1_TX          		CODE           	05C3	0000	42
		PL2            		CODE           	010E	0000	9
		PL4            		CODE           	0116	0000	9
		PL6            		CODE           	02B1	0000	6
		i1_INIT        		CODE           	0599	0000	43

shared estimated size: 284

prog.c
		_indData       		CODE           	0360	0000	117
		_setDigit      		CODE           	0745	0000	19
		_convDig       		CODE           	04E0	0000	50
		_EEWR          		CODE           	0707	0000	25
		_Reset_powerOnInterval		CODE           	07C4	0000	7
		_refreshInd    		CODE           	0732	0000	20
		_calc_crc      		CODE           	0656	0000	34
		_setPoint      		CODE           	0779	0000	16
		_waitInterrupt 		CODE           	07CA	0000	6
		_main          		CODE           	011E	0000	214
		_EditAddressMemory		CODE           	01F3	0000	191
		_ReadCell      		CODE           	05EC	0000	38
		_get_temp_Async		CODE           	002D	0000	226
		_WriteArrayToEEPROM		CODE           	071F	0000	20
		_FillArrayFromEEPROM		CODE           	0768	0000	18
		_Run_getTemp   		CODE           	0757	0000	18
		_EERD          		CODE           	0788	0000	16
		_ShowError     		CODE           	0797	0000	15
		_CellToInd     		CODE           	0540	0000	47
		_F             		CODE           	02B6	0000	171
		_RX            		CODE           	0677	0000	34
		_TX            		CODE           	056E	0000	44
		_INIT          		CODE           	0511	0000	48
		_clrInd        		CODE           	07A5	0000	15
		_FindCell      		CODE           	03D4	0000	70

prog.c estimated size: 1479

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c
		___lbdiv       		CODE           	06D3	0000	28

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lbdiv.c estimated size: 28

